{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"t",
				"teams"
			],
			[
				"pu",
				"push_back"
			],
			[
				"P",
				"Print_tree"
			],
			[
				"ba",
				"pop_back"
			],
			[
				"print",
				"printf"
			],
			[
				"G",
				"GList"
			],
			[
				"se",
				"sever"
			],
			[
				"l",
				"length"
			],
			[
				"co",
				"compare"
			],
			[
				"GL",
				"GLNode"
			],
			[
				"a",
				"atom"
			],
			[
				"de",
				"default"
			],
			[
				"C",
				"COORD"
			],
			[
				"pr",
				"printf"
			],
			[
				"get",
				"getch"
			],
			[
				"n",
				"nextval"
			],
			[
				"g",
				"get_next"
			],
			[
				"OL",
				"OLink"
			],
			[
				"p",
				"printf"
			],
			[
				"re",
				"result"
			],
			[
				"i",
				"InsertNode"
			],
			[
				"F",
				"FINITY"
			],
			[
				"e",
				"edges"
			],
			[
				"v",
				"vexs"
			],
			[
				"f",
				"front"
			],
			[
				"adj",
				"adjlist"
			],
			[
				"vist",
				"visited"
			],
			[
				"vis",
				"visited"
			],
			[
				"Bi",
				"BiTree"
			],
			[
				"su",
				"stuId"
			],
			[
				"m",
				"memoryAdd"
			],
			[
				"b",
				"blue"
			],
			[
				"Ne",
				"NewtonSolvingEquations"
			],
			[
				"ti",
				"time_t"
			],
			[
				"stdli",
				"cstdlib\tstandard header"
			],
			[
				"ge",
				"get_next"
			],
			[
				"Fib",
				"FibonacciNum"
			],
			[
				"L",
				"List"
			],
			[
				"ma",
				"mark"
			],
			[
				"ph",
				"phone"
			],
			[
				"inc",
				"include"
			],
			[
				"h",
				"head"
			],
			[
				"S",
				"Students"
			],
			[
				"size",
				"sizeof"
			],
			[
				"M",
				"Menu"
			],
			[
				"u",
				"UTF-8"
			],
			[
				"ios",
				"iostream\tstandard header"
			],
			[
				"fp",
				"fp"
			],
			[
				"s",
				"score"
			],
			[
				"c",
				"classname"
			],
			[
				"w",
				"while"
			],
			[
				"el",
				"else"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "TSData = ncread('E:\\data\\yFTS.nc','ts');\nsubplot(11,2,1);\nplot(TSData);\nIMF = eemd(TSData(:),0.25,1000);\nfor i=2:9\n    subplot(11,2,i);\n    plot(IMF(:,i), 'r');\n    hold on\n    plot(1:0.8:2000, 0, 'k');\n    set(gca,'YLim',[-1,1],'YTick',[-1:1])\nend\nY =fft(detrend(IMF(:,2)));       %快速FFT变换\nN = length(Y);    %FFT变换后数据长度\npower = abs(Y(1:N/2)).^2;  %求功率谱\nnyquist = 1/2;\nfreq = (1:N/2)/(N/2)*nyquist; %求频率\nsubplot(11,2,10);\nplot(freq,power); grid on     %绘制功率谱图\nxlabel('频率')\nylabel('功率')\ntitle('功率谱图')\nperiod = 1./freq;                %计算周期\nsubplot(11,2,11);\nplot(period,power); grid on  %绘制周期－功率谱曲线\nylabel('功率')\nxlabel('周期')\ntitle('周期―功率谱图')\n[mp,index] = max(power);       %求最高谱线所对应的下标\nT_mean=period(index);            %由下标求出平均周期",
			"file": "/E/Data/EEMD-Project-master/main_eemd.m",
			"file_size": 805,
			"file_write_time": 131347568080000000,
			"settings":
			{
				"buffer_size": 728,
				"line_ending": "Unix",
				"scratch": true
			},
			"undo_stack":
			[
				[
					1,
					1,
					"convert_to_utf8",
					{
						"detect_on_fail": false,
						"stamp": "1635839200.6146407"
					},
					"AQAAAAAAAAAAAAAA2AIAAAAAAAC/AwAAVFNEYXRhID0gbmNyZWFkKCdFOlxkYXRhXHlGVFMubmMnLCd0cycpOwpzdWJwbG90KDExLDIsMSk7CnBsb3QoVFNEYXRhKTsKSU1GID0gZWVtZChUU0RhdGEoOiksMC4yNSwxMDAwKTsKZm9yIGk9Mjo5CiAgICBzdWJwbG90KDExLDIsaSk7CiAgICBwbG90KElNRig6LGkpLCAncicpOwogICAgaG9sZCBvbgogICAgcGxvdCgxOjAuODoyMDAwLCAwLCAnaycpOwogICAgc2V0KGdjYSwnWUxpbScsWy0xLDFdLCdZVGljaycsWy0xOjFdKQplbmQKWSA9ZmZ0KGRldHJlbmQoSU1GKDosMikpKTsgICAgICAgJcK/w6zDi8OZRkZUwrHDpMK7wrsKTiA9IGxlbmd0aChZKTsgICAgJUZGVMKxw6TCu8K7wrrDs8OKw73CvsOdwrPCpMK2w4gKcG93ZXIgPSBhYnMoWSgxOk4vMikpLl4yOyAgJcOHw7PCucKmw4LDisOGw5cKbnlxdWlzdCA9IDEvMjsKZnJlcSA9ICgxOk4vMikvKE4vMikqbnlxdWlzdDsgJcOHw7PDhsK1w4LDigpzdWJwbG90KDExLDIsMTApOwpwbG90KGZyZXEscG93ZXIpOyBncmlkIG9uICAgICAlwrvDpsOWw4bCucKmw4LDisOGw5fDjcK8CnhsYWJlbCgnw4bCtcOCw4onKQp5bGFiZWwoJ8K5wqbDgsOKJykKdGl0bGUoJ8K5wqbDgsOKw4bDl8ONwrwnKQpwZXJpb2QgPSAxLi9mcmVxOyAgICAgICAgICAgICAgICAlwrzDhsOLw6PDlsOcw4bDmgpzdWJwbG90KDExLDIsMTEpOwpwbG90KHBlcmlvZCxwb3dlcik7IGdyaWQgb24gICXCu8Omw5bDhsOWw5zDhsOawqPCrcK5wqbDgsOKw4bDl8OHw7rDj8OfCnlsYWJlbCgnwrnCpsOCw4onKQp4bGFiZWwoJ8OWw5zDhsOaJykKdGl0bGUoJ8OWw5zDhsOawqHCqsK5wqbDgsOKw4bDl8ONwrwnKQpbbXAsaW5kZXhdID0gbWF4KHBvd2VyKTsgICAgICAgJcOHw7PDl8OuwrjDn8OGw5fDj8Ofw4vDucK2w5TDk8KmwrXDhMOPw4LCscOqClRfbWVhbj1wZXJpb2QoaW5kZXgpOyAgICAgICAgICAgICXDk8OJw4/DgsKxw6rDh8OzwrPDtsOGwr3CvsO5w5bDnMOGw5o",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "/E/Data/GIS/roi_gcs.prj",
			"settings":
			{
				"buffer_size": 145,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "using System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Drawing;\nusing System.Linq;\nusing System.Text;\nusing System.Windows.Forms;\nusing System.IO;\nusing System.Xml;\nusing System.Diagnostics;\n\nusing ESRI.ArcGIS.Controls;\nusing ESRI.ArcGIS.Carto;\nusing ESRI.ArcGIS.SystemUI;\nusing ESRI.ArcGIS.Geometry;\nusing ESRI.ArcGIS.Display;\nusing ESRI.ArcGIS.esriSystem;\nusing ESRI.ArcGIS.Geodatabase;\nusing ESRI.ArcGIS.DataSourcesGDB;\nusing ESRI.ArcGIS.DataSourcesRaster;\n\nusing DevExpress.XtraCharts;\nusing DevExpress.XtraBars.Alerter;\nusing System.Collections;\nusing DevExpress.XtraBars.Ribbon;\nusing DevExpress.XtraBars.Helpers;\nusing System.Threading;\nusing ESRI.ArcGIS.NetworkAnalyst;\nusing ESRI.ArcGIS.Geoprocessor;\nusing ESRI.ArcGIS.Geoprocessing;\nusing ESRI.ArcGIS.DataSourcesFile;\nusing DevExpress.XtraRichEdit.API.Native;\nusing System.Data.OleDb;\nusing MySql.Data.MySqlClient;\nnamespace MPIS\n{\n    public partial class frmMain : DevExpress.XtraBars.Ribbon.RibbonForm\n    {\n        #region 公共变量用于表示整个系统都能访问的图层控件和环境变量\n        public static IMapControl3 m_mapControl = null;\n        public static ITOCControl2 m_pTocControl = null;\n        private static System.Diagnostics.Process p;\n\n        String m_mapDocumentName = \"\";\n        IToolbarMenu m_pMenuLayer;\n        //右键菜单\n        private IToolbarMenu m_ToolbarMenu = new ToolbarMenuClass();\n\n        //当前窗体实例\n        public frmMain pCurrentWin = null;\n        //当前主地图控件实例\n        public AxMapControl pCurrentMap = null;\n        //当前鹰眼控件实例\n        public AxMapControl pCurrentSmallMap = null;\n        //当前TOC控件实例\n        public AxTOCControl pCurrentTOC = null;\n\n        //用于显示图层文本提示\n        public static bool isCheckTip;\n        public static int isCheckTipListIndex;\n\n        public float ps = (float)10.0;//set the resolution\n        //控制自定义对话框的事件\n        private ICustomizeDialog m_CustomizeDialog = new CustomizeDialogClass(); // CurtomizeDialog被ToolbarControl使用\n        private ICustomizeDialogEvents_OnStartDialogEventHandler startDialogE; // CustomizeDialog启动事件\n        private ICustomizeDialogEvents_OnCloseDialogEventHandler closeDialogE; // CustomizeDialog关闭事件\n\n        //用于判断当前鼠标点击的菜单命令,以备在地图控件中判断操作\n        CustomTool m_cTool;\n        private IScreenDisplay3 m_focusScreenDisplay = null;// For 平移\n\n        String richText = \"->欢迎使用本系统\\n->系统名称: 气象站点数据管理和预处理及网格化系统\\n->版本号: V3.0\\n->\";\n\n        //For 放大,缩小，平移\n        INewEnvelopeFeedback m_feedBack;//  '拉框\n        IPoint m_mouseDownPoint;\n        bool m_isMouseDown;\n        public bool frmAttriQueryisOpen = false;\n\n        public BackgroundWorker BGW1;\n        public BackgroundWorker BGW2;\n        public BackgroundWorker BGW3;\n\n        //NA分析变量\n        INetworkDataset NetData;\n        INAContext _Context;\n        IPointCollection m_ipPoints;\n        ISpatialReference spatialRef;\n        IGraphicsContainer pGC;\n        bool IsAnlysis = false;\n        ClsPathFinder m_ipPathFinder = null;\n        #endregion\n\n        public enum CustomTool\n        {\n            None = 0,\n            ZoomIn = 1,\n            ZoomOut = 2,\n            Pan = 3,\n            RuleMeasure = 4,\n            AreaMeasure = 5,\n            PointSelect = 6,\n            RectSelect = 7,\n            PolygonSelect = 8,\n            CircleSelect = 9,\n            NAanalysis = 10\n        };\n        public frmMain()\n        {\n            InitializeComponent();\n            \n        }\n        public void showInfoFun(String textType, int ch)\n        {\n            if (ch == 1)\n            {\n\n                this.showInfo.Document.AppendText(textType + \"\\n->\");\n                showInfo_Click(showInfo, new EventArgs());\n                this.showInfo.Focus();\n            }\n            else if (ch == 3)\n            {\n                this.showInfo.Document.AppendText(textType + \"\\n\");\n                showInfo_Click(showInfo, new EventArgs());\n                this.showInfo.Focus();\n            }\n            else\n                this.showInfo.Document.AppendText(textType);\n        }\n\n        private void getVarsName()\n        {\n            String varsPath = GlobVars.AppStartPath + @\"\\dataBase\\meteoName\\mName.txt\";\n            ArrayList varsList;\n\n            if (!GlobFuncs.loadVars(varsPath, out varsList))\n                this.showInfoFun(\"Error loading variables！\", 1);\n            else\n            {\n                SelVars.Properties.Items.Clear();\n                foreach (String vL in varsList)\n                {\n                    SelVars.Properties.Items.Add(vL);\n                }\n            }\n        }\n        private void mainForm_Load(object sender, EventArgs e)\n        {\n            this.showInfo.Text = richText;\n            //this.splitContainerControl1.SplitterPosition = (int)((this.splitContainerControl1.Size.Height) * 0.80);\n            this.timer1.Enabled = true;\n            this.status_date.Caption = \"系统时间： \" + DateTime.Now.ToString();\n            //将地图控件赋给变量，这样就可以使用接口所暴露的属性和方法了\n            //MainMapOper属于主框架的私有控件，外部不能访问，所以采用这种模式可以通过公共变量的形式操作\n            m_mapControl = (IMapControl3)MainMapOper.Object;\n            m_pTocControl = (ITOCControl2)axTOCControl1.Object;\n            axToolbarControl1.SetBuddyControl(m_mapControl);\n            isCheckTip = false;\n            isCheckTipListIndex = -1;\n\n            //TOC控件绑定地图控件\n            m_pTocControl.SetBuddyControl(m_mapControl);\n            this.MainMapOper.Map.Name = \"图层\";\n            this.axTOCControl1.Update();\n\n            this.dateEnd.EditValue = DateTime.Now.ToString(\"yyyy-MM-dd\");\n\n            BGW1 = new BackgroundWorker();\n            BGW1.WorkerReportsProgress = true;\n            BGW1.DoWork += new DoWorkEventHandler(BGW1_DoWork);\n            BGW1.ProgressChanged += new ProgressChangedEventHandler(BGW1_ProgressChanged);\n\n            BGW2 = new BackgroundWorker();\n            BGW2.WorkerReportsProgress = true;\n            BGW2.DoWork += new DoWorkEventHandler(BGW2_DoWork);\n            BGW2.ProgressChanged += new ProgressChangedEventHandler(BGW2_ProgressChanged);\n\n            BGW3 = new BackgroundWorker();\n            BGW3.WorkerReportsProgress = true;\n            BGW3.DoWork += new DoWorkEventHandler(BGW3_DoWork);\n            BGW3.ProgressChanged += new ProgressChangedEventHandler(BGW3_ProgressChanged);\n            getVarsName();\n\n            #region\n            GetMachineCode Getmac = new GetMachineCode();\n            if (Getmac.IsRegeditExit(\"MPIS\"))\n            {\n                this.Text = \"气象站点数据管理和预处理及网格化系统-[未注册版本]\";\n                this.frmclose.Enabled = true;\n\n            }\n            else\n            {\n                SoftRegister.Visible = false;\n            }\n            #endregion\n            #region(初始化菜单)\n            //初始化菜单工具栏命令\n            UID pUid = new ESRI.ArcGIS.esriSystem.UID();\n            pUid.Value = \"esriControls.ControlsOpenDocCommand\";\n            pUid.Value = \"esriControls.ControlsMapZoomInTool\";\n            pUid.Value = \"esriControls.ControlsMapZoomOutTool\";\n            pUid.Value = \"esriControls.ControlsMapPanTool\";\n            pUid.Value = \"esriControls.ControlsMapFullExtentCommand\";\n            pUid.Value = \"esriControls.ControlsMapZoomToLastExtentBackCommand\";\n            pUid.Value = \"esriControls.ControlsMapZoomToLastExtentForwardCommand\";\n\n            String progID;//初始化地图控件右键快捷菜单工具栏命令\n            progID = \"esriControls.ControlsMapFullExtentCommand\";\n            m_ToolbarMenu.AddItem(progID, -1, -1, false, esriCommandStyles.esriCommandStyleIconOnly);\n            progID = \"esriControls.ControlsMapZoomPanTool\";\n            m_ToolbarMenu.AddItem(progID, -1, -1, false, esriCommandStyles.esriCommandStyleIconOnly);\n            progID = \"esriControls.ControlsMapZoomInTool\";\n            m_ToolbarMenu.AddItem(progID, -1, -1, false, esriCommandStyles.esriCommandStyleIconOnly);\n            progID = \"esriControls.ControlsMapZoomOutTool\";\n            m_ToolbarMenu.AddItem(progID, -1, -1, false, esriCommandStyles.esriCommandStyleIconOnly);\n            progID = \"esriControls.ControlsMapPanTool\";\n            m_ToolbarMenu.AddItem(progID, -1, -1, false, esriCommandStyles.esriCommandStyleIconOnly);\n            m_ToolbarMenu.SetHook(MainMapOper);\n            #endregion\n\n            ArrayList saIn;\n            if (getDBConn(out saIn))\n            {\n                dbConnSet(ref saIn);\n            }\n            else\n                this.showInfoFun(\"请配置数据库链接参数!\", 1);\n        }\n\n        private void ribbonControl1_Resize(object sender, EventArgs e)\n        {\n\n        }\n\n        private void mainForm_Resize(object sender, EventArgs e)\n        {\n            \n            /*int bPosi = lapgrdbExe.Location.Y;\n            this.splitContainerControl15.SplitterPosition = this.splitContainerControl15.Height-bPosi - 30;\n\n            int aPosi = lapgrdExe.Location.Y;\n            this.splitContainerControl8.SplitterPosition = this.splitContainerControl8.Height - aPosi - 30;*/\n        }\n\n        private void ribbonControl1_Click(object sender, EventArgs e)\n        {\n\n        }\n\n        private void timer1_Tick(object sender, EventArgs e)\n        {\n            this.status_date.Caption = \"系统时间： \" + DateTime.Now.ToString();\n        }\n\n        private void axToolbarControl1_OnMouseDown(object sender, IToolbarControlEvents_OnMouseDownEvent e)\n        {\n\n        }\n        public IDataLayer2 GetLayer(String LayerName)\n        {\n            //读入图层名,放到工具栏下拉框中\n            ILayer lyr;\n            //ToolComboBoxLayer.Items.Clear();\n\n            if (m_mapControl.LayerCount > 0)\n            {\n                IEnumLayer pMapLayers;\n                pMapLayers = m_mapControl.Map.get_Layers(null, true);\n\n                lyr = pMapLayers.Next();\n                while (lyr != null)\n                {\n                    if (lyr.Name.Trim() == LayerName)\n                    {\n                        return (IDataLayer2)lyr;\n                    }\n                    lyr = pMapLayers.Next();\n                    // MessageBox.Show(\"s\");\n                }\n            }\n            return null;\n        }\n        private void axTOCControl1_OnMouseDown(object sender, ITOCControlEvents_OnMouseDownEvent e)\n        {\n            IBasicMap pMap = null;\n            ILayer pLayer = null;\n            object legendgp = null;\n            object index = null;\n            esriTOCControlItem pItem = esriTOCControlItem.esriTOCControlItemNone;\n            try\n            {\n                m_pTocControl.HitTest(e.x, e.y, ref pItem, ref pMap, ref pLayer, ref legendgp, ref index);\n\n            }\n            catch (Exception)\n            {\n                //throw;\n            }\n            //判断鼠标状态\n\n            switch (e.button)\n            {\n                case 1:\n                    try\n                    {\n                        IRasterLayer pRasterlayer = GetLayer(pLayer.Name) as IRasterLayer;\n                        if (pRasterlayer is IRasterLayer)\n                            return;\n                    }\n                    catch\n                    {\n                        return;\n                    }\n\n                    try\n                    {\n                        ILegendGroup pLegendGroup = new LegendGroup();\n                        ILegendClass pLegendClass = new LegendClass();\n                        pLegendGroup = (ILegendGroup)legendgp;\n                        if (pItem == esriTOCControlItem.esriTOCControlItemLegendClass)\n                        {\n\n                            pLegendClass = pLegendGroup.get_Class(Convert.ToInt32(index.ToString()));\n                            if (pLegendClass == null)\n                            {\n                                return;\n                            }\n                            FrmSymbolLibrary dlg = new FrmSymbolLibrary(pLegendClass, pLayer);\n                            if (dlg != null)\n                            {\n                                try\n                                {\n                                    dlg.ShowDialog();\n                                    m_pTocControl.Update();\n                                    m_mapControl.Refresh(esriViewDrawPhase.esriViewGeography, null, null);\n                                }\n                                catch (Exception)\n                                {\n\n                                    //throw;\n                                }\n                            }\n                        }\n                    }\n                    catch\n                    {\n                        //showInfoFun(\"该模块正在维护，敬请期待!\",1);\n                    }\n\n                    break;\n                case 2:\n                    //Ensure the item gets selected \n                    if (pItem == esriTOCControlItem.esriTOCControlItemMap)\n                    {\n                        m_pTocControl.SelectItem(pMap, null);\n                        if (m_mapControl.LayerCount > 0)\n                            this.MapRefresh.Show(this.axTOCControl1, 15, 22);\n                    }\n                    else\n                    {\n                        try\n                        {\n                            m_pTocControl.SelectItem(pLayer, null);\n                        }\n                        catch\n                        {\n                            //Nothing to do\n                        }\n                    }\n\n                    //Set the layer into the CustomProperty (this is used by the custom layer commands)\t\t\t\n                    m_mapControl.CustomProperty = pLayer;\n\n                    //Popup the correct context menu\n                    if (pItem == esriTOCControlItem.esriTOCControlItemMap)\n                    {\n                        //\n                        //用户代码未处理\n                        //\n                        //m_pMenuMap.PopupMenu(e.x, e.y, m_pTocControl.hWnd);\n                    }\n                    if (pItem == esriTOCControlItem.esriTOCControlItemLayer)\n                    {\n                        //动态添加OpenAttributeTable菜单项\n                        //Add custom commands to the map menu\n\n                        try\n                        {\n                            IRasterLayer pRasterlayer = GetLayer(pLayer.Name) as IRasterLayer;\n                            if (pRasterlayer is IRasterLayer)\n                            {\n                                m_pMenuLayer = new ToolbarMenuClass();\n                                m_pMenuLayer.AddItem(new RemoveLayer(), -1, 0, false, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new ScaleThresholds(), 1, 1, true, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new ScaleThresholds(), 2, 2, false, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new ScaleThresholds(), 3, 3, false, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new LayerSelectable(), 1, 4, true, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new LayerSelectable(), 2, 5, false, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new ZoomToLayer(), -1, 6, true, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new LayerVisibility(), 1, 7, true, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new LayerVisibility(), 2, 8, false, esriCommandStyles.esriCommandStyleTextOnly);\n                                //m_pMenuLayer.AddItem(\"输出数据\", -1, 9, true, esriCommandStyles.esriCommandStyleTextOnly);\n                            }\n                            else\n                            {\n                                m_pMenuLayer = new ToolbarMenuClass();\n                                m_pMenuLayer.AddItem(new RemoveLayer(), -1, 0, false, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new ScaleThresholds(), 1, 1, true, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new ScaleThresholds(), 2, 2, false, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new ScaleThresholds(), 3, 3, false, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new LayerSelectable(), 1, 4, true, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new LayerSelectable(), 2, 5, false, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new ZoomToLayer(), -1, 6, true, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new LayerVisibility(), 1, 7, true, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new LayerVisibility(), 2, 8, false, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new OpenAttribute(pLayer), -1, 9, true, esriCommandStyles.esriCommandStyleTextOnly);\n\n                            }\n                        }\n                        catch\n                        {\n                            return;\n                        }\n\n\n                        //Set the hook of each menu\n                        m_pMenuLayer.SetHook(m_mapControl);\n                        m_pMenuLayer.PopupMenu(e.x, e.y, m_pTocControl.hWnd);\n                        //MessageBox.Show(e.x.ToString ()+e.y.ToString ()+m_pTocControl.hWnd.ToString ());\n\n                    }\n\n                    break;\n            }\n        }\n\n        private void showInfo_KeyPress(object sender, KeyPressEventArgs e)\n        {\n            this.showInfo.Document.CaretPosition = this.showInfo.Document.Range.End;\n            string origintext = this.showInfo.Document.Text.Trim();\n            if (e.KeyChar == 13)\n            {\n                int length = this.showInfo.Document.Text.Trim().Length;\n                //MessageBox.Show();\n                if (this.showInfo.Document.Text.Trim().Substring(length - 3, 3) == \"clc\" || this.showInfo.Document.Text.Trim().Substring(length - 3, 3) == \"CLC\")\n                {\n                    showInfoFun(\"   Clearing screen...\", 1);\n                    showInfo.Text = richText;\n                }\n                else if (this.showInfo.Document.Text.Trim().Substring(length - 3, 3) == \"utv\")\n                {\n                    showInfoFun(GlobVars.AppStartPath + DateTime.Now.ToString(\"yyyyMMddHHmmss\") + \".shp\", 1);\n                }\n                else if (this.showInfo.Document.Text.Trim().Substring(length - 3, 3) == \"uth\")\n                {\n\n                }\n                else if (this.showInfo.Text.Trim().Substring(length - 3, 3) == \"yes\")\n                {\n\n                }\n                else\n                {\n                    showInfoFun(\"   Invalid command\", 1);\n                }\n            }\n        }\n        private void showInfo_Click(object sender, EventArgs e)\n        {\n            this.showInfo.Document.CaretPosition = this.showInfo.Document.Range.End;\n            this.showInfo.ScrollToCaret();\n        }\n\n        private void barButtonItem3_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n\n        }\n\n        private void LoadAllStas_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            //String shpFilePath = GlobVars.AppStartPath + @\"\\TempStore\\\" + DateTime.Now.ToString(\"yyyyMMddHHmmss\") + \".shp\";\n            String shpFilePath = GlobVars.AppStartPath + @\"\\dataBase\\TotalStation\\tStations.shp\";\n            //String shpFilePath = @\"D:\\LW\\MeteoAutoProcess\\MAP\\MAP\\dataBase\\TotalStation\\tStations.shp\";\n            if (!File.Exists(shpFilePath))\n            {\n                this.showInfoFun(\"File does not exist, please update or generate all site information at first！\", 1);\n                return;\n            }\n\n            try\n            {\n                datashowSHPF(shpFilePath);\n            }\n            catch (System.Exception ex)\n            {\n            \tthis.showInfoFun(\"Load failed！\", 1);\n                return;\n            }\n            this.showInfoFun(\"Load succeeded！\", 1);\n\n        }\n        //矢量数据加载函数\n        private void datashowSHPF(String strPath)\n        {\n            if (strPath != \"\")\n            {\n                //首先解析文件目录和文件名\n                int loc1;\n                loc1 = strPath.LastIndexOf(\"\\\\\");\n                String path;\n                String fname;\n                path = strPath.Substring(0, loc1);\n                fname = strPath.Substring(loc1 + 1);\n\n                IWorkspaceFactory pWorkspaceFactory = new ESRI.ArcGIS.DataSourcesFile.ShapefileWorkspaceFactory();\n\n                IWorkspace pWorkspace = pWorkspaceFactory.OpenFromFile(path, 0);\n                IFeatureWorkspace pFeatureWorkspace = pWorkspace as IFeatureWorkspace;\n                IFeatureClass pFeatureClass = pFeatureWorkspace.OpenFeatureClass(fname);\n\n                IFeatureLayer pFeatureLayer = new FeatureLayerClass();\n                pFeatureLayer.FeatureClass = pFeatureClass;\n                pFeatureLayer.Name = pFeatureClass.AliasName;\n                ILayer pLayer = pFeatureLayer as ILayer;\n\n                m_mapControl.AddLayer(pLayer, 0);\n                //axMapControl2.AddLayer(pLayer,0);\n                m_mapControl.ActiveView.Refresh();\n                showlayer();\n            }\n        }\n        public void showlayer()\n        {\n            //读入图层名,放到工具栏下拉框中\n            //读入图层名,放到工具栏下拉框中\n            ILayer lyr;\n\n            ((DevExpress.XtraEditors.Repository.RepositoryItemComboBox)ToolComboBoxLayer.Edit).Items.Clear();\n\n            if (m_mapControl.LayerCount > 0)\n            {\n                IEnumLayer pMapLayers;\n                pMapLayers = m_mapControl.Map.get_Layers(null, true);\n\n                lyr = pMapLayers.Next();\n                while (lyr != null)\n                {\n                    ((DevExpress.XtraEditors.Repository.RepositoryItemComboBox)ToolComboBoxLayer.Edit).Items.Add(lyr.Name);\n                    //axMapControl2.AddLayer(lyr);\n                    lyr = pMapLayers.Next();\n                    // MessageBox.Show(\"s\");\n                }\n                //选中第一个图层\n                this.ToolComboBoxLayer.EditValue = ((DevExpress.XtraEditors.Repository.RepositoryItemComboBox)ToolComboBoxLayer.Edit).Items[0];\n\n            }\n        }\n        private void UpdateAllStas_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            \n        }\n\n        private void QuitSys_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            this.Close();\n        }\n\n        private void AboutClick_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (CheckAbout.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n                CheckAbout.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            else\n                CheckAbout.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void HelpClick_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (CheckHelp.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n                CheckHelp.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            else\n                CheckHelp.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void CheckHelp_VisibilityChanged(object sender, DevExpress.XtraBars.Docking.VisibilityChangedEventArgs e)\n        {\n            if (CheckHelp.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Visible)\n            {\n                String HelpDocpath = GlobVars.AppStartPath + @\"\\Document\\Help_EN.pdf\";\n                pdfAbout.LoadDocument(HelpDocpath);\n            }\n        }\n\n        private void MainMapOper_OnMouseMove(object sender, IMapControlEvents2_OnMouseMoveEvent e)\n        {\n            IMap pMap = this.MainMapOper.Map;\n            switch (pMap.MapUnits)\n            {\n                case esriUnits.esriUnknownUnits:\n                    MapCo.Caption = String.Format(\"{0}, {1}  {2}\", e.mapX.ToString(\"#######.##\"), e.mapY.ToString(\"#######.##\"), \"\");\n                    break;\n                case esriUnits.esriKilometers:\n                    MapCo.Caption = String.Format(\"{0}, {1}  {2}\", e.mapX.ToString(\"#######.##\"), e.mapY.ToString(\"#######.##\"), \"Kilometer\");\n                    break;\n                case esriUnits.esriMeters:\n                    MapCo.Caption = String.Format(\"{0}, {1}  {2}\", e.mapX.ToString(\"#######.##\"), e.mapY.ToString(\"#######.##\"), \"Meter\");\n                    break;\n                case esriUnits.esriDecimalDegrees:\n                    MapCo.Caption = String.Format(\"{0}, {1}  {2}\", e.mapX.ToString(\"#######.##\"), e.mapY.ToString(\"#######.##\"), \"Degree\");\n                    break;\n                default:\n                    MapCo.Caption = String.Format(\"{0}, {1}  {2}\", e.mapX.ToString(\"#######.##\"), e.mapY.ToString(\"#######.##\"), \"\");\n                    break;\n            }\n\n            //toolStripStatusLabel4.Text = String.Format(\"{0}, {1}  {2}\", e.mapX.ToString(\"#######.##\"), e.mapY.ToString(\"#######.##\"), m_mapControl.MapUnits.ToString().Substring(4));\n\n            //鼠标未落下,退出\n            if (e.button != 1) return;\n            IPoint pt = new PointClass();\n            pt.PutCoords(e.mapX, e.mapY);\n\n            switch (m_cTool)\n            {\n                case CustomTool.ZoomIn:\n                case CustomTool.ZoomOut:\n                    //'Get \n                    IActiveView pActiveView = MainMapOper.ActiveView;// m_mapControl.ActiveView;\n\n                    //Start an envelope feedback\n                    if (m_feedBack != null)\n                    {\n                        m_feedBack = new NewEnvelopeFeedbackClass();\n                        m_feedBack.Display = pActiveView.ScreenDisplay;\n                        m_feedBack.Start(m_mouseDownPoint);\n                        MessageBox.Show(\"test\");\n\n                    }\n                    //'Move the envelope feedback\n\n                    m_feedBack.MoveTo(pt);\n                    break;\n                case CustomTool.Pan:\n                    //axMapControl1.Pan();\n                    //m_focusScreenDisplay.PanMoveTo(pt);\n                    break;\n                case CustomTool.RuleMeasure:\n                    break;\n            }\n        }\n\n        private IPolygon DrawPolygon()\n        {\n            IActiveView pActiveview;\n            ISimpleFillSymbol pSimpleFillS;\n            IRgbColor pRgbColor;\n            IRubberBand pRubberBand;\n            IPolygon pPolygon;\n            try\n            {\n                pActiveview = m_mapControl.ActiveView;\n                pSimpleFillS = new SimpleFillSymbol();\n                pRgbColor = new RgbColor();\n                pRgbColor.Red = 255;\n                pSimpleFillS.Color = pRgbColor;\n                pRubberBand = new RubberPolygon();\n\n                pPolygon = (IPolygon)pRubberBand.TrackNew(pActiveview.ScreenDisplay, (ISymbol)pSimpleFillS);\n\n                pActiveview.ScreenDisplay.StartDrawing(pActiveview.ScreenDisplay.hDC, (short)esriScreenCache.esriNoScreenCache);\n                pActiveview.ScreenDisplay.SetSymbol((ISymbol)pSimpleFillS);\n                pActiveview.ScreenDisplay.DrawPolygon(pPolygon);\n                pActiveview.ScreenDisplay.FinishDrawing();\n                return pPolygon;\n            }\n            catch (Exception)\n            {\n                //throw;\n                //noting to do\n                return null;\n            }\n        }\n        private IElement showPoint(int cout)\n        {\n            IElement element;\n            ITextElement textelement = new TextElementClass();\n            element = textelement as IElement;\n            ITextSymbol textSymbol = new TextSymbol();\n            IRgbColor color = new RgbColorClass();\n            color.Blue = 255;\n            color.Green = 0;\n            color.Red = 0;\n\n\n\n            textSymbol.Color = color;\n            textSymbol.Size = 30;\n            textelement.Symbol = textSymbol;\n\n            textelement.Text = cout.ToString();\n            return element;\n        }\n        private double MeasurePolygon(IPolygon pPolygon)\n        {\n            try\n            {\n                IArea pArea;\n                ISpatialReferenceFactory srFactory = new SpatialReferenceEnvironment();\n                IGeographicCoordinateSystem gcs =\n                                        srFactory.CreateGeographicCoordinateSystem((int)esriSRGeoCSType.esriSRGeoCS_WGS1984);\n                IProjectedCoordinateSystem pcs =\n                                srFactory.CreateProjectedCoordinateSystem((int)esriSRProjCSType.esriSRProjCS_Beijing1954GK_19N);\n\n                IGeometry geo = (IGeometry)pPolygon;\n                geo.SpatialReference = gcs;\n                geo.Project(pcs);\n\n\n                pArea = (IArea)geo;\n\n                return Math.Abs(pArea.Area);\n\n            }\n            catch (Exception)\n            {\n\n                //throw;\n                return -1;\n            }\n\n        }\n        int clipRaster = -1;\n        private void MainMapOper_OnMouseDown(object sender, IMapControlEvents2_OnMouseDownEvent e)\n        {\n            // CreateTextElment(e.mapX,e.mapY);//创建气泡提示\n\n            if (e.button == 2)//右健弹出快捷键\n            {\n                m_ToolbarMenu.PopupMenu(e.x, e.y, MainMapOper.hWnd);\n            }\n            switch (m_cTool)\n            {\n                case CustomTool.ZoomIn:\n                case CustomTool.ZoomOut:\n                case CustomTool.Pan:\n                    clipRaster = -1;\n                    //Create a point in map coordinates\n                    IPoint pPoint = new PointClass();\n                    pPoint.X = e.mapX;\n                    pPoint.Y = e.mapY;\n                    m_mouseDownPoint = pPoint;\n                    m_isMouseDown = true;\n                    break;\n                case CustomTool.RuleMeasure:\n                    clipRaster = -1;\n                    try\n                    {\n                        IPolyline plinemeasure;\n                        plinemeasure = (IPolyline)m_mapControl.TrackLine();\n                        ISpatialReferenceFactory spatialReferenceFactory;\n                        spatialReferenceFactory = new SpatialReferenceEnvironment();\n\n                        IProjectedCoordinateSystem pPCS;\n                        pPCS = spatialReferenceFactory.CreateProjectedCoordinateSystem((int)esriSRProjCSType.esriSRProjCS_WGS1984N_AsiaAlbers);\n                        plinemeasure.Project(pPCS);\n\n                        IGeometry input_geometry;\n                        input_geometry = plinemeasure.FromPoint;\n                        IProximityOperator proOperator = (IProximityOperator)input_geometry;\n                        double check;\n                        check = proOperator.ReturnDistance(plinemeasure.ToPoint);\n\n                        showInfoFun(\"The measured distance is \" + check.ToString(\"#######.##\") + \"meter\", 1);\n                    }\n                    catch\n                    {\n                        //m_mapControl.Map.MapUnits = esriUnits.esriDecimalDegrees;\n                        m_cTool = CustomTool.None;\n                    }\n                    break;\n\n                case CustomTool.AreaMeasure:\n                    clipRaster = -1;\n                    try\n                    {\n                        IPolygon pPolygon = DrawPolygon();\n                        double pArea = this.MeasurePolygon(pPolygon);\n                        m_mapControl.Map.MapUnits = esriUnits.esriDecimalDegrees;\n                        if (pArea == -1)\n                        {\n                            m_cTool = CustomTool.None;\n                            MainMapOper.Refresh();\n                        }\n                        else\n                        {\n                            showInfoFun(\"The measured area is \" + pArea.ToString(\"#######.##\") + \"square meter\", 1);\n                            m_cTool = CustomTool.None;\n                            //axMapControl1.Refresh();\n                        }\n                    }\n                    catch\n                    {\n                        //m_mapControl.Map.MapUnits = esriUnits.esriDecimalDegrees;\n                        m_cTool = CustomTool.None;\n                    }\n                    //m_mapControl.Map.MapUnits = esriUnits.esriDecimalDegrees;\n                    break;\n\n                    IPoint ipNew;\n                    if (m_ipPoints == null)\n                    {\n                        m_ipPoints = new MultipointClass();\n\n                    }\n\n                    ipNew = this.MainMapOper.ActiveView.ScreenDisplay.DisplayTransformation.ToMapPoint(e.x, e.y);\n                    IElement Element = showPoint(m_ipPoints.PointCount);\n                    Element.Geometry = ipNew;\n                    //Element.Geometry = axMapControl1.ActiveView.ScreenDisplay.DisplayTransformation.ToMapPoint(e.x, e.y);\n                    pGC.AddElement(Element, 0);\n                    MainMapOper.ActiveView.PartialRefresh(esriViewDrawPhase.esriViewGraphics, null, null);\n                    object o1 = Type.Missing;\n                    m_ipPoints.AddPoint(ipNew, ref o1, ref o1);\n                    break;\n            }\n        }\n\n        private void MainMapOper_OnAfterScreenDraw(object sender, IMapControlEvents2_OnAfterScreenDrawEvent e)\n        {\n            showlayer();\n        }\n\n        private void AuInterMethod_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            \n        }\n\n        private void GenerateBuffer_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            IMap pMap = this.MainMapOper.Map;\n            String outBufferPath=\"\";\n            try\n            {\n                outBufferPath = GlobVars.AppStartPath + @\"\\TempStore\\Buffer\\\" +\"Buffer_\" + DateTime.Now.ToString(\"yyyyMMddHHmmss\") + \".shp\";\n            }\n            catch (System.Exception ex)\n            {\n                return;\n            }\n\n            if (ToolComboBoxLayer.EditValue!=null && ToolComboBoxLayer.EditValue.ToString() != \"\" && BufferVaule.EditValue.ToString() != \"\")\n            {\n                double BufferDistance;\n                //TryParse是将数字的字符串表示形式表现为他的等效双精度浮点数\n                double.TryParse(BufferVaule.EditValue.ToString(), out BufferDistance);\n                if (BufferDistance == 0.0 || string.IsNullOrEmpty(BufferVaule.EditValue.ToString()))\n                {\n                    MessageBox.Show(\"Invalid buffer distance！\");\n                    return;\n                }\n\n                if (pMap.LayerCount == 0)\n                    return;\n                //获取地图文档所有图层\n                List<ILayer> pLyr = new List<ILayer>();\n                pLyr = MapManager.GetLayers(pMap);\n                IFeatureLayer pFeatureLayer = pLyr.Find(s => s.Name.Equals(ToolComboBoxLayer.EditValue.ToString())) as IFeatureLayer;\n                if (pFeatureLayer == null)\n                {\n                    this.showInfoFun(\"Map layer\" + ToolComboBoxLayer.EditValue.ToString() + \"cannot be found！\", 1);\n                    return;\n                }\n                try\n                {\n                    //PostMessage((IntPtr)tbxMessages.Handle, WM_VSCROLL, (IntPtr)SB_BOTTOM, (IntPtr)IntPtr.Zero);\n                    this.showInfoFun(\"Buffer layer：\" + pFeatureLayer.Name,1);\n                    this.showInfoFun(\"Getting Geoprocessor,please wait...\",1);\n                    this.showInfoFun(DateTime.Now.ToString(),1);\n\n                    Geoprocessor gp = new Geoprocessor();\n                    gp.OverwriteOutput = true;\n                    this.showInfoFun(\"Start analysing…\",1);\n                    ESRI.ArcGIS.AnalysisTools.Buffer pBuffer = new ESRI.ArcGIS.AnalysisTools.Buffer(pFeatureLayer, outBufferPath, BufferVaule.EditValue.ToString() + \" \" + \"DecimalDegrees\");\n\n                    IGeoProcessorResult pGeoProcessorResult = new GeoProcessorResultClass();\n                    pGeoProcessorResult = (IGeoProcessorResult)gp.Execute(pBuffer, null);\n                    if (pGeoProcessorResult.Status != esriJobStatus.esriJobSucceeded)\n                    {\n                        this.showInfoFun(\"Layer buffer operation failed：\" + pFeatureLayer.Name, 1);\n                    }\n                    //this.showInfoFun(RetureMessage(gp),1);\n                    this.showInfoFun(\"Analysis finished\",1);\n                    this.showInfoFun(\"------------------------------------------------\",1);\n                }\n                catch (Exception ex)\n                {\n                    this.showInfoFun(\"Analysis failed！\",1);\n                }\n            }\n            else\n                this.showInfoFun(\"Incorrect parameter setting,analysis failed！\", 1);\n        }\n\n        #region 返回消息\n\n        private string RetureMessage(Geoprocessor gp)\n        {\n            StringBuilder sb = new StringBuilder();\n            if (gp.MessageCount > 0)\n            {\n                for (int i = 0; i < gp.MessageCount; i++)\n                {\n                    System.Diagnostics.Trace.WriteLine(gp.GetMessage(i));\n                    sb.AppendFormat(\"{0}\\n\", gp.GetMessage(i));\n                }\n            }\n            return sb.ToString();\n        }\n        #endregion\n\n        private void isUseLastBuffer_CheckedChanged(object sender, EventArgs e)\n        {\n            if (this.isUseLastBuffer.Checked == false)\n            {\n                this.BFilePath.Enabled = true;\n                this.SelBFilePath.Enabled = true;\n            }\n            else\n            {\n                String DirPath=GlobVars.AppStartPath + @\"\\TempStore\\Buffer\";\n                if (GlobFuncs.LastFilePath(DirPath) == \"\")\n                {\n                    this.showInfoFun(\"No buffer files！\", 1);\n                    this.isUseLastBuffer.Checked = false;\n                    return;\n                }\n                this.BFilePath.Enabled = false;\n                this.SelBFilePath.Enabled = false;\n                //this.showInfoFun(GlobFuncs.LastFilePath(DirPath), 1);\n            }\n\n        }\n\n        private void ExecBStas_Click(object sender, EventArgs e)\n        {\n            String FileName = isUseLastBuffer.Checked ? GlobFuncs.LastFilePath(GlobVars.AppStartPath + @\"\\TempStore\\Buffer\") : this.BFilePath.Text.Trim();\n            if (FileName == \"\")\n                return;\n            else\n            {\n                bool clipResult=GlobFuncs.Clip(FileName, GlobVars.AppStartPath + @\"\\dataBase\\TotalStation\\tStations.shp\", GlobVars.AppStartPath + @\"\\TempStore\\Stations\\selStats_\"+DateTime.Now.ToString(\"yyyyMMddHHmmss\")+\".shp\");\n                if (clipResult)\n                    this.showInfoFun(\"Station selection succeeded！\",1);\n                else\n                    this.showInfoFun(\"Station selection failed！\", 1);\n            }\n        }\n\n        private void fCheckButton_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (fCheckResult.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n                fCheckResult.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            else\n                fCheckResult.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void fCheckLastBuffer_CheckedChanged(object sender, EventArgs e)\n        {\n            String FileName = \"\";\n            if (fCheckLastBuffer.Checked)\n            {\n                FileName = GlobFuncs.LastFilePath(GlobVars.AppStartPath + @\"\\TempStore\\Buffer\");\n                if (FileName.Trim() == \"\")\n                {\n                    this.showInfoFun(\"No buffer file！\", 1);\n                    return;\n                }\n                else\n                {\n                    try\n                    {\n                        datashowSHPF(FileName);\n                    }\n                    catch (System.Exception ex)\n                    {\n                        this.showInfoFun(\"Error loading files！\",1);\n                        return;\n                    }\n                    this.showInfoFun(\"Load file succeeded！\", 1);\n                }\n            }\n\n        }\n\n        private void checkEdit2_CheckedChanged(object sender, EventArgs e)\n        {\n            String FileName = \"\";\n            if (fCheckLastSelStas.Checked)\n            {\n                FileName = GlobFuncs.LastFilePath(GlobVars.AppStartPath + @\"\\TempStore\\Stations\");\n                if (FileName.Trim() == \"\")\n                {\n                    this.showInfoFun(\"No site files！\", 1);\n                    return;\n                }\n                else\n                {\n                    GlobVars.LastStatsPath = FileName;\n\n                    try\n                    {\n                        datashowSHPF(FileName);\n                    }\n                    catch (System.Exception ex)\n                    {\n                        this.showInfoFun(\"Error loading files！\", 1);\n                        return;\n                    }\n                    this.showInfoFun(\"Load file succeeded！\", 1);\n                }\n            }\n        }\n\n        private void LoadSelStas_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (CheckBStas.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n                CheckBStas.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            else\n                CheckBStas.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void setParamsB_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (setParamsP.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n            {\n                //this.dateBeg.EditValue = new DateTime(1951, 1, 1);\n                setParamsP.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            }\n            else\n                setParamsP.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void setParamsP_VisibilityChanged(object sender, DevExpress.XtraBars.Docking.VisibilityChangedEventArgs e)\n        {\n\n        }\n\n        private void loadVars_Click(object sender, EventArgs e)\n        {\n            \n\n        }\n\n        private void load2Mem_Click(object sender, EventArgs e)\n        {\n            GlobVars.pValue = -1;\n            this.BGW3.RunWorkerAsync();\n        }\n\n        private void setParamsP_Click(object sender, EventArgs e)\n        {\n           \n        }\n\n        private void selStas_CheckedChanged(object sender, EventArgs e)\n        {\n            String dir = GlobVars.AppStartPath + @\"\\TempStore\\Stations\";\n            if (selStas.Checked)\n            {\n                this.InputStas.Enabled = false;\n                this.selInputPath.Enabled = false;\n                GlobVars.LastStatsPath = GlobFuncs.LastFilePath(dir);\n            }\n            else\n            {\n                this.InputStas.Enabled = true;\n                this.selInputPath.Enabled = true;\n            }\n        }\n\n        private void TestB_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            //String strPath = @\"D:\\LW\\MeteoAutoProcess\\MAP\\MAP\\TempStore\\Stations\\selStats_122729.shp\";\n\n            //this.MachCode.Text=Getmac.regcode(\"BFEBFBFF000806E9BE194364\");\n              \n        }\n\n        private void CreatTable_Click(object sender, EventArgs e)\n        {\n\n        }\n\n        private void CreatTable_VisibilityChanged(object sender, DevExpress.XtraBars.Docking.VisibilityChangedEventArgs e)\n        {\n            if (CreatTable.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Visible)\n            {\n                this.CTInfo.Document.Text = \"Note：Please input the correct year of data,the database can creates data tables automatically,i.e. all1978！\";\n            }\n        }\n\n        private void CChinaDB_CheckedChanged(object sender, EventArgs e)\n        {\n            if (CChinaDB.Checked == true)\n            {\n                GlobVars.dbName = \"MeteoData\";\n                CAbroadDB.Checked = false;\n            }\n        }\n\n        private void CAbroadDB_CheckedChanged(object sender, EventArgs e)\n        {\n            if (CAbroadDB.Checked == true)\n            {\n                GlobVars.dbName =\"MeteoData_extens\";\n                CChinaDB.Checked = false;\n                \n            }\n        }\n\n        private void ExecCreatTableB_Click(object sender, EventArgs e)\n        {\n            if (!CChinaDB.Checked && !CAbroadDB.Checked)\n                GlobVars.dbName = \"\";\n\n            MeteoDB mdb = new MeteoDB();\n            String tName = \"all\" + this.dataYear.Text.Trim();\n            String sql = \"CREATE table \" + tName + \" (Station Text,Year int,Month int,Day int,APRE real,DMXP real, DMNP real,MTEM real,DMXT real,DMNT real,AVRH real,MNRH real, PREP real, MEWS real, MXWS real, DMWS real, EXWS real,DEWS real, SOHR real, DATE Date,FLAG VARCHAR(40) primary key)ENGINE=InnoDB DEFAULT CHARSET = utf8\";\n            if (mdb.AlterTable(sql))\n                this.showInfoFun(\"Create table 'all\" + this.dataYear.Text.Trim() + \"' successfully!\", 1);\n            else\n                this.showInfoFun(\"Table 'all\" + this.dataYear.Text.Trim() + \"' has already existed!\", 1);\n        }\n\n        private void CheckNewTable_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (CreatTable.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n                CreatTable.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            else\n                CreatTable.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void CheckChinaDB_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (import2DBP.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n            {\n                this.InsertInfo.Document.Text = \"Fields include: Average pressure/Daily maximum pressure/Daily minimum pressure/Mean temperature/Daily maximum temperature/Daily minimum temperature/Average relative humidity/Minimum relative humidity/Precipitation/Mean wind speed/Maximum wind speed/Wind direction of maximum wind speed/Extreme wind speed/Wind direction of Extreme wind speed/Solar hours\";\n                import2DBP.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            }   \n            \n            else\n                import2DBP.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void updateStasB_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (updateStasP.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n            {\n                updateStasP.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n                this.updateStasInfo.Text = \"Field：code，lon，lat，elev，stationName,region。\";\n            }\n            else\n                updateStasP.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void CChinaDBStas_CheckedChanged(object sender, EventArgs e)\n        {\n            if (CChinaDBStas.Checked)\n            {\n                CAbroadDBStas.Checked = false;\n                GlobVars.dbName =\"MeteoData\";\n            }\n        }\n\n        private void CAbroadDBStas_CheckedChanged(object sender, EventArgs e)\n        {\n            if (CAbroadDBStas.Checked)\n            {\n                CChinaDBStas.Checked = false;\n                GlobVars.dbName =  \"MeteoData_extens\";\n            }\n        }\n\n        private void ExecUpdate_Click(object sender, EventArgs e)\n        {\n            if (!CChinaDBStas.Checked && !CAbroadDBStas.Checked)\n                GlobVars.dbName = \"\";\n\n            String filepath = this.staslistPath.Text.Trim();\n            ArrayList saIn;\n            String sql=\"\";\n\n            if (GlobFuncs.FileRead(filepath, out saIn))\n            {\n                try\n                {\n                    MeteoDB mdb = new MeteoDB();\n                    MySqlConnection mysql = mdb.getMySqlCon();\n                    mysql.Open();\n\n                    int count = saIn.Count;\n                    for (int i = 0; i < count; i++)\n                    {\n                        String[] sInfo = saIn[i].ToString().Split(',');\n                        String Code = sInfo[0].Trim();\n                        String X = sInfo[1].Trim();\n                        String Y = sInfo[2].Trim();\n                        String elev = sInfo[3].Trim();\n                        String stationName = sInfo[4].Trim();\n                        String regionalName = sInfo[5].Trim();\n                        //String XJ = sInfo[6].Trim();\n                        //String YW = sInfo[7].Trim();\n                        \n                        sql = \"INSERT INTO station VALUES('\" + Code + \"', '\" + X + \"', '\" + Y + \"','\" + elev + \"','\" + stationName + \"','\" + regionalName +\"')\";\n                        MySqlCommand cmd = mdb.getSqlCommand(sql, mysql);\n                        \n                        \n                        if (mdb.getInsert(cmd))\n                           this.showInfoFun(\"Add station \" + Code + \" successfully!\", 1);\n                        else\n                            this.showInfoFun(\"Add station \" + Code + \" failed!\", 1);\n                        this.showInfo.Refresh();\n                    }\n                    mysql.Close();\n                }\n                catch (System.Exception ex)\n                {\n                    this.showInfoFun(\"Failed to add new stations. Please check whether the separator is comma in English!\", 1);\n                }\n                \n                \n            }\n        }\n\n        private void toChinaDB_CheckedChanged(object sender, EventArgs e)\n        {\n            if (toChinaDB.Checked)\n            {\n                toAbroadDB.Checked = false;\n                GlobVars.dbName = \"MeteoData\";\n            }\n        }\n\n        private void toAbroadDB_CheckedChanged(object sender, EventArgs e)\n        {\n            if (toAbroadDB.Checked)\n            {\n                toChinaDB.Checked = false;\n                GlobVars.dbName =  \"MeteoData_extens\";\n            }\n        }\n\n        private void execToDB_Click(object sender, EventArgs e)\n        {\n            if (!toChinaDB.Checked && !toAbroadDB.Checked)\n                GlobVars.dbName = \"\";\n            //for (int x = 1961; x <= 2015; x++)\n            //{\n                //this.datayearDB.Text = x.ToString().Trim();\n                String filepath = this.recsPath.Text.Trim();\n                ArrayList saIn;\n                String sql = \"\";\n                List<String> sqlList = new List<String>();\n                MeteoDB mdb = new MeteoDB();\n                int count = 0;\n                if (GlobFuncs.FileRead(filepath, out saIn))\n                {\n                    count = saIn.Count;\n                    this.showInfoFun(\"Start reading and analyzing data, please wait...\", 1);\n                    this.showInfo.Refresh();\n                    for (int i = 0; i < count; i++)\n                    {\n                        try\n                        {\n                            int j = 0;\n                            String[] sInfo = saIn[i].ToString().Trim().Split(',');\n                            String sta = sInfo[j].Trim();\n                            String year = (Convert.ToInt32(Convert.ToSingle(sInfo[++j].Trim()))).ToString();\n                            String mon = (Convert.ToInt32(Convert.ToSingle(sInfo[++j].Trim()))).ToString();\n                            mon = mon.PadLeft(2, '0');\n                            String day = (Convert.ToInt32(Convert.ToSingle(sInfo[++j].Trim()))).ToString();\n                            day = day.PadLeft(2, '0');\n                            String PRUavg = sInfo[++j].Trim();\n                            String PRUmax = sInfo[++j].Trim();\n                            String PRUmin = sInfo[++j].Trim();\n                            String Tmean = sInfo[++j].Trim();\n                            String Tmax = sInfo[++j].Trim();\n                            String Tmin = sInfo[++j].Trim();\n                            String RHumavg = sInfo[++j].Trim();\n                            String RHummin = sInfo[++j].Trim();\n                            String PRE = sInfo[++j].Trim();\n                            String WINDavg = sInfo[++j].Trim();\n                            String WINDmax = sInfo[++j].Trim();\n                            String WINDmaxDire = sInfo[++j].Trim();\n                            String WINDextreme = sInfo[++j].Trim();\n                            String WINDextremeDire = sInfo[++j].Trim();\n                            String SolarHours = sInfo[++j].Trim();\n                            OleDbCommand oleDbCom;\n\n                            sql = \"INSERT INTO all\" + datayearDB.Text.Trim() + \" VALUES('\" + sta + \"',\" + year + \",\" + mon + \",\" + day + \",\" + PRUavg + \",\" + PRUmax + \",\" + PRUmin + \",\"\n                                        + Tmean + \",\" + Tmax + \",\" + Tmin + \",\" + RHumavg + \",\" + RHummin + \",\" + PRE + \",\" + WINDavg + \",\" + WINDmax + \",\" + WINDmaxDire + \",\" + WINDextreme +\n                                        \",\" + WINDextremeDire + \",\" + SolarHours + \",\" + \"STR_TO_DATE('\" + year + mon + day + \"','%Y%m%d'),\" + \"'\" + sta + year + mon + day + \"'\" + \")\";\n\n                            //MySqlCommand sqlcmd = mdb.getSqlCommand(sql, conn);\n                            //if(!mdb.getInsert(sqlcmd))\n                            //this.showInfoFun(\"添加第\" + (i + 1).ToString().Trim() + \"时出现错误！\", 1);\n                            sqlList.Add(sql);\n\n                        }\n                        catch (System.Exception ex)\n                        {\n                            this.showInfoFun(\"Please check the input data format！\", 1);\n                        }\n                    }\n\n                    this.showInfoFun(\"Data analysis completed, inserting database operation is in progress, please wait...\", 1);\n                    this.showInfo.Refresh();\n                }\n                else\n                    this.showInfoFun(\"Error reading file！\", 1);\n\n                if (ExecuteSqlTran(sqlList, ref mdb))\n                    this.showInfoFun(count.ToString() + \" records in total were inserted successfully!\", 1);\n                else\n                    this.showInfoFun(\"Insert operation failed!\", 1);\n            //}\n        }\n\n        /// 执行多条SQL语句，实现数据库事务。\n        /// </summary>mysql数据库\n        /// <param name=\"SQLStringList\">多条SQL语句</param>\n        private bool ExecuteSqlTran(List<string> SQLStringList, ref MeteoDB mdb)\n        {\n            int traverse = SQLStringList.Count / 10;\n\n            using (MySqlConnection conn = mdb.getMySqlCon())\n            {\n                conn.Open();\n                MySqlCommand cmd = new MySqlCommand();\n                cmd.Connection = conn;\n                MySqlTransaction tx = conn.BeginTransaction();\n                cmd.Transaction = tx;\n                try\n                {\n                    this.showInfoFun(\"Insertion progress： \",0);\n                    for (int n = 0; n < SQLStringList.Count; n++)\n                    {\n                        string strsql = SQLStringList[n].ToString();\n                        if (strsql.Trim().Length > 1)\n                        {\n                            cmd.CommandText = strsql;\n                            cmd.ExecuteNonQuery();\n                        }\n                        //进度\n                        if (n > 0 && (n % traverse == 0 || n == SQLStringList.Count - 1))\n                        {\n                            //tx.Commit();\n                            //tx = conn.BeginTransaction();\n                            if (n == SQLStringList.Count - 1)\n                                this.showInfoFun(Math.Round((n + 1) / (float)SQLStringList.Count * 100, 2) + \"%\", 1);\n                            else\n                                this.showInfoFun(Math.Round((n + 1) / (float)SQLStringList.Count*100,2) + \"%->\", 0);\n                            this.showInfo.Refresh();\n                        }\n                    }\n                    tx.Commit();//一次性提交\n                }\n                catch (System.Data.SqlClient.SqlException E)\n                {\n                    tx.Rollback();\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        private void BGW1_DoWork(object sender, DoWorkEventArgs e)\n        {\n            String allStasPath = GlobVars.AppStartPath + @\"\\dataBase\\TotalStation\\ChinaStations.shp\";\n            String sql = \"SELECT code,stationName,X,Y,elev FROM station\";\n            DataSet ds;\n            BGW1.ReportProgress(++GlobVars.pValue, \"This may take several minites, please wait...\");\n            int count = 0;\n            try\n            {\n                GlobVars.dbName =  \"MeteoData\";\n                MeteoDB mbd = new MeteoDB();\n                \n                ds = mbd.GetDataFromDB(sql);\n                count = ds.Tables[0].Rows.Count;\n\n                List<GlobFuncs.CPoint> LPoint = new List<GlobFuncs.CPoint>();\n                GlobFuncs.CPoint staInfo = new GlobFuncs.CPoint();\n\n                for (int i = 0; i < count; i++)\n                {\n                    staInfo.code = Convert.ToString(ds.Tables[0].Rows[i][\"Code\"]);\n                    staInfo.staName = ds.Tables[0].Rows[i][\"stationName\"].ToString();\n                    staInfo.X = Convert.ToDouble(ds.Tables[0].Rows[i][\"X\"]);\n                    staInfo.Y = Convert.ToDouble(ds.Tables[0].Rows[i][\"Y\"]);\n                    staInfo.Elev = Convert.ToDouble(ds.Tables[0].Rows[i][\"elev\"]);\n                    LPoint.Add(staInfo);\n                }\n\n                GlobFuncs.CreateShpFromPoints(LPoint, allStasPath);\n            }\n            catch (System.Exception ex)\n            {\n                BGW1.ReportProgress(++GlobVars.pValue, \"An error occurred during the update. If the file already exists, the program will automatically delete it. Please try again！\");\n                return;\n            }\n            BGW1.ReportProgress(++GlobVars.pValue, \"Update successfully！\");\n        }\n        private void BGW2_DoWork(object sender, DoWorkEventArgs e)\n        {\n            String allStasPath = GlobVars.AppStartPath + @\"\\dataBase\\TotalStation\\ForeignStations.shp\";\n            String sql = \"SELECT code,stationName,X,Y,elev FROM station\";\n            DataSet ds;\n            BGW2.ReportProgress(++GlobVars.pValue, \"This may take several minites, please wait...\");\n            int count = 0;\n            try\n            {\n                GlobVars.dbName = \"MeteoData_extens\";\n                MeteoDB mbd = new MeteoDB();\n\n\n                ds = mbd.GetDataFromDB(sql);\n                count = ds.Tables[0].Rows.Count;\n\n                List<GlobFuncs.CPoint> LPoint = new List<GlobFuncs.CPoint>();\n                GlobFuncs.CPoint staInfo = new GlobFuncs.CPoint();\n\n                for (int i = 0; i < count; i++)\n                {\n                    staInfo.code = Convert.ToString(ds.Tables[0].Rows[i][\"Code\"]);\n                    staInfo.staName = ds.Tables[0].Rows[i][\"stationName\"].ToString();\n                    staInfo.X = Convert.ToDouble(ds.Tables[0].Rows[i][\"X\"]);\n                    staInfo.Y = Convert.ToDouble(ds.Tables[0].Rows[i][\"Y\"]);\n                    staInfo.Elev = Convert.ToDouble(ds.Tables[0].Rows[i][\"elev\"]);\n\n                    LPoint.Add(staInfo);\n                }\n\n                GlobFuncs.CreateShpFromPoints(LPoint, allStasPath);\n            }\n            catch (System.Exception ex)\n            {\n                BGW2.ReportProgress(++GlobVars.pValue, \"An error occurred during the update. If the file already exists, the program will automatically delete it. Please try again！\");\n                File.Delete(GlobVars.AppStartPath + @\"\\dataBase\\TotalStation\\ForeignStations.shp\");\n                File.Delete(GlobVars.AppStartPath + @\"\\dataBase\\TotalStation\\ForeignStations.dbf\");\n                File.Delete(GlobVars.AppStartPath + @\"\\dataBase\\TotalStation\\ForeignStations.prj\");\n                File.Delete(GlobVars.AppStartPath + @\"\\dataBase\\TotalStation\\ForeignStations.shx\");\n                return;\n            }\n            BGW2.ReportProgress(++GlobVars.pValue, \"Update successfully！\");\n        }\n        private void BGW3_DoWork(object sender, DoWorkEventArgs e)\n        {\n            try\n            {\n                String stasPath = \"\";\n                String[] dateBegStr = this.dateBeg.Text.Trim().Split('-');\n                dateBegStr[1]=dateBegStr[1].PadLeft(2,'0');\n                dateBegStr[2] = dateBegStr[2].PadLeft(2, '0');\n                String[] dateEndStr = this.dateEnd.Text.Trim().Split('-');\n                dateEndStr[1] = dateEndStr[1].PadLeft(2, '0');\n                dateEndStr[2] = dateEndStr[2].PadLeft(2, '0');\n                int years = Convert.ToInt16(dateEndStr[0]) - Convert.ToInt16(dateBegStr[0]);\n                String curYear = \"\";\n                DataSet dsTot = new DataSet();\n                TimeSpan ts = Convert.ToDateTime(this.dateEnd.EditValue) - Convert.ToDateTime(this.dateBeg.EditValue);\n                long tDays = ts.ToString() == \"00:00:00\" ? 1 : Convert.ToInt32(ts.ToString().Split('.')[0].Trim()) + 1;\n                GlobVars.dataLength = tDays;\n                ArrayList stasCode;\n                ArrayList stasLat;\n                ArrayList stasLon;\n                ArrayList stasElev;\n\n                GlobVars.selVar = SelVars.SelectedIndex;\n\n                String searchStas = \"\";\n                //DateTime dateBeg = new DateTime(Convert.ToInt32(dateBegStr[0]), Convert.ToInt32(dateBegStr[1]), Convert.ToInt32(dateBegStr[2]));\n                //DateTime dateEnd = new DateTime(Convert.ToInt32(dateEndStr[0]), Convert.ToInt32(dateEndStr[1]), Convert.ToInt32(dateEndStr[2]));\n\n\n                if (SelVars.EditValue == \"Select\")\n                    BGW3.ReportProgress(++GlobVars.pValue, \"Please select the variable to be interpolated!\");\n                else\n                {\n                    if (selStas.Checked)\n                        stasPath = GlobVars.LastStatsPath;\n                    else\n                        stasPath = this.InputStas.Text.Trim();\n\n                    if (!GlobFuncs.GetStas(stasPath, out stasLat, out stasLon, out stasElev, out stasCode))\n                    {\n                        BGW3.ReportProgress(++GlobVars.pValue, \"Error reading station file!\");\n                        return;\n                    }\n                    BGW3.ReportProgress(++GlobVars.pValue, \"It may take a few minutes, please wait...\");\n                    GlobVars.mStruct = new MeteoStruct();\n                    GlobVars.mStruct.mData = new MeteoStruct.meteoData[stasCode.Count];\n\n\n                    int i = 0;\n                    String sql = \"\";\n                    MeteoDB mdb;\n\n                    //int oncetime = 50;\n                    //int cycle = Convert.ToBoolean(stasCode.Count % oncetime) ? stasCode.Count / oncetime + 1 : stasCode.Count / oncetime;\n                    //int realCount = 0;\n                    //int rInd;\n                    for (int c = 0; c < stasCode.Count; c++)\n                    {\n\n\n                        searchStas += \"T.Station='\" + stasCode[c].ToString().Trim() + \"'\";\n                        if (c != stasCode.Count - 1)\n                            searchStas += \" OR \";\n\n                        GlobVars.mStruct.mData[c].stasCode = Convert.ToString(stasCode[c].ToString().Trim());\n                        GlobVars.mStruct.mData[c].X = Convert.ToDouble(stasLon[c].ToString().Trim());\n                        GlobVars.mStruct.mData[c].Y = Convert.ToDouble(stasLat[c].ToString().Trim());\n                        GlobVars.mStruct.mData[c].elev = Convert.ToDouble(stasElev[c].ToString().Trim());\n                    }\n\n                        if (years > 0)\n                        {\n                            for (i = 0; i <= years; i++)\n                            {\n                                curYear = (i + Convert.ToInt16(dateBegStr[0])).ToString().Trim();\n\n                                if (i == 0)\n                                    sql = \"SELECT Station,DATE,\" + SelVars.EditValue + \" as climate \" + \"FROM all\" + curYear\n                                               + \" as T WHERE (\" + searchStas + \") AND (T.DATE>=STR_TO_DATE('\" + dateBegStr[0] + dateBegStr[1] + dateBegStr[2]\n                                               + \"','%Y%m%d') AND T.DATE<=STR_TO_DATE('\" + dateEndStr[0] + \"1231','%Y%m%d')) ORDER BY T.Station, T.DATE\";\n                                else if (i == years)\n                                    sql = \"SELECT Station,DATE,\" + SelVars.EditValue + \" as climate \" + \"FROM all\" + curYear\n                                             + \" as T WHERE (\" + searchStas + \") AND (T.DATE>=STR_TO_DATE('\" + dateEndStr[0] + \"0101','%Y%m%d') AND T.DATE<=STR_TO_DATE('\"\n                                             + dateEndStr[0] + dateEndStr[1] + dateEndStr[2] + \"','%Y%m%d')) ORDER BY T.Station, T.DATE\";\n                                else\n                                    sql = \"SELECT Station,DATE,\" + SelVars.EditValue + \" as climate \" + \"FROM all\" + curYear\n                                             + \" as T WHERE (\" + searchStas + \") AND (T.DATE>=STR_TO_DATE('\" + curYear + \"0101','%Y%m%d') AND T.DATE<=STR_TO_DATE('\"\n                                             + curYear + \"1231','%Y%m%d')) ORDER BY T.Station, T.DATE\";\n\n                                GlobVars.dbName = \"MeteoData\";\n                                mdb = new MeteoDB();\n                                DataSet ds = mdb.GetDataFromDB(sql);\n                                if (ds != null)\n                                    ds.Tables[0].TableName = curYear;\n\n                                GlobVars.dbName =  \"MeteoData_extens\";\n                                mdb = new MeteoDB();\n                                DataSet ds_e = mdb.GetDataFromDB(sql);\n                                if (ds_e != null)\n                                    ds_e.Tables[0].TableName = curYear;\n\n                                if (ds != null && ds_e != null && ds_e.Tables[0].Rows.Count > 0)\n                                {\n                                    for (int j = 0; j < ds_e.Tables[0].Rows.Count; j++)\n                                    {\n                                        ds.Tables[0].Rows.Add(ds_e.Tables[0].Rows[j].ItemArray);\n                                    }\n                                }\n                                if (ds != null)\n                                    dsTot.Tables.Add(ds.Tables[0].Copy());\n                            }\n                        }\n                        else\n                        {\n                            curYear = (i + Convert.ToInt16(dateBegStr[0])).ToString().Trim();\n                            sql = \"SELECT Station,DATE,\" + SelVars.EditValue + \" as climate \" + \"FROM all\" + curYear\n                                             + \" as T WHERE (\" + searchStas + \") AND (T.DATE>=STR_TO_DATE('\" + curYear + dateBegStr[1] + dateBegStr[2]\n                                             + \"','%Y%m%d') AND T.DATE<=STR_TO_DATE('\" + curYear + dateEndStr[1] + dateEndStr[2] + \"','%Y%m%d')) ORDER BY T.Station, T.DATE\";\n\n                            GlobVars.dbName = \"MeteoData\";\n                            mdb = new MeteoDB();\n                            DataSet ds = mdb.GetDataFromDB(sql);\n                            if (ds != null)\n                                ds.Tables[0].TableName = curYear + \"_\" + stasCode[i].ToString().Trim()+\"_C\";\n\n                            GlobVars.dbName =  \"MeteoData_extens\";\n                            mdb = new MeteoDB();\n                            DataSet ds_e = mdb.GetDataFromDB(sql);\n                            if (ds_e != null)\n                                ds_e.Tables[0].TableName = curYear + \"_\" + stasCode[i].ToString().Trim() + \"_A\";\n\n                            if (ds != null && ds_e != null && ds_e.Tables[0].Rows.Count > 0)\n                            {\n                                for (int j = 0; j < ds_e.Tables[0].Rows.Count; j++)\n                                {\n                                    ds.Tables[0].Rows.Add(ds_e.Tables[0].Rows[j].ItemArray);\n                                }\n                            }\n                            if (ds != null)\n                                dsTot.Tables.Add(ds.Tables[0].Copy());\n                        }\n\n                    for (int m = 0; m < stasCode.Count; m++)\n                    {\n                        GlobVars.mStruct.mData[m].climData = new double[tDays];\n                        GlobVars.mStruct.mData[m].recsDT = new DateTime[tDays];\n                        for (int n = 0; n < tDays; n++)\n                        {\n                            GlobVars.mStruct.mData[m].climData[n] = 32766.0;\n                            GlobVars.mStruct.mData[m].recsDT[n] = Convert.ToDateTime(this.dateBeg.EditValue).AddDays(n);\n                        }\n                    }\n\n                    int curDay = 0;\n                    string curDate = \"\";\n                    for (int t = 0; t < dsTot.Tables.Count; t++)\n                        for (int r = 0; r < dsTot.Tables[t].Rows.Count; r++)\n                        {\n                            for (int m = 0; m < stasCode.Count; m++)\n                                if (Convert.ToString(dsTot.Tables[t].Rows[r][\"Station\"]) == GlobVars.mStruct.mData[m].stasCode)\n                                {\n                                    curDate = dsTot.Tables[t].Rows[r][\"DATE\"].ToString().Split(' ')[0].Trim();\n                                    ts = Convert.ToDateTime(curDate) - Convert.ToDateTime(this.dateBeg.EditValue);\n                                    if (ts.ToString().Trim() == \"00:00:00\")\n                                        curDay = 0;\n                                    else\n                                        curDay = Convert.ToInt32(ts.ToString().Split('.')[0].Trim());\n                                    GlobVars.mStruct.mData[m].climData[curDay] = Convert.ToDouble(dsTot.Tables[t].Rows[r][\"climate\"]);\n                                    break;\n                                }\n                        }\n                    //GlobFuncs.FileWrite(@\"G:\\YF_Software\\temptest.dat\", ref GlobVars.mStruct.mData, GlobVars.dataLength);\n                }\n            }\n            catch (System.Exception ex)\n            {\n                BGW3.ReportProgress(++GlobVars.pValue, \"Error during execution, error reason：\" + ex.Message);\n                return;\n            }\n            BGW3.ReportProgress(++GlobVars.pValue, \"Load succeeded!\");\n        }\n        private void StasChina_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            GlobVars.pValue = -1;\n            this.BGW1.RunWorkerAsync();\n        }\n        private void BGW1_ProgressChanged(object sender, System.ComponentModel.ProgressChangedEventArgs e)\n        {\n            this.showInfoFun(e.UserState.ToString(), 1);\n        }\n        private void BGW2_ProgressChanged(object sender, System.ComponentModel.ProgressChangedEventArgs e)\n        {\n            this.showInfoFun(e.UserState.ToString(), 1);\n        }\n        private void BGW3_ProgressChanged(object sender, System.ComponentModel.ProgressChangedEventArgs e)\n        {\n            this.showInfoFun(e.UserState.ToString(), 1);\n        }\n        private void StasAbroado_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            GlobVars.pValue = -1;\n            this.BGW2.RunWorkerAsync();\n        }\n\n        private void MergeAll_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            String ChinaStas = GlobVars.AppStartPath + @\"\\dataBase\\TotalStation\\ChinaStations.shp\";\n            String ForeignStas = GlobVars.AppStartPath + @\"\\dataBase\\TotalStation\\ForeignStations.shp\";\n            String TotalStas = GlobVars.AppStartPath + @\"\\dataBase\\TotalStation\\tStations.shp\";\n\n            Geoprocessor gp = new Geoprocessor();\n            gp.OverwriteOutput=true;\n\n            String featList = ChinaStas + \";\" + ForeignStas;\n\n            ESRI.ArcGIS.DataManagementTools.Merge merge = new ESRI.ArcGIS.DataManagementTools.Merge();\n            merge.inputs = featList;\n            merge.output = TotalStas;\n\n            try\n            {\n                gp.Execute(merge,null);\n            }\n            catch (System.Exception ex)\n            {\n                this.showInfoFun(\"Error generating file including total station!\" + gp.GetMessage(0) + gp.GetMessage(1) + gp.GetMessage(2) + gp.GetMessage(3), 1);\n                return;\n            }\n            this.showInfoFun(\"File including total station is generated successfully!\", 1);\n        }\n\n        private void SelStatFile_Paint(object sender, PaintEventArgs e)\n        {\n\n        }\n\n        private void xtraTabControl1_Click(object sender, EventArgs e)\n        {\n\n        }\n\n        private void savsplinacmd_Click(object sender, EventArgs e)\n        {\n        }\n\n        private void interResDir_DoubleClick(object sender, EventArgs e)\n        {\n            this.dirDialog.Description = \"Please set the interpolation result directory\";\n            if (dirDialog.ShowDialog() == DialogResult.OK)\n            {\n                this.interResDir.Text = dirDialog.SelectedPath;\n            }\n        }\n\n        private void textEdit5_DoubleClick(object sender, EventArgs e)\n        {\n            this.dirDialog.Description = \"Please set the error result directory\";\n            if (dirDialog.ShowDialog() == DialogResult.OK)\n            {\n                this.interCovDir.Text = dirDialog.SelectedPath;\n            }\n        }\n\n        private void savelapgrdcmd_Click(object sender, EventArgs e)\n        {\n            /*long fileCount = Convert.ToInt32(this.InpterpNum.Text.Trim());\n            String[] resNames=new String[fileCount];\n            String[] covNames=new String[fileCount];\n            String resPrefix=this.PrefixRes.Text.Trim();\n            String covPrefix=this.PrefixCov.Text.Trim();\n            String resDir = this.interResDir.Text.Trim();\n            String covDir = this.interCovDir.Text.Trim();\n\n            String SurfNum=\"\";\n            for (int i = 0; i < fileCount;i++ )\n            {\n                resNames[i] = resDir + \"\\\\\" + resPrefix + (i + 1).ToString().Trim() + \".grd\";\n                covNames[i] = covDir + \"\\\\\" + covPrefix + (i + 1).ToString().Trim() + \".grd\";\n                SurfNum+=(i+1).ToString().Trim()+\" \";\n            }\n\n            ArrayList AL = new ArrayList();\n\n            String[] tempStr = this.sConfLapgrd.Document.Text.Split('\\n');\n\n            AL.Add(tempStr[0]);\n            AL.Add(SurfNum.Trim());\n            for (int i = 2; i < 17; i++)\n                AL.Add(tempStr[i]);\n            for (int i = 0; i < fileCount; i++)\n                AL.Add(resNames[i]);\n            for (int i = 18; i < 21; i++)\n                AL.Add(tempStr[i]);\n            for (int i = 0; i < fileCount; i++)\n                AL.Add(covNames[i]);\n            for (int i = 22; i < tempStr.Length; i++)\n                AL.Add(tempStr[i]);\n\n            String filename = GlobFuncs.saveFile(saveFileDialog, \"CMD(*.cmd)|*.cmd\");\n\n            if (filename.Trim() != \"\")\n            {\n                this.lapgrdapath.Text = filename;\n                if (GlobFuncs.FileWrite(filename, ref AL))\n                    this.showInfoFun(System.IO.Path.GetFileName(filename) + \"保存成功!\", 1);\n            }*/\n        }\n\n        private void selInterpDir_Click(object sender, EventArgs e)\n        {\n            this.dirDialog.Description = \"Please set interpolation file directory\";\n            if (dirDialog.ShowDialog() == DialogResult.OK)\n            {\n                this.nInterpDir.Text = dirDialog.SelectedPath;\n            }\n        }\n\n        private void splinaExe_Click(object sender, EventArgs e)\n        {\n            int runtimes = GlobFuncs.getFcount(this.nInterpDir1.Text.Trim(), this.splinabcmdFN.Text.Trim());\n\n            for (int i = 0; i < runtimes; i++)\n                runSplina(i);\n            \n        }\n\n        private void runSplina(int subNum)\n        {\n            String tdataDir = this.nInterpDir1.Text.Trim();\n            String splinacmdPath = this.splinabcmdFN.Text.Trim();\n            splinacmdPath=splinacmdPath.Substring(0,splinacmdPath.LastIndexOf('.'))+subNum.ToString().Trim().PadLeft(5,'0')+\".cmd\";\n            String splinaLogPath = \"splina\"+subNum.ToString().Trim().PadLeft(5,'0')+\".log\";\n            String splinbLogPath = \"splinb\" + subNum.ToString().Trim().PadLeft(5, '0') + \".log\";\n\n            if (p == null)\n            {\n                try\n                {\n                    p = new System.Diagnostics.Process();\n                    p.StartInfo.FileName = \"cmd.exe\";\n                    p.StartInfo.UseShellExecute = false;\n                    p.StartInfo.RedirectStandardInput = true;\n                    p.StartInfo.RedirectStandardOutput = true;\n                    p.StartInfo.CreateNoWindow = true;\n                    p.StartInfo.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;\n                    p.Start();\n                    \n                    p.StandardInput.WriteLine(\"cd /d \" + tdataDir);\n                    if (radioGroup1.SelectedIndex == 0)\n                        p.StandardInput.WriteLine(GlobVars.splinaPath + \"<\" + splinacmdPath + \">\" + splinaLogPath);\n                    else\n                        p.StandardInput.WriteLine(GlobVars.splinbPath + \"<\" + splinacmdPath + \">\" + splinbLogPath);\n                    p.StandardInput.WriteLine(\"exit\");\n                    p.WaitForExit();\n                    //this.showInfoFun(p.StandardOutput.ReadToEnd(), 1);\n                    p = null;\n                }\n                catch (System.Exception ex)\n                {\n                    this.showInfoFun(\"An error occurred. Please check if the file already exists!\", 1);\n                }\n                if (radioGroup1.SelectedIndex == 0)\n                    this.showInfoFun(\"The command of splina is done-->\"+splinacmdPath, 1);\n                else\n                    this.showInfoFun(\"The command of splinb is done-->\"+splinacmdPath, 1);\n            }\n            else\n            {\n                this.showInfoFun(\"Another command is running！\", 1);\n            }\n        }\n\n        private void lapgrdExe_Click(object sender, EventArgs e)\n        {\n            int runtimes = GlobFuncs.getFcount(this.nInterpDir1.Text.Trim(), this.lapgrdcmdFN.Text.Trim());\n\n            for (int i = 0; i < runtimes; i++)\n                runlapgrd(i);\n        }\n\n        private void runlapgrd(int subNum)\n        {\n            String tdataDir = this.nInterpDir1.Text.Trim();\n            String lapgrdcmdPath = this.lapgrdcmdFN.Text.Trim();\n            lapgrdcmdPath = lapgrdcmdPath.Substring(0, lapgrdcmdPath.LastIndexOf('.')) + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd\";\n            String lapgrdLogPath = \"lapgrd\" + subNum.ToString().Trim().PadLeft(5, '0') + \".log\";\n\n            if (p == null)\n            {\n                try\n                {\n                    p = new System.Diagnostics.Process();\n                    p.StartInfo.FileName = \"cmd.exe\";\n                    p.StartInfo.UseShellExecute = false;\n                    p.StartInfo.RedirectStandardInput = true;\n                    p.StartInfo.RedirectStandardOutput = true;\n                    p.StartInfo.CreateNoWindow = true;\n                    p.StartInfo.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;\n                    p.Start();\n                    p.StandardInput.WriteLine(\"cd /d \" + tdataDir);\n                    p.StandardInput.WriteLine(GlobVars.lapgrdPath + \"<\" + lapgrdcmdPath + \">\" + lapgrdLogPath);\n                    p.StandardInput.WriteLine(\"exit\");\n                    //this.showInfoFun(p.StandardOutput.ReadToEnd(), 1);\n                    p.WaitForExit();\n                    p = null;\n                }\n                catch (System.Exception ex)\n                {\n                    this.showInfoFun(\"An error occurred. Please check if the file already exists!\", 1);\n                }\n\n                this.showInfoFun(\"The command of lapgrd is done-->\" + lapgrdcmdPath, 1);\n            }\n            else\n            {\n                this.showInfoFun(\"Another command is running！\", 1);\n            }\n        }\n        private void SelBFilePath_Click(object sender, EventArgs e)\n        {\n            String filename = GlobFuncs.openFile(openFileDialog1, \"SHP(*.shp)|*.shp\");\n            if (filename.Trim() != \"\")\n                this.BFilePath.Text = filename;\n        }\n\n        private void staslistPathB_Click(object sender, EventArgs e)\n        {\n            String filename = GlobFuncs.openFile(openFileDialog1, \"TXT(*.txt)|*.txt\");\n            if (filename.Trim() != \"\")\n                this.staslistPath.Text = filename;\n        }\n\n        private void selInputPath_Click(object sender, EventArgs e)\n        {\n            String filename = GlobFuncs.openFile(openFileDialog1, \"SHP(*.shp)|*.shp\");\n            if (filename.Trim() != \"\")\n                this.InputStas.Text = filename;\n        }\n\n        private void simpleButton1_Click(object sender, EventArgs e)\n        {\n            String filename = GlobFuncs.openFile(openFileDialog1, \"TXT(*.txt)|*.txt\");\n            if (filename.Trim() != \"\")\n                this.recsPath.Text = filename;\n        }\n\n        private void saveInterpData_Click(object sender, EventArgs e)\n        {\n            String filename = GlobFuncs.saveFile(saveFileDialog, \"DAT(*.dat)|*.dat\");\n            if(filename.Trim()!=\"\")\n                this.InterpPath.Text = filename;\n        }\n\n        private void CheckRemove_Click(object sender, EventArgs e)\n        {\n            double dataCompl = Convert.ToInt16(this.dataComplete.Text.Trim()) / 100.0;\n            CheckandRemove(ref GlobVars.mStruct);\n        }\n\n        private void CheckandRemove(ref MeteoStruct mStruct)\n        {\n            long dataLength = GlobVars.dataLength;\n\n            int dcomplete=Convert.ToInt16(this.dataComplete.Text.Trim());\n\n            long lackCount;\n            double test;\n            try\n            {\n                for (int i = 0; i < mStruct.mData.Length; i++)\n                {\n                    lackCount = 0;\n                    for (int j = 0; j < dataLength; j++)\n                        if (mStruct.mData[i].climData[j] == 32744 || mStruct.mData[i].climData[j] == 32766)\n                        {\n                            mStruct.mData[i].climData[j] = 32766;\n                            lackCount++;\n                        }\n                        else if (mStruct.mData[i].climData[j] == 32700)\n                        {\n                            mStruct.mData[i].climData[j] = 0.0;\n                        }\n                        else if (mStruct.mData[i].climData[j] >= 31000 && mStruct.mData[i].climData[j]<32000)\n                        {\n                            mStruct.mData[i].climData[j] -= 31000;\n                            mStruct.mData[i].climData[j] *= 0.1;\n                        }\n                        else if (mStruct.mData[i].climData[j] >= 30000 && mStruct.mData[i].climData[j] < 31000)\n                        {\n                            mStruct.mData[i].climData[j] -= 30000;\n                            mStruct.mData[i].climData[j] *= 0.1;\n                        }\n                        else if (mStruct.mData[i].climData[j] >= 32000 && mStruct.mData[i].climData[j] < 33000)\n                        {\n                            mStruct.mData[i].climData[j] -= 32000;\n                            mStruct.mData[i].climData[j] *= 0.1;\n                        }\n                        else if (SelVars.SelectedIndex == 6 || SelVars.SelectedIndex == 7  && mStruct.mData[i].climData[j] >= 300)\n                        {\n                            mStruct.mData[i].climData[j] -= 300;\n                        }\n                        else if(SelVars.SelectedIndex == 9 || SelVars.SelectedIndex == 10 || SelVars.SelectedIndex == 12 && mStruct.mData[i].climData[j] >= 1000)\n                        {\n                            mStruct.mData[i].climData[j] -= 1000;\n                        }\n                        else if(SelVars.SelectedIndex==11 || SelVars.SelectedIndex==13)\n                        {\n                            if (mStruct.mData[i].climData[j] >= 100)\n                                mStruct.mData[i].climData[j] -= 100;\n                            else if (mStruct.mData[i].climData[j] >= 95)\n                                mStruct.mData[i].climData[j] -= 95;\n                            else if (mStruct.mData[i].climData[j] >= 90)\n                                mStruct.mData[i].climData[j] -= 90;\n                        }\n                    //test=lackCount / (float)(dataLength) * 100.0;\n                    //this.showInfoFun(test.ToString(),1);\n\n                    if (lackCount / (float)(dataLength) * 100.0 > (100.0 - dcomplete))\n                    {\n                        mStruct.mData[i].stasCode = \"-1\";\n                        mStruct.mData[i].climData = null;\n                    }\n                }\n\n                //GlobFuncs.FileWrite(@\"G:\\YF_Software\\temptest_CR.dat\", ref GlobVars.mStruct.mData, dataLength);\n            }\n            catch (System.Exception ex)\n            {\n                this.showInfoFun(\"Error in executing process!\",1);\n                return;\n            }\n            this.showInfoFun(\"Success in checking and removing the stations of data integrity less than\" + dcomplete + \"%!\", 1);\n        }\n\n        private void outputdata_Click(object sender, EventArgs e)\n        {\n            bool isonlyStat = isSplit.Checked;\n            int selIndex = this.selScale.SelectedIndex;\n            int statMethod;\n\n            if(this.selstatMethod.EditValue==\"Mean\")\n                statMethod=0;\n            else\n                statMethod=1;\n\n            switch (selIndex)\n            {\n                case 0:\n                    statScales(selIndex,statMethod,isonlyStat);\n                    break;\n                case 1:\n                    statScales(selIndex, statMethod,isonlyStat);\n                    break;\n                default:\n                    statScales(selIndex, statMethod, isonlyStat);\n                    break;\n            }\n        }\n\n\n        private void statScales(int selIndex, int statMethod,bool isonlyStat)\n        {\n            try\n            {\n                int days;\n                long tCount = GlobVars.mStruct.mData.Length;\n                long tDays = GlobVars.dataLength;\n                DateTime DateBeg = GlobVars.mStruct.mData[0].recsDT[0];\n                int curyear = 0;\n                double dataStore = 0.0;\n                DateTime curEndYear;\n                int realCount = 0;\n                long resCount = 0;\n\n\n                if (selIndex == 0)\n                {\n                    GlobVars.dateName.Clear();\n\n                    days = Convert.ToInt16(this.inputDays.Text.Trim());\n                    if (tDays < days)\n                    {\n                        this.showInfoFun(\"Error：data length cannot be less than the setting scale!\", 1);\n                        return;\n                    }\n                    try\n                    {\n                        int  Flag = 0;\n\n                        for (int i = 0; i < tCount; i++)\n                        {\n                            if (GlobVars.mStruct.mData[i].stasCode == \"-1\")\n                                continue;\n                            Flag++;\n                            resCount = 0;\n                            for (int j = 0; j < tDays; )\n                            {\n                                curyear = Convert.ToInt16(DateBeg.ToString(\"yyyy\").Trim());\n                                curEndYear = new DateTime(curyear, 12, 31);\n                                realCount = 0;\n                                dataStore = 0.0;\n                                for (int k = 0; k < days; k++)\n                                    if (j < tDays && GlobVars.mStruct.mData[i].recsDT[j] <= curEndYear)\n                                    {\n                                        if (Flag==1 && k == 0)\n                                            GlobVars.dateName.Add(GlobVars.mStruct.mData[i].recsDT[j].ToString(\"yyyyMMdd\"));\n                                        dataStore += GlobVars.mStruct.mData[i].climData[j];\n                                        realCount++;\n                                        j++;\n                                    }\n\n                                if (statMethod == 0)\n                                    dataStore /= (float)realCount;\n                                GlobVars.mStruct.mData[i].climData[resCount++] = dataStore;\n                                if (j == tDays)\n                                    break;\n                                DateBeg = GlobVars.mStruct.mData[i].recsDT[j];\n                            }\n\n                        }\n                    }\n                    catch (System.Exception ex)\n                    {\n                        this.showInfoFun(\"Error in daily scale data statistics!\", 1);\n                        return;\n                    }\n                    //this.showInfoFun(\"日尺度数据统计结束！\", 1);\n                }\n                else if (selIndex == 1)\n                {\n                    GlobVars.dateName.Clear();\n                    bool flag=true;\n                    try\n                    {\n                        for (int i = 0; i < tCount; i++)\n                        {\n                            if (GlobVars.mStruct.mData[i].stasCode == \"-1\")\n                                continue;\n                            resCount = 0;\n                            DateBeg = GlobVars.mStruct.mData[i].recsDT[0];\n\n                            for (int j = 0; j < tDays; )\n                            {\n                                curyear = Convert.ToInt16(DateBeg.ToString(\"yyyy\").Trim());\n\n\n                                for (int k = 0; k < 11; k++)\n                                {\n                                    curEndYear = new DateTime(curyear, k + 2, 1);\n                                    realCount = 0;\n                                    dataStore = 0.0;\n                                    if (flag)\n                                        GlobVars.dateName.Add(curyear.ToString().Trim() + (k + 1).ToString(\"00\").Trim());\n                                    while (GlobVars.mStruct.mData[i].recsDT[j] < curEndYear)\n                                    {\n                                        dataStore += GlobVars.mStruct.mData[i].climData[j];\n                                        realCount++;\n                                        j++;\n                                    }\n                                    if (statMethod == 0)\n                                        dataStore /= (float)realCount;\n                                    GlobVars.mStruct.mData[i].climData[resCount++] = dataStore;\n                                }\n\n                                curEndYear = new DateTime(curyear, 12, 31);\n                                if (flag)\n                                {\n                                    GlobVars.dateName.Add(curyear.ToString().Trim() + (12).ToString().Trim());\n                                    //flag = false;\n                                } \n                                realCount = 0;\n                                dataStore = 0.0;\n                                while (j < tDays && GlobVars.mStruct.mData[11].recsDT[j] <= curEndYear)\n                                {\n                                    dataStore += GlobVars.mStruct.mData[i].climData[j];\n                                    realCount++;\n                                    j++;\n                                }\n                                if (statMethod == 0)\n                                    dataStore /= (float)realCount;\n                                GlobVars.mStruct.mData[i].climData[resCount++] = dataStore;\n\n                                if (j == tDays)\n                                    break;\n                                DateBeg = GlobVars.mStruct.mData[i].recsDT[j];\n                            }\n                            flag = false;\n\n                        }\n                    }\n                    catch (System.Exception ex)\n                    {\n                        this.showInfoFun(\"Error in monthly scale data statistics!\", 1);\n                        return;\n                    }\n                    //this.showInfoFun(\"月尺度数据统计结束！\", 1);\n                }\n                else\n                {\n                    GlobVars.dateName.Clear();\n                    try\n                    {\n                        for (int i = 0; i < tCount; i++)\n                        {\n                            if (GlobVars.mStruct.mData[i].stasCode == \"-1\")\n                                continue;\n                            resCount = 0;\n                            DateBeg = GlobVars.mStruct.mData[i].recsDT[0];\n\n                            for (int j = 0; j < tDays; )\n                            {\n                                curyear = Convert.ToInt16(DateBeg.ToString(\"yyyy\").Trim());\n                                if(i==0)\n                                    GlobVars.dateName.Add(curyear.ToString().Trim());\n                                curEndYear = new DateTime(curyear, 12, 31);\n                                realCount = 0;\n                                dataStore = 0.0;\n                                while (j < tDays && GlobVars.mStruct.mData[i].recsDT[j] <= curEndYear)\n                                {\n                                    dataStore += GlobVars.mStruct.mData[i].climData[j];\n                                    realCount++;\n                                    j++;\n                                }\n                                if (statMethod == 0)\n                                    dataStore /= (float)realCount;\n                                GlobVars.mStruct.mData[i].climData[resCount++] = dataStore;\n                                if (j == tDays)\n                                    break;\n                                DateBeg = GlobVars.mStruct.mData[i].recsDT[j];\n                            }\n                        }\n                    }\n                    catch (System.Exception ex)\n                    {\n                        this.showInfoFun(\"Error in annual scale data statistics!\", 1);\n                        return;\n                    }\n                    //this.showInfoFun(\"年尺度数据统计结束！\", 1);\n\n                }\n\n                String filename = GlobFuncs.saveFile(saveFileDialog, \"DAT(*.dat)|*.dat\");\n                if (isonlyStat)\n                {\n                    if (GlobFuncs.FileWrite(filename, ref GlobVars.mStruct.mData, resCount))\n                        this.showInfoFun(System.IO.Path.GetFileName(filename) + \"saved successfully!\", 1);\n                }\n                else\n                {\n\n                    int runtimes = resCount % (float)88 == 0 ? Convert.ToInt32(resCount / 88) : Convert.ToInt32(resCount / 88) + 1;\n                    String comStr = \"\";\n                    long start = 0;\n                    long end = 0;\n\n                    GlobVars.realCount = new ArrayList();\n\n                    if (filename.Trim() != \"\")\n                    {\n                        comStr = filename.Substring(0, filename.LastIndexOf('.'));\n\n                        for (int i = 0; i < runtimes; i++)\n                        {\n                            start = i * 88;\n                            if (i == runtimes - 1)\n                                end = resCount;\n                            else\n                                end = (i + 1) * 88;\n\n                            GlobVars.realCount.Add(end - start);\n\n                            filename = comStr + i.ToString().Trim().PadLeft(5, '0') + \".dat\";\n                            //Clear counter---stationNum\n                            GlobVars.stationNum = 0;\n\n                            if (GlobFuncs.FileWrite(filename, ref GlobVars.mStruct.mData, end, start))\n                                this.showInfoFun(System.IO.Path.GetFileName(filename) + \"saved successfully!\", 1);\n                        }\n                    }\n                }\n\n                GlobVars.resCount = resCount;\n            }\n            catch (System.Exception ex)\n            {\n                this.showInfoFun(ex.Message, 1);\n            }\n            \n        }\n        private void selScale_SelectedIndexChanged(object sender, EventArgs e)\n        {\n            int selIndex = this.selScale.SelectedIndex;\n            switch (selIndex)\n            {\n                case 0:\n                    this.inputDays.Enabled = true;\n                    break;\n                case 1:\n                    this.inputDays.Enabled = false;\n                    this.showInfoFun(\"Note：When calculating the monthly scale, the input data must be a complete year，e.g. 1970/1/1-1970/12/31！\", 1);\n                    break;\n                default:\n                    this.inputDays.Enabled = false;\n                    break;\n            }\n        }\n\n        private void SetVisHiddenScale_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (this.checkInterpScale.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Visible)\n                this.checkInterpScale.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n            else\n                this.checkInterpScale.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n        }\n\n        private void selSplinb_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (AnusplinbInterp.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n            {\n                if (!GlobVars.readsbcFile)\n                {\n                    ArrayList saIn;\n                    GlobFuncs.FileRead(GlobVars.splinbConfPath, out saIn);\n                    this.splinbREC.Document.Text = \"\";\n                    for (int i = 0; i < saIn.Count; i++)\n                    {\n                        this.splinbREC.Document.AppendText(saIn[i] + \"\\n\");\n                    }\n                    GlobVars.readsbcFile = true;\n                }\n                DocumentRange range = splinbREC.Document.Range;\n                CharacterProperties cp = this.splinbREC.Document.BeginUpdateCharacters(range);\n                cp.FontName = \"Times New Roman\";\n                cp.FontSize = 8;\n                this.splinbREC.Document.EndUpdateCharacters(cp);\n\n                if (!GlobVars.readlbcFile)\n                {\n                    ArrayList saIn;\n                    GlobFuncs.FileRead(GlobVars.lapgrdConfPath, out saIn);\n                    this.lapgrdREC.Document.Text = \"\";\n                    for (int i = 0; i < saIn.Count; i++)\n                    {\n                        this.lapgrdREC.Document.AppendText(saIn[i] + \"\\n\");\n                    }\n                    GlobVars.readsbcFile = true;\n                }\n                DocumentRange range1 = lapgrdREC.Document.Range;\n                CharacterProperties cp1 = this.lapgrdREC.Document.BeginUpdateCharacters(range1);\n                cp1.FontName = \"Times New Roman\";\n                cp1.FontSize = 8;\n                this.lapgrdREC.Document.EndUpdateCharacters(cp1);\n\n                if (!GlobVars.readsecFile)\n                {\n                    ArrayList saIn;\n                    GlobFuncs.FileRead(GlobVars.selnotConfPath, out saIn);\n                    this.selnotREC.Document.Text = \"\";\n                    for (int i = 0; i < saIn.Count; i++)\n                    {\n                        this.selnotREC.Document.AppendText(saIn[i] + \"\\n\");\n                    }\n                    GlobVars.readsecFile = true;\n                }\n                DocumentRange range2 = selnotREC.Document.Range;\n                CharacterProperties cp2 = this.selnotREC.Document.BeginUpdateCharacters(range2);\n                cp2.FontName = \"Times New Roman\";\n                cp2.FontSize = 8;\n                this.selnotREC.Document.EndUpdateCharacters(cp2);\n\n                AnusplinbInterp.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            }\n            else\n                AnusplinbInterp.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void selSplina_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            \n        }\n\n        private void ResDir_DoubleClick(object sender, EventArgs e)\n        {\n            this.dirDialog.Description = \"Please set interpolation results directory\";\n            if (dirDialog.ShowDialog() == DialogResult.OK)\n            {\n                this.ResDir.Text = dirDialog.SelectedPath;\n            }\n        }\n\n        private void CovDir_DoubleClick(object sender, EventArgs e)\n        {\n            this.dirDialog.Description = \"Please set error result directory\";\n            if (dirDialog.ShowDialog() == DialogResult.OK)\n            {\n                this.CovDir.Text = dirDialog.SelectedPath;\n            }\n        }\n\n        private void simpleButton3_Click(object sender, EventArgs e)\n        {\n            try\n            {\n                long fileCount = Convert.ToInt32(this.ResNum.Text.Trim());\n                String[] resNames = new String[fileCount];\n                String[] covNames = new String[fileCount];\n                String resPrefix = this.PrefixResFile.Text.Trim();\n                String covPrefix = this.PrefixCovFile.Text.Trim();\n                String resDir = this.ResDir.Text.Trim();\n                String covDir = this.CovDir.Text.Trim();\n\n                String SurfNum = \"\";\n                for (int i = 0; i < fileCount; i++)\n                {\n                    resNames[i] = resDir + \"\\\\\" + resPrefix + (i + 1).ToString().Trim() + \".grd\";\n                    covNames[i] = covDir + \"\\\\\" + covPrefix + (i + 1).ToString().Trim() + \".grd\";\n                    SurfNum += (i + 1).ToString().Trim() + \" \";\n                }\n\n                ArrayList AL = new ArrayList();\n\n                String[] tempStr = this.lapgrdREC.Document.Text.Split('\\n');\n\n                AL.Add(tempStr[0]);\n                AL.Add(SurfNum.Trim());\n                for (int i = 2; i < 17; i++)\n                    AL.Add(tempStr[i]);\n                for (int i = 0; i < fileCount; i++)\n                    AL.Add(resNames[i]);\n                for (int i = 18; i < 21; i++)\n                    AL.Add(tempStr[i]);\n                for (int i = 0; i < fileCount; i++)\n                    AL.Add(covNames[i]);\n                for (int i = 22; i < tempStr.Length; i++)\n                    AL.Add(tempStr[i]);\n\n                String filename = GlobFuncs.saveFile(saveFileDialog, \"CMD(*.cmd)|*.cmd\");\n\n                if (filename.Trim() != \"\")\n                {\n                    this.lapgrdbpath.Text = filename;\n                    if (GlobFuncs.FileWrite(filename, ref AL))\n                        this.showInfoFun(System.IO.Path.GetFileName(filename) + \"saved successfully!\", 1);\n                }\n            }\n            catch (System.Exception ex)\n            {\n                return;\n            }\n        }\n\n        private void selInterpDirb_Click(object sender, EventArgs e)\n        {\n            this.dirDialog.Description = \"Please set interpolation directory\";\n            if (dirDialog.ShowDialog() == DialogResult.OK)\n            {\n                this.nInterpDirb.Text = dirDialog.SelectedPath;\n            }\n        }\n\n        private void splinbExe_Click(object sender, EventArgs e)\n        {\n            String tdataDir = this.nInterpDirb.Text.Trim();\n            String splinbcmdPath = this.splinbcmdFN.Text.Trim();\n            String splinbLogPath = \"splinb.log\";\n\n            if (p == null)\n            {\n                try\n                {\n                    p = new System.Diagnostics.Process();\n                    p.StartInfo.FileName = \"cmd.exe\";\n                    p.StartInfo.UseShellExecute = false;\n                    p.StartInfo.RedirectStandardInput = true;\n                    p.StartInfo.RedirectStandardOutput = true;\n                    p.StartInfo.CreateNoWindow = true;\n                    p.StartInfo.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;\n                    p.Start();\n                    p.StandardInput.WriteLine(\"cd /d \" + tdataDir);\n                    p.StandardInput.WriteLine(GlobVars.splinbPath + \"<\" + splinbcmdPath + \">\" + splinbLogPath);\n                    p.StandardInput.WriteLine(\"exit\");\n                    p.WaitForExit();\n                    //this.showInfoFun(p.StandardOutput.ReadToEnd(), 1);\n                    p = null;\n                }\n                catch (System.Exception ex)\n                {\n                    this.showInfoFun(\"An error occurred. Please check if the file already exists!\", 1);\n                }\n                this.showInfoFun(\"The command of splinb has finished running!\", 1);\n            }\n            else\n            {\n                this.showInfoFun(\"Another command is running！\", 1);\n            }\n        }\n\n        private void lapgrdbExe_Click(object sender, EventArgs e)\n        {\n            String tdataDir = this.nInterpDirb.Text.Trim();\n            String lapgrdcmdPath = this.lapgrdbcmdFN.Text.Trim();\n            String lapgrdLogPath = \"lapgrd_b.log\";\n\n            if (p == null)\n            {\n                try\n                {\n                    p = new System.Diagnostics.Process();\n                    p.StartInfo.FileName = \"cmd.exe\";\n                    p.StartInfo.UseShellExecute = false;\n                    p.StartInfo.RedirectStandardInput = true;\n                    p.StartInfo.RedirectStandardOutput = true;\n                    p.StartInfo.CreateNoWindow = true;\n                    p.StartInfo.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;\n                    p.Start();\n                    p.StandardInput.WriteLine(\"cd /d \" + tdataDir);\n                    p.StandardInput.WriteLine(GlobVars.lapgrdPath + \"<\" + lapgrdcmdPath + \">\" + lapgrdLogPath);\n                    p.StandardInput.WriteLine(\"exit\");\n                    p.WaitForExit();\n                    //this.showInfoFun(p.StandardOutput.ReadToEnd(), 1);\n                    p = null;\n                }\n                catch (System.Exception ex)\n                {\n                    this.showInfoFun(\"An error occurred. Please check if the file already exists!\", 1);\n                }\n\n                this.showInfoFun(\"The command of lapgrd has finished running!\", 1);\n            }\n            else\n            {\n                this.showInfoFun(\"Another command is running！\", 1);\n            }\n        }\n\n        private void selnotExe_Click(object sender, EventArgs e)\n        {\n            String tdataDir = this.nInterpDir.Text.Trim();\n            String selnotcmdPath = this.selnotcmdFN.Text.Trim();\n            String selnotLogPath = \"selnot.log\";\n\n            if (p == null)\n            {\n                try\n                {\n                    p = new System.Diagnostics.Process();\n                    p.StartInfo.FileName = \"cmd.exe\";\n                    p.StartInfo.UseShellExecute = false;\n                    p.StartInfo.RedirectStandardInput = true;\n                    p.StartInfo.RedirectStandardOutput = true;\n                    p.StartInfo.CreateNoWindow = true;\n                    p.StartInfo.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;\n                    p.Start();\n                    p.StandardInput.WriteLine(\"cd /d \" + tdataDir);\n                    p.StandardInput.WriteLine(GlobVars.selnotPath + \"<\" + selnotcmdPath + \">\" + selnotLogPath);\n                    p.StandardInput.WriteLine(\"exit\");\n                    p.WaitForExit();\n                    //this.showInfoFun(p.StandardOutput.ReadToEnd(), 1);\n                    p = null;\n                }\n                catch (System.Exception ex)\n                {\n                    this.showInfoFun(\"An error occurred. Please check if the file already exists!\", 1);\n                }\n\n                this.showInfoFun(\"The command of selnot has finished running!\", 1);\n            }\n            else\n            {\n                this.showInfoFun(\"Another command is running！\", 1);\n            }\n        }\n\n        private void lackvalueExe_Click(object sender, EventArgs e)\n        {\n            String saveFileName=InterpPath.Text.Trim();\n            if (lackdeal())\n            {\n                if (!this.isChecked.Checked)\n                    this.showInfoFun(\"Handling completed！\", 1);\n                else\n                {\n                    if (saveFileName != \"\")\n                    {\n                        GlobFuncs.FileWrite(saveFileName, ref GlobVars.mStruct.mData, GlobVars.dataLength);\n                        this.showInfoFun(\"Handling completed and results saved successfully！\", 1);\n                    }\n                }\n            }\n            else\n                this.showInfoFun(\"Error processing exception value！\", 1);\n        }\n\n        private bool lackdeal()\n        {\n            //try\n            //{\n                long col = 0;\n                long row = 0;\n                long i = 0;\n\n                ArrayList gValue = new ArrayList();\n                ArrayList bValue = new ArrayList();\n\n                while (true)\n                {\n                    if (GlobVars.mStruct.mData[i].stasCode != \"-1\")\n                    {\n                        col = GlobVars.mStruct.mData[i].climData.Length;\n                        break;\n                    }\n                    i++;\n                }\n\n                row = GlobVars.mStruct.mData.Length;\n\n                for (i = 0; i < col; i++)\n                {\n                    bValue.Clear();\n                    gValue.Clear();\n\n                    for (long j = 0; j < row; j++)\n                    {\n                        if (GlobVars.mStruct.mData[j].stasCode != \"-1\")\n                            if (GlobVars.mStruct.mData[j].climData[i] == 32766)\n                                bValue.Add(j);\n                            else\n                                gValue.Add(j);\n                    }\n                    if(bValue.Count>0)\n                        IDW(i, ref gValue, ref bValue);\n                }\n            //}\n            //catch (System.Exception ex)\n            //{\n                // this.showInfoFun(ex.ToString(), 1);\n            //    return false;\n           // }\n            return true;\n        }\n\n        struct distweight\n        {\n            public double[,] dist;\n            public double[,] weight;\n            public double[] fenmu;\n        }\n\n\n        private void IDW(long wday,ref ArrayList gValue,ref ArrayList bValue)\n        {\n            int bNum = bValue.Count;\n            int gNum = gValue.Count;\n\n            long bInd;\n            long gInd;\n\n            double bX;\n            double bY;\n            double gX;\n            double gY;\n\n            double tempV = 0.0;\n\n            distweight dw = new distweight();\n            dw.dist = new double[bNum,gNum];\n            dw.weight = new double[bNum,gNum];\n            dw.fenmu = new double[bNum];\n\n            for (int i = 0; i < bNum; i++)\n            {\n                bInd = Convert.ToInt32(bValue[i]);\n                bX = GlobVars.mStruct.mData[bInd].X;\n                bY = GlobVars.mStruct.mData[bInd].Y;\n                dw.fenmu[i] = 0.0;\n\n                for (int j = 0; j < gNum; j++)\n                {\n                    gInd = Convert.ToInt32(gValue[j]);\n                    gX = GlobVars.mStruct.mData[gInd].X;\n                    gY = GlobVars.mStruct.mData[gInd].Y;\n\n                    dw.dist[i, j] = Math.Sqrt(Math.Pow(bX - gX, 2) + Math.Pow(bY - gY, 2));\n                    dw.fenmu[i] += Math.Pow(1.0/dw.dist[i, j],2);\n                }\n            }\n\n            for (int i = 0; i < bNum; i++)\n            {\n                tempV=0.0;\n                bInd = Convert.ToInt32(bValue[i]);\n\n                for (int j = 0; j < gNum;j++ )\n                {\n                    gInd = Convert.ToInt32(gValue[j]);\n                    dw.weight[i, j] = Math.Pow(1.0 / dw.dist[i, j], 2) / dw.fenmu[i];\n                    tempV += GlobVars.mStruct.mData[gInd].climData[wday] * dw.weight[i, j];\n                }\n                GlobVars.mStruct.mData[bInd].climData[wday] = tempV;\n            }\n        }\n\n        private void ExecRecsB_Click(object sender, EventArgs e)\n        {\n            String sCode = this.StasCode.Text.Trim();\n            String rYear = this.RecsYear.Text.Trim();\n            String sql;\n\n            MeteoDB mdb = new MeteoDB();\n\n            sql = \"SELECT Station,Year,Month,Day,APRE,DMXP,DMNP,MTEM,DMXT,DMNT,AVRH,MNRH,PREP,MEWS,MXWS,DMWS,EXWS,DEWS,SOHR FROM all\" + rYear + \" as T WHERE Station='\" + sCode + \"' ORDER BY T.Year,T.Month,T.Day\";\n            DataSet ds=mdb.GetDataFromDB(sql);\n            if (ds != null)\n            {\n                gridView1.ViewCaption = \"The total record of this query is \" + ds.Tables[0].Rows.Count.ToString().Trim();\n                gridControl1.DataSource = ds.Tables[0];\n                gridView1.RefreshData();\n                this.showInfoFun(\"Query successfully！\", 1);\n            }\n            else\n            {\n                gridView1.ViewCaption = \"There are 0 records in this query\";\n                gridControl1.DataSource = null;\n                gridView1.RefreshData();\n                this.showInfoFun(\"No records found for this station！\", 1);\n            }\n        }\n\n        private void QChinaDB_CheckedChanged(object sender, EventArgs e)\n        {\n            if (QChinaDB.Checked == true)\n            {\n                GlobVars.dbName =  \"MeteoData\";\n                QAbroadDB.Checked = false;\n            }\n        }\n\n        private void QAbroadDB_CheckedChanged(object sender, EventArgs e)\n        {\n            if (QAbroadDB.Checked == true)\n            {\n                GlobVars.dbName = \"MeteoData_extens\";\n                QChinaDB.Checked = false;\n\n            }\n        }\n\n        private void QueryRecs_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (QueryRecsP.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n                QueryRecsP.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            else\n                QueryRecsP.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void EmptyBufferFiles_Click(object sender, EventArgs e)\n        {\n            int count = GlobFuncs.DelHistoryFiles(GlobVars.AppStartPath + @\"\\TempStore\\Buffer\");\n\n            if (count > 0)\n                this.showInfoFun(\"Operation completed，but some files (count: \" + count.ToString().Trim() + \")cannot be deleted successfully due to system resource usage！\", 1);\n            else\n                this.showInfoFun(\"Buffer history file cleared successfully!\",1);\n        }\n\n        private void EmptyStasFiles_Click(object sender, EventArgs e)\n        {\n            int count = GlobFuncs.DelHistoryFiles(GlobVars.AppStartPath + @\"\\TempStore\\Stations\");\n\n            if (count > 0)\n                this.showInfoFun(\"Operation completed，but some files (count: \" + count.ToString().Trim() + \")cannot be deleted successfully due to system resource usage！\", 1);\n            else\n                this.showInfoFun(\"Successfully emptied station selection history files!\", 1);\n        }\n\n        private void DChinaDB_CheckedChanged(object sender, EventArgs e)\n        {\n            if (DChinaDB.Checked == true)\n            {\n                GlobVars.dbName = \"MeteoData\";\n                DAbroadDB.Checked = false;\n            }\n        }\n\n        private void DAbroadDB_CheckedChanged(object sender, EventArgs e)\n        {\n            if (DAbroadDB.Checked == true)\n            {\n                GlobVars.dbName = \"MeteoData_extens\";\n                DChinaDB.Checked = false;\n\n            }\n        }\n\n        private void ExecEmpty_Click(object sender, EventArgs e)\n        {\n            String rYear = this.rYearE.Text.Trim();\n            String sql;\n\n            MeteoDB mdb = new MeteoDB();\n\n            DataSet ds;\n\n            sql = \"DELETE FROM all\" + rYear;\n            try\n            {\n                ds = mdb.GetDataFromDB(sql); \n                \n                if (ds == null)\n                    this.showInfoFun(\"Data table clearing completed!\", 1);\n            }\n            catch (System.Exception ex)\n            {\n            \tthis.showInfoFun(\"Data table empty failed!\", 1);\n            }\n        }\n\n        private void DeleAllRecs_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (emptyRecs.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n                emptyRecs.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            else\n                emptyRecs.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void ToolComboBoxLayer_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n\n        }\n\n        private void ToolComboBoxLayer_EditValueChanged(object sender, EventArgs e)\n        {\n            if (m_mapControl.Map.LayerCount >= 1)\n            {\n                int j;\n                String Name=ToolComboBoxLayer.EditValue.ToString();\n\n                for(j=0;j<m_mapControl.Map.LayerCount;j++)\n                {\n                    if (Name == ((DevExpress.XtraEditors.Repository.RepositoryItemComboBox)ToolComboBoxLayer.Edit).Items[j].ToString())\n                    {\n                        m_mapControl.MoveLayerTo(j, 0);\n                        //地图刷新\n                        m_mapControl.Refresh(esriViewDrawPhase.esriViewGeography, null, null);\n                        m_pTocControl.Update();\n                    }\n                }\n                \n            }\n        }\n\n        private int mainTime = 30;\n        private void frmclose_Tick(object sender, EventArgs e)\n        {\n            showInfo.Text = richText;\n            this.showInfoFun(\"系统将会在\" + (mainTime).ToString() + \" 秒内关闭，请联系作者获取注册码！\", 1);\n            if (--mainTime == 0)\n                this.Close();\n        }\n\n        public GetMachineCode Getmac = new GetMachineCode();\n        private void GenerateMC_Click(object sender, EventArgs e)\n        {\n            this.MachCode.Text = Getmac.machinecode();\n        }\n\n        private void RegisterRC_Click(object sender, EventArgs e)\n        {\n            if (this.RegiCode.Text == Getmac.regcode(this.MachCode.Text))\n            {\n                Microsoft.Win32.RegistryKey retkey = Microsoft.Win32.Registry.CurrentUser.\n                    OpenSubKey(\"software\", true).CreateSubKey(\"MPIS\").CreateSubKey(\"SOFTWARE CODE\");\n                //CreateSubKey(this.textEdit2 .Text.TrimEnd());\n                retkey.SetValue(\"UserName\", this.RegiCode.Text.TrimEnd());\n\n                this.Text = \" Meteo-Data Preprocessing and Interpolation System\";\n                this.frmclose.Enabled = false;\n\n                this.showInfoFun(\"Registration Information：Success！\", 1);\n            }\n            else\n            {\n                this.showInfoFun(\"Registration Information：Permission Denied！\", 1);\n            }\n        }\n\n        private void CopyMachCode_Click(object sender, EventArgs e)\n        {\n            if (this.MachCode.Text.Trim() != \"\")\n            {\n                Clipboard.SetDataObject(this.MachCode.Text.Trim());\n                this.showInfoFun(\"Machine Code has been copied!\", 1);\n            }\n            else\n            {\n                this.showInfoFun(\"Please generate the Machine Code firstly!\", 1);\n            }\n        }\n\n        private void simpleButton4_Click(object sender, EventArgs e)\n        {\n            IDataObject iData = Clipboard.GetDataObject();\n            if (iData.GetDataPresent(DataFormats.Text))\n            {\n                RegiCode.Text = (String)iData.GetData(DataFormats.Text);\n            } \n        }\n\n        private void ToolBoxB_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (tools.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n                tools.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            else\n                tools.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void RegisterB_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (RegisterP.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n                RegisterP.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            else\n                RegisterP.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void simpleButton2_Click(object sender, EventArgs e)\n        {\n\n        }\n\n        private void GenerateCMDDir_Click(object sender, EventArgs e)\n        {\n            this.dirDialog.Description = \"Please set interpolation directory\";\n            if (dirDialog.ShowDialog() == DialogResult.OK)\n            {\n                this.nInterpDir.Text = dirDialog.SelectedPath;\n            }\n        }\n\n        private int getSelVarUnit()\n        {\n            int x=-1;\n            switch (GlobVars.selVar)\n            {\n                case 8:\n                    x= 7;\n                    break;\n                default:\n                    x=5;\n                    break;\n            }\n            return x;\n        }\n\n        private String spaDir;\n        private double xlr, pix, line, ylr, siz, xul, yul;\n        private String demF;\n\n        private void ExecSplinaCMD_Click(object sender, EventArgs e)\n        {\n\n            int runtimes = GlobVars.resCount % (float)88 == 0 ? Convert.ToInt32(GlobVars.resCount / 88) : Convert.ToInt32(GlobVars.resCount / 88) + 1;\n            String comStr = \"\";\n\n            for (int i = 0; i < runtimes;i++ )\n            {\n                try\n                {\n                    GenerateSplinaCMD(i);\n                }\n                catch (System.Exception ex)\n                {\n                    this.showInfoFun(\"Error in execution！\", 1);\n                    return;\n                }\n                \n            }\n            this.showInfoFun(\"Done！\", 1);\n        }\n\n        private bool GenerateSplinaCMD(int subNum)\n        {\n            spaDir = this.nInterpDir.Text.Trim();\n            ArrayList dataFList = GlobFuncs.getFiles(spaDir,this.dataFile.Text.Trim());\n            demF = spaDir + @\"\\\" + this.demFile.Text.Trim();\n            String spaCMDF = spaDir + @\"\\\" + \"splina\"+subNum.ToString().Trim().PadLeft(5,'0')+\".cmd\";\n            String selCMDF = spaDir + @\"\\\" + \"selnot\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd\";\n            String spbCMDF = spaDir + @\"\\\" + \"splinb\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd\";\n\n            ArrayList saIn;\n            ArrayList dsaIn;\n            ArrayList saOut = new ArrayList();\n            ArrayList saOut_sel = new ArrayList();\n            int Knots = 0;\n\n            saOut.Add(DateTime.Now.ToString()); //第1行\n            saOut.Add(getSelVarUnit().ToString().Trim());\n            saOut.Add(\"2\");\n            saOut.Add(\"1\");\n            saOut.Add(\"0\");\n            saOut.Add(\"0\");\n\n            if (GlobFuncs.FileRead(dataFList[subNum].ToString().Trim(), out dsaIn))\n                Knots = Convert.ToInt32(dsaIn.Count / 2);//节点数\n\n            if (spaDir != \"\" && GlobFuncs.FileRead(demF, out saIn))\n            {\n                int i = 0;\n                String[] spstr = saIn[i++].ToString().Trim().Split();\n                pix = Convert.ToDouble(spstr[spstr.Length - 1].Trim());\n\n                spstr = saIn[i++].ToString().Trim().Split();\n                line = Convert.ToDouble(spstr[spstr.Length - 1].Trim());\n\n                spstr = saIn[i++].ToString().Trim().Split();\n                xlr = Convert.ToDouble(spstr[spstr.Length - 1].Trim());\n\n                spstr = saIn[i++].ToString().Trim().Split();\n                ylr = Convert.ToDouble(spstr[spstr.Length - 1].Trim());\n\n                spstr = saIn[i++].ToString().Trim().Split();\n                siz = Convert.ToDouble(spstr[spstr.Length - 1].Trim());\n                xul = xlr + siz * pix;\n                yul = ylr + siz * line;\n\n                saOut.Add((xlr - 10 * siz).ToString().Trim() + \" \" + (xul + 10 * siz).ToString().Trim() + \" 0 5\");\n                saOut.Add((ylr - 10 * siz).ToString().Trim() + \" \" + (yul + 10 * siz).ToString().Trim() + \" 0 5\");\n                saOut.Add(\"0 \" + GlobFuncs.getMax(GlobFuncs.getDataArray(ref saIn, Convert.ToInt32(line), Convert.ToInt32(pix))).ToString().Trim() + \" 1 1\");\n                saOut.Add(\"1000.00\");\n            }\n            else\n                return false;\n            if (this.RGenerateCMD.SelectedIndex == 0)\n            {\n                saOut.Add(\"0\");\n                saOut.Add(\"2\");\n                saOut.Add(GlobVars.realCount[subNum].ToString().Trim());\n                saOut.Add(\"0\");\n                saOut.Add(\"1\");\n                saOut.Add(\"1\");\n                saOut.Add(dataFList[subNum].ToString().Trim());\n                saOut.Add(\"3000\");\n                saOut.Add(\"11\");\n                saOut.Add(\"(a11,2f12.2,f10.3,\" + GlobVars.realCount[subNum].ToString().Trim() + \"f10.2)\");\n                saOut.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".res\");\n                saOut.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".opt\");\n                saOut.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".sur\");\n                saOut.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".lis\");\n                saOut.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cov\");\n                saOut.Add(\"\");\n                saOut.Add(\"\");\n\n                if (GlobFuncs.FileWrite(spaCMDF, ref saOut))\n                    this.showInfoFun(\"Generate Splina\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd successfully！\", 1);\n                else\n                    this.showInfoFun(\"Generate Splina\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd failed！\", 1);\n            }\n            else\n            {\n                saOut_sel.Add(\"2\");\n                saOut_sel.Add(\"1\");\n                saOut_sel.Add(\"0\");\n                saOut_sel.Add(\"0\");\n                saOut_sel.Add((xlr - 10 * siz).ToString().Trim() + \" \" + (xul + 10 * siz).ToString().Trim() + \" 0 5\");\n                saOut_sel.Add((ylr - 10 * siz).ToString().Trim() + \" \" + (yul + 10 * siz).ToString().Trim() + \" 0 5\");\n                saOut_sel.Add(\"0 \" + GlobFuncs.getMax(GlobFuncs.getDataArray(ref saIn, Convert.ToInt32(line), Convert.ToInt32(pix))).ToString().Trim() + \" 1 1\");\n                saOut_sel.Add(\"1000.00\");\n                saOut_sel.Add(\"0\");\n                saOut_sel.Add(GlobVars.realCount[subNum].ToString().Trim()); //\n                saOut_sel.Add(\"0\"); //\n                saOut_sel.Add(dataFList[subNum].ToString().Trim());\n                saOut_sel.Add(\"10000\");\n                saOut_sel.Add(\"11\");\n                saOut_sel.Add(\"(a11,2f12.2,f10.3,\" + GlobVars.realCount[subNum].ToString().Trim() + \"f10.2)\");\n                saOut_sel.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".not\");\n                saOut_sel.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".rej\");\n                saOut_sel.Add(Knots.ToString().Trim());\n\n                if (GlobFuncs.FileWrite(selCMDF, ref saOut_sel))\n                    this.showInfoFun(\"Generate Selnot\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd Successfully！\", 1);\n                else\n                    this.showInfoFun(\"Generate Selnot\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd failed！\", 1);\n\n                saOut.Add(\"0\");\n                saOut.Add(\"2\");\n                saOut.Add(GlobVars.realCount[subNum].ToString().Trim()); //\n                saOut.Add(\"0\");\n                saOut.Add(\"1\");\n                saOut.Add(\"1\");\n                saOut.Add(dataFList[subNum].ToString().Trim());\n                saOut.Add(\"10000\");\n                saOut.Add(\"11\");\n                saOut.Add(\"(a11,2f12.2,f10.3,\" + GlobVars.realCount[subNum].ToString().Trim() + \"f10.2)\");\n                saOut.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5,'0') + \".not\");\n                saOut.Add(\"1000\"); //\n                saOut.Add(\"\");\n                saOut.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".flg\");\n                saOut.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".res\");\n                saOut.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".opt\");\n                saOut.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".sur\");\n                saOut.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".lis\");\n                saOut.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cov\");\n                saOut.Add(\"\");\n                saOut.Add(\"\");\n\n                if (GlobFuncs.FileWrite(spbCMDF, ref saOut))\n                    this.showInfoFun(\"Generate Splinb\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd successfully！\", 1);\n                else\n                    this.showInfoFun(\"Generate Splinb\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd failed！\", 1);\n            }\n            return true;\n        }\n        private void interCovDir_DoubleClick(object sender, EventArgs e)\n        {\n            this.dirDialog.Description = \"Please set the error result directory\";\n            if (dirDialog.ShowDialog() == DialogResult.OK)\n            {\n                this.interCovDir.Text = dirDialog.SelectedPath;\n            }\n        }\n\n        private void Execlapgrd_Click(object sender, EventArgs e)\n        {\n            long runtimes = GlobVars.realCount.Count;\n            int start = 0;\n            int end = 0;\n\n            for (int i = 0; i < runtimes; i++)\n            {\n                end += Convert.ToInt32(GlobVars.realCount[i]);\n                generateLapgrd(i,start,end);\n                start += Convert.ToInt32(GlobVars.realCount[i]);\n            }\n\n        }\n\n\n        private bool generateLapgrd(int subNum,int start,int end)\n        {\n            long fileCount = Convert.ToInt64(GlobVars.realCount[subNum]);\n            String[] resNames = new String[fileCount];\n            String[] covNames = new String[fileCount];\n            String resPrefix = this.PrefixRes.Text.Trim();\n            String covPrefix = this.PrefixCov.Text.Trim();\n            String resDir = this.interResDir.Text.Trim();\n            String covDir = this.interCovDir.Text.Trim();\n            String covPrjName, resPrjName, demPrj;\n\n            String surF = this.spaDir + @\"\\\" + \"climateVar\"+subNum.ToString().Trim().PadLeft(5,'0')+\".sur\";\n            String covF = this.spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cov\";\n            ArrayList saOut = new ArrayList();\n\n            String lapCMDF = spaDir + @\"\\\" + \"lapgrd\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd\";\n\n            String SurfNum = \"\";\n            for (int i = start; i < end; i++)\n            {\n                resNames[i-start] = resDir + \"\\\\\" + resPrefix + GlobVars.dateName[i].ToString().Trim() + \".grd\";\n                covNames[i-start] = covDir + \"\\\\\" + covPrefix + GlobVars.dateName[i].ToString().Trim() + \".grd\";\n                resPrjName = resDir + \"\\\\\" + resPrefix + GlobVars.dateName[i].ToString().Trim() + \".prj\";\n                covPrjName = covDir + \"\\\\\" + covPrefix + GlobVars.dateName[i].ToString().Trim() + \".prj\";\n                demPrj = demF.Replace(\".txt\", \".prj\");\n                File.Copy(demPrj, spaDir + @\"\\\" + resPrjName);\n                File.Copy(demPrj, spaDir + @\"\\\" + covPrjName);\n                SurfNum += (i -start+ 1).ToString().Trim() + \" \";\n            }\n\n            saOut.Add(surF);\n            saOut.Add(SurfNum.Trim());\n            saOut.Add(\"1\");\n            saOut.Add(covF);\n            saOut.Add(\"2\");\n            saOut.Add(\"\");\n            saOut.Add(\"1\");\n            saOut.Add(\"1\");\n            saOut.Add(xlr.ToString().Trim() + \" \" + xul.ToString().Trim() + \" \" + siz.ToString().Trim());\n            saOut.Add(\"2\");\n            saOut.Add(ylr.ToString().Trim() + \" \" + yul.ToString().Trim() + \" \" + siz.ToString().Trim());\n            saOut.Add(\"0\");\n            saOut.Add(\"2\");\n            saOut.Add(demF);\n            saOut.Add(\"2\");\n            saOut.Add(\"-9999.0\");\n            for (int i = 0; i < fileCount; i++)\n                saOut.Add(resNames[i]);\n            saOut.Add(\"(\" + pix.ToString().Trim() + \"f10.2)\");\n\n            saOut.Add(\"2\");\n            saOut.Add(\"-9999.0\");\n            for (int i = 0; i < fileCount; i++)\n                saOut.Add(covNames[i]);\n            saOut.Add(\"(\" + pix.ToString().Trim() + \"f10.2)\");\n\n            if (GlobFuncs.FileWrite(lapCMDF, ref saOut))\n            {\n                this.showInfoFun(\"Generate lapgrd\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd successfully！\", 1);\n                return true;\n            }\n            else\n            {\n                this.showInfoFun(\"Generate lapgrd\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd failed！\", 1);\n                return false;\n            }\n        }\n\n\n        private void radioGroup1_SelectedIndexChanged(object sender, EventArgs e)\n        {\n            if (this.radioGroup1.SelectedIndex == 1)\n            {\n                this.Execselnot.Enabled = true;\n                selnotcmd.Enabled = true;\n                splinaExe.Text = \"第二步：运行Splinb命令\";\n                lapgrdExe.Text = \"第三步：运行lapgrd命令\";\n                splinabcmdFN.Text = \"splinb.cmd\";\n            }\n            else\n            {\n                this.Execselnot.Enabled = false;\n                selnotcmd.Enabled = false;\n                splinaExe.Text = \"第一步：运行Splina命令\";\n                lapgrdExe.Text = \"第二步：运行lapgrd命令\";\n                splinabcmdFN.Text = \"splina.cmd\";\n            }\n        }\n\n        private void RGenerateCMD_SelectedIndexChanged(object sender, EventArgs e)\n        {\n            if (this.RGenerateCMD.SelectedIndex == 1)\n            {\n                this.ExecSplinaCMD.Text = \"Generate selnot.cmd, splinb.cmd, etc.\";\n            }\n            else\n            {\n                this.ExecSplinaCMD.Text = \"Generate splina.cmd\";\n            }\n        }\n\n        private void Execselnot_Click(object sender, EventArgs e)\n        {\n            int runtimes = GlobFuncs.getFcount(this.nInterpDir1.Text.Trim(), this.selnotcmd.Text.Trim());\n\n            for (int i = 0; i < runtimes; i++)\n                runSelnot(i);\n        }\n\n        private void runSelnot(int subNum)\n        {\n            String tdataDir = this.nInterpDir1.Text.Trim();\n            String selnotcmdPath = this.selnotcmd.Text.Trim();\n            selnotcmdPath = selnotcmdPath.Substring(0, selnotcmdPath.LastIndexOf('.')) + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd\";\n            String selnotLogPath = \"selnot\"+subNum.ToString().Trim().PadLeft(5,'0')+\".log\";\n\n            if (p == null)\n            {\n                try\n                {\n                    p = new System.Diagnostics.Process();\n                    p.StartInfo.FileName = \"cmd.exe\";\n                    p.StartInfo.UseShellExecute = false;\n                    p.StartInfo.RedirectStandardInput = true;\n                    p.StartInfo.RedirectStandardOutput = true;\n                    p.StartInfo.CreateNoWindow = true;\n                    p.StartInfo.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;\n                    p.Start();\n                    p.StandardInput.WriteLine(\"cd /d \" + tdataDir);\n                    p.StandardInput.WriteLine(GlobVars.selnotPath + \"<\" + selnotcmdPath + \">\" + selnotLogPath);\n                    p.StandardInput.WriteLine(\"exit\");\n                    p.WaitForExit();\n                    //this.showInfoFun(p.StandardOutput.ReadToEnd(), 1);\n                    p = null;\n                }\n                catch (System.Exception ex)\n                {\n                    this.showInfoFun(\"An error occurred. Please check if the file already exists!\", 1);\n                }\n                this.showInfoFun(\"The command of selnot has finished runing-->\" + selnotcmdPath, 1);\n            }\n        }\n        private void pdfAbout_DoubleClick(object sender, EventArgs e)\n        {\n            \n        }\n\n        private void pdfAbout_MouseHover(object sender, EventArgs e)\n        {\n\n        }\n\n        private void QueryStats_Click(object sender, EventArgs e)\n        {\n            String sql;\n\n            MeteoDB mdb = new MeteoDB();\n\n            sql = \"SELECT  code as Station,X as Lon, Y as Lat, elev as Elev,stationName as StationName,regionalName as Region FROM station as T WHERE 1=1\";\n            DataSet ds = mdb.GetDataFromDB(sql);\n            if (ds != null)\n            {\n                gridView2.ViewCaption = \"The total number of stations is \" + ds.Tables[0].Rows.Count.ToString().Trim();\n                gridControl2.DataSource = ds.Tables[0];\n                gridView2.RefreshData();\n                this.showInfoFun(\"Query successfully！\", 1);\n            }\n            else\n            {\n                gridView2.ViewCaption = \"There are 0 records in this query\";\n                gridControl2.DataSource = null;\n                gridView2.RefreshData();\n                this.showInfoFun(\"No records found for this station！\", 1);\n            }\n        }\n\n        private void StationCDB_CheckedChanged(object sender, EventArgs e)\n        {\n            if (StationCDB.Checked == true)\n            {\n                GlobVars.dbName =  \"MeteoData\";\n                StationADB.Checked = false;\n            }\n        }\n\n        private void StationADB_CheckedChanged(object sender, EventArgs e)\n        {\n            if (StationADB.Checked == true)\n            {\n                GlobVars.dbName = \"MeteoData_extens\";\n                StationCDB.Checked = false;\n\n            }\n        }\n\n        private void LookStasB_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (CheckStats.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n                CheckStats.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            else\n                CheckStats.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void sCDB_CheckedChanged(object sender, EventArgs e)\n        {\n            if (sCDB.Checked == true)\n            {\n                GlobVars.dbName = \"MeteoData\";\n                sADB.Checked = false;\n            }\n        }\n\n        private void sADB_CheckedChanged(object sender, EventArgs e)\n        {\n            if (sADB.Checked == true)\n            {\n                GlobVars.dbName = \"MeteoData_extens\";\n                sCDB.Checked = false;\n\n            }\n        }\n\n        private void ExecEmptysDB_Click(object sender, EventArgs e)\n        {\n            String sql;\n\n            MeteoDB mdb = new MeteoDB();\n\n            DataSet ds;\n\n            sql = \"DELETE FROM station\";\n            try\n            {\n                ds = mdb.GetDataFromDB(sql);\n\n                if (ds == null)\n                    this.showInfoFun(\"Table [Station] clearing completed!\", 1);\n            }\n            catch (System.Exception ex)\n            {\n                this.showInfoFun(\"Table [Station] empty failed!\", 1);\n            }\n        }\n\n        private void deleteStats_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (emptysTable.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n                emptysTable.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            else\n                emptysTable.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void splitContainerControl1_Resize(object sender, EventArgs e)\n        {\n            if(this.WindowState==FormWindowState.Maximized)\n                this.splitContainerControl1.SplitterPosition = (int)((this.splitContainerControl1.Height) * 0.82);\n            else if(this.WindowState==FormWindowState.Normal)\n                this.splitContainerControl1.SplitterPosition = (int)((this.splitContainerControl1.Height) * 0.72);\n            else\n                this.splitContainerControl1.SplitterPosition = (int)((this.splitContainerControl1.Height) * 0.76);\n        }\n\n        private void databaseSet_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (this.dbconnectSet.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n            {\n                ArrayList saIn;\n                if(getDBConn(out saIn))\n                {\n                    dbConnSet(ref saIn);\n                }\n                else\n                    this.showInfoFun(\"Please configure database link parameters!\", 1);\n                \n                dbconnectSet.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            }\n            else\n                dbconnectSet.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n        private bool getDBConn(out ArrayList saIn)\n        {\n            try\n            {\n                GlobFuncs.FileRead(\"config.maps\", out saIn);\n                if (saIn==null || saIn.Count < 3)\n                    return false;\n                else\n                    return true;\n            }\n            catch (System.Exception ex)\n            {\n                saIn = null;\n                return false;\n            }\n        }\n\n        private void dbConnSet(ref ArrayList saIn)\n        {\n            this.ipaddr.Text = saIn[0].ToString().Trim();\n            this.dbuserid.Text = saIn[1].ToString().Trim();\n            this.dbpass.Text = saIn[2].ToString().Trim();\n            GlobVars.dbList.Add(this.ipaddr.Text);\n            GlobVars.dbList.Add(this.dbuserid.Text);\n            GlobVars.dbList.Add(this.dbpass.Text);\n        }\n        private void testConn_Click(object sender, EventArgs e)\n        {\n            GlobVars.preDB = this.dbpre.Text.Trim();\n\n            string mysqlStr = \"server=\" + this.ipaddr.Text.Trim() + \";user id=\" + this.dbuserid.Text.Trim() + \";password=\" + this.dbpass.Text.Trim() + \";pooling=false;charset=utf8;port=3306;database=\" + GlobVars.preDB+GlobVars.dbName;\n\n            MySqlConnection conn = new MySqlConnection(mysqlStr);\n\n            try\n            {\n                conn.Open();\n            }\n            catch (System.Exception ex)\n            {\n            \tthis.showInfoFun(\"Database link failed!\", 1);\n                return;\n            }\n            this.showInfoFun(\"Database link succeeded!\", 1);\n            conn.Close();\n                \n\n        }\n\n        private void dbconnectSet_Click(object sender, EventArgs e)\n        {\n\n        }\n\n        private void saveXML_Click(object sender, EventArgs e)\n        {\n            if (this.ipaddr.Text.Trim() != \"\" && this.dbuserid.Text.Trim() != \"\" && this.dbpass.Text.Trim() != \"\")\n            {\n                GlobVars.dbList.Clear();\n                GlobVars.dbList.Add(this.ipaddr.Text.Trim());\n                GlobVars.dbList.Add(this.dbuserid.Text.Trim());\n                GlobVars.dbList.Add(this.dbpass.Text.Trim());\n                GlobFuncs.FileWrite(\"config.maps\", ref GlobVars.dbList);\n                this.showInfoFun(\"Database configuration file saved successfully!\",1);\n            }\n            \n        }\n\n        private void dbInit_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            String[] dbName = { \"MeteoData\",  \"MeteoData_extens\" };\n            MeteoDB mdb;\n            String sql;\n            foreach (String dbn in dbName)\n            {\n                GlobVars.dbName = dbn;\n                mdb = new MeteoDB();\n\n                sql = \"CREATE TABLE station (code varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,\"+\n                        \"X tinytext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,\"+\n                        \"Y tinytext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,\"+\n                        \"elev tinytext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,\"+\n                        \"stationName tinytext CHARACTER SET utf8 COLLATE utf8_general_ci,\"+\n                        \"regionalName tinytext CHARACTER SET utf8 COLLATE utf8_general_ci,\"+\n                        \"PRIMARY KEY (code)) ENGINE=InnoDB DEFAULT CHARSET=utf8\";\n                if (!mdb.AlterTable(sql))\n                    this.showInfoFun(GlobVars.dbName + \"initialization failed!\", 1);\n                else\n                    this.showInfoFun(GlobVars.dbName + \"initialization succeeded!\", 1);\n            }\n            \n            \n        }\n\n        private void dirDialog_HelpRequest(object sender, EventArgs e)\n        {\n\n        }\n\n        private void AnusplinM_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (CheckInterp.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n            {\n                CheckInterp.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            }\n            else\n                CheckInterp.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void IDWMethod_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (IDWP.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n            {\n                IDWP.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            }\n            else\n                IDWP.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n            //this.showInfoFun(\"This function will be open soon.\", 1);\n        }\n\n        private void runIDW_Click(object sender, EventArgs e)\n        {\n            String outDir=this.idwdirT.Text.Trim();\n            if(outDir == \"\")\n            {\n                this.showInfoFun(\"Please input the out directory!\",1);\n                return;\n            }\n            String referRPath = this.referRasterT.Text.Trim();\n            IRasterProps rastProps;\n            GridIO GIO;\n            if (File.Exists(referRPath))\n            {\n                rastProps = getRasterProp(referRPath);\n                GIO = new GridIO();\n            }\n            else\n            {\n                this.showInfoFun(\"Error reading reference data, please check!\", 1);\n                return;\n            }\n            if (!GIO.initProps(rastProps))\n            {\n                this.showInfoFun(\"Initing raster property failed, please check the reference data\", 1);\n                return;\n            }\n            //Actual number of stations:  GlobVars.stationNum\n            //Actual length of records:   GlobVars.resCount\n            //Init GIO.GridValue\n            if (!GIO.initGridInfo())\n            {\n                this.showInfoFun(\"Initing out grid property failed!\", 1);\n                return;\n            }\n            String outname=\"\";//output filename\n            for (int i = 0; i < GlobVars.resCount; i++)\n            {\n                outname=outDir+\"\\\\\"+GlobVars.dateName[i]+\".tif\";\n                this.showInfoFun(\"Generating \"+outname+\", please wait...\",1);\n                this.reReshText();\n                int rc=0;//actual counter of station\n                GIO.mDInfo.mData = new double[GlobVars.stationNum];\n                for (int j = 0; j < GlobVars.mStruct.mData.Length; j++)\n                {\n                    if (GlobVars.mStruct.mData[j].stasCode != \"-1\")\n                    {\n                        GIO.mDInfo.mData[rc] = GlobVars.mStruct.mData[j].climData[i];\n                        rc++;\n                    }\n                }\n                if (!GIO.IDW2Raster())\n                        this.showInfoFun(\"Interpolation operation failed!\", 1);\n\n                GIO.createFileRasterDataset(outDir, outname, ref GIO);\n            }\n            this.showInfoFun(\"Interpolation finished!\", 1);\n        }\n\n        public void reReshText()\n        {\n            this.showInfo.Update();\n            this.Refresh();\n        }\n\n        private IRasterProps getRasterProp(String filepath)\n        {\n            IRasterDataset rastDs = ReadGridData(filepath);\n            IRaster rast = rastDs.CreateDefaultRaster();\n            return (IRasterProps)rast;\n            \n        }\n\n        private IRasterDataset ReadGridData(String strPath)\n        {\n            try\n            {\n                String path;\n                String fname;\n\n                //\n                //读取单波段数据\n                //\n                if (strPath != \"\")\n                {\n                    //首先解析文件目录和文件名\n\n                    int loc1;\n                    loc1 = strPath.LastIndexOf(\"\\\\\");\n                    path = strPath.Substring(0, loc1);\n                    fname = strPath.Substring(loc1 + 1);\n\n                    IWorkspaceFactory wsf = new RasterWorkspaceFactory();\n                    IWorkspace ws = wsf.OpenFromFile(path, 0);\n                    if (ws == null)\n                        return null;\n                    else\n                    {\n                        IRasterWorkspace rastwork = (IRasterWorkspace)ws;\n                        IRasterDataset rastDs = rastwork.OpenRasterDataset(fname);\n                        return rastDs;\n                    }\n                }\n                else\n                    return null;\n            }\n            catch (Exception ex)\n            {\n                return null;\n            }\n\n        }\n\n        private void idwdirsel_Click(object sender, EventArgs e)\n        {\n            this.dirDialog.Description = \"Please set the output directory\";\n            if (dirDialog.ShowDialog() == DialogResult.OK)\n            {\n                this.idwdirT.Text = dirDialog.SelectedPath;\n            }\n        }\n\n        private void simpleButton6_Click(object sender, EventArgs e)\n        {\n            String filename = GlobFuncs.openFile(openFileDialog1, \"TIFF(*.tif)|*.tif\");\n            if (filename.Trim() != \"\")\n                this.referRasterT.Text = filename;\n        }\n\n        private void checkEdit1_CheckedChanged(object sender, EventArgs e)\n        {\n            if (isChecked.Checked)\n                this.InterpPath.Enabled = true;\n            else\n                this.InterpPath.Enabled = false;\n        }\n        \n    }\n}\n",
			"file": "/E/Data/MPIS_New/MPIS/frmMain.cs",
			"file_size": 156779,
			"file_write_time": 132700983936255188,
			"settings":
			{
				"buffer_size": 151733,
				"line_ending": "Windows",
				"scratch": true
			}
		},
		{
			"file": "/E/public/数据/reult/dem.txt",
			"settings":
			{
				"buffer_size": 38505699,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/E/public/sjy/MTEM/splina_2019.cmd",
			"settings":
			{
				"buffer_size": 403,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACLAQAAMjAyMS0xMS0yNCAxNjozNTo1OQo1CjIKMQowCjAKLTE5Mzc3NDQuMTk4NjkwOCAtNTUzOTk0LjE5ODY5MDggMCAxCjMyODcwOTkuNDI2MTkwMiA0MTY1MzQ5LjQyNjE5MDIgMCAxCjUwOCA3MDcwIDEgMQowCjIKMTYKMAoxCjEKRTpccHVibGljXHNqeVxNVEVNXE1URU1fMjAxOS5kYXQKMzAwMAoxMQooYTExLDJmMTIuMixmMTAuMywxNmYxMC4yKQpFOlxwdWJsaWNcc2p5XE1URU1cY2xpbWF0ZVZhcl8yMDE5LnJlcwpFOlxwdWJsaWNcc2p5XE1URU1cY2xpbWF0ZVZhcl8yMDE5Lm9wdApFOlxwdWJsaWNcc2p5XE1URU1cY2xpbWF0ZVZhcl8yMDE5LnN1cgpFOlxwdWJsaWNcc2p5XE1URU1cY2xpbWF0ZVZhcl8yMDE5LmxpcwpFOlxwdWJsaWNcc2p5XE1URU1cY2xpbWF0ZVZhcl8yMDE5LmNvdgoKCgoAAAAAAAAAAI0BAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAACNAQAAMjAyMS0xMS0yNCAxNjo1MDozNQo1CjIKMQowCjAKLTE5Mzc3NDQuMTk4NjkwOCAtNTUzOTk0LjE5ODY5MDggMCAxCjMyODcwOTkuNDI2MTkwMiA0MTY1MzQ5LjQyNjE5MDIgMCAxCjUwOCA3MDcwIDEgMQowCjIKLTIKMAoxCjEKRTpccHVibGljXHNqeVxNVEVNXHNwbGluYV8yMDE5LmNtZAozMDAwCjExCihhMTEsMmYxMi4yLGYxMC4zLC0yZjEwLjIpCkU6XHB1YmxpY1xzanlcTVRFTVxjbGltYXRlVmFyXzIwMTkucmVzCkU6XHB1YmxpY1xzanlcTVRFTVxjbGltYXRlVmFyXzIwMTkub3B0CkU6XHB1YmxpY1xzanlcTVRFTVxjbGltYXRlVmFyXzIwMTkuc3VyCkU6XHB1YmxpY1xzanlcTVRFTVxjbGltYXRlVmFyXzIwMTkubGlzCkU6XHB1YmxpY1xzanlcTVRFTVxjbGltYXRlVmFyXzIwMTkuY292CgoKCgAAAAAAAAAAiwEAAAAAAAAAAAAAAAAAAAAAAACLAQAAAAAAAAAAAAAAAAAAAAAAAIsBAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfAAAAAAAAAB8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"left_delete",
					null,
					"AQAAAEEAAAAAAAAAQQAAAAAAAAABAAAAMQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCAAAAAAAAAEIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAEEAAAAAAAAAQgAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBAAAAAAAAAEEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"left_delete",
					null,
					"AQAAAGUAAAAAAAAAZQAAAAAAAAABAAAAMQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABmAAAAAAAAAGYAAAAAAAAAAAAAAACQckA"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAGUAAAAAAAAAZgAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABlAAAAAAAAAGUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "\n1000"
					},
					"BQAAAHMAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB1AAAAAAAAAAAAAAB1AAAAAAAAAHYAAAAAAAAAAAAAAHYAAAAAAAAAdwAAAAAAAAAAAAAAdwAAAAAAAAB4AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABzAAAAAAAAAHMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": ".00"
					},
					"AwAAAHgAAAAAAAAAeQAAAAAAAAAAAAAAeQAAAAAAAAB6AAAAAAAAAAAAAAB6AAAAAAAAAHsAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4AAAAAAAAAHgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					56,
					1,
					"revert",
					null,
					"BgAAAAAAAAAAAAAAAAAAAAAAAACTAQAAMjAyMS0xMS0yNCAyMDozNDo0NQo1CjIKMQowCjAKLTE5Mzc3NDQuMTk4NjkwOCAtNTUzOTk0LjE5ODY5MDggMCA1CjMyODcwOTkuNDI2MTkwMiA0MTY1MzQ5LjQyNjE5MDIgMCA1CjUwOCA3MDcwIDEgMQoxMDAwLjAwCjAKMgoxNgowCjEKMQpFOlxwdWJsaWNcc2p5XE1URU1cTVRFTV8yMDE5LmRhdAozMDAwCjExCihhMTEsMmYxMi4yLGYxMC4zLDE2ZjEwLjIpCkU6XHB1YmxpY1xzanlcTVRFTVxjbGltYXRlVmFyXzIwMTkucmVzCkU6XHB1YmxpY1xzanlcTVRFTVxjbGltYXRlVmFyXzIwMTkub3B0CkU6XHB1YmxpY1xzanlcTVRFTVxjbGltYXRlVmFyXzIwMTkuc3VyCkU6XHB1YmxpY1xzanlcTVRFTVxjbGltYXRlVmFyXzIwMTkubGlzCkU6XHB1YmxpY1xzanlcTVRFTVxjbGltYXRlVmFyXzIwMTkuY292CgoKCgAAAAAAAAAAkwEAAAAAAAAAAAAAAAAAAAAAAACTAQAAAAAAAAAAAAAAAAAAAAAAAJMBAAAAAAAAAAAAAAAAAAAAAAAAkwEAAAAAAAAAAAAAAAAAAAAAAACTAQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCAAAAAAAAAEIAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "/E/public/sjy/MTEM/lapgrd_2019.cmd",
			"settings":
			{
				"buffer_size": 1491,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABIBgAARTpccHVibGljXHNqeVxNVEVNXGNsaW1hdGVWYXJfMjAxOS5zdXIKMSAyIDMgNCA1IDYgNyA4IDkgMTAgMTEgMTIgMTMgMTQgMTUgMTYKMQpFOlxwdWJsaWNcc2p5XE1URU1cY2xpbWF0ZVZhcl8yMDE5LmNvdgoyCgoxCjEKCi0xOTM1MjQ0LjE5ODY5MDggLTU1NjQ5NC4xOTg2OTA4IDI1MC4wCjIKMzI4OTU5OS40MjYxOTAyIDQxNjI4NDkuNDI2MTkwMiAyNTAuMAowCjIKRTpccHVibGljXHNqeVxkZW0udHh0CjIKLTk5OTkuMApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTA5LTAxLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTA5LTA5LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTA5LTE3LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTA5LTI1LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEwLTAzLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEwLTExLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEwLTE5LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEwLTI3LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTExLTA0LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTExLTEyLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTExLTIwLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTExLTI4LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEyLTA2LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEyLTE0LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEyLTIyLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEyLTMwLmdyZAooNTUxNS4wZjEwLjIpCjIKLTk5OTkuMApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTA5LTAxZ3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMDktMDlncmQKRTpccHVibGljXHNqeVxNVEVNXFJFU1xSRVNfMjAxOS0wOS0xN2dyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTA5LTI1Z3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMTAtMDNncmQKRTpccHVibGljXHNqeVxNVEVNXFJFU1xSRVNfMjAxOS0xMC0xMWdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEwLTE5Z3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMTAtMjdncmQKRTpccHVibGljXHNqeVxNVEVNXFJFU1xSRVNfMjAxOS0xMS0wNGdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTExLTEyZ3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMTEtMjBncmQKRTpccHVibGljXHNqeVxNVEVNXFJFU1xSRVNfMjAxOS0xMS0yOGdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEyLTA2Z3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMTItMTRncmQKRTpccHVibGljXHNqeVxNVEVNXFJFU1xSRVNfMjAxOS0xMi0yMmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEyLTMwZ3JkCig1NTE1LjBmMTAuMikKAAAAAAAAAABGBgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABGBgAARTpccHVibGljXHNqeVxNVEVNXGNsaW1hdGVWYXJfMjAxOS5zdXIKMSAyIDMgNCA1IDYgNyA4IDkgMTAgMTEgMTIgMTMgMTQgMTUgMTYKMQpFOlxwdWJsaWNcc2p5XE1URU1cY2xpbWF0ZVZhcl8yMDE5LmNvdgoyCgoxCjEKCi0xOTM1MjQ0LjE5ODY5MDggLTU1NjQ5NC4xOTg2OTA4IDI1MC4wCjIKMzI4OTU5OS40MjYxOTAyIDQxNjI4NDkuNDI2MTkwMiAyNTAuMAowCjIKRTpccHVibGljXHNqeVxkZW0udHh0CjIKLTk5OTkuMApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTA5LTAxLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTA5LTA5LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTA5LTE3LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTA5LTI1LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEwLTAzLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEwLTExLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEwLTE5LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEwLTI3LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTExLTA0LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTExLTEyLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTExLTIwLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTExLTI4LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEyLTA2LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEyLTE0LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEyLTIyLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEyLTMwLmdyZAooNTUxNS4wZjEwLjIpCjIKLTk5OTkuMApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTA5LTAxZ3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMDktMDlncmQKRTpccHVibGljXHNqeVxNVEVNXFJFU1xSRVNfMjAxOS0wOS0xN2dyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTA5LTI1Z3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMTAtMDNncmQKRTpccHVibGljXHNqeVxNVEVNXFJFU1xSRVNfMjAxOS0xMC0xMWdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEwLTE5Z3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMTAtMjdncmQKRTpccHVibGljXHNqeVxNVEVNXFJFU1xSRVNfMjAxOS0xMS0wNGdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTExLTEyZ3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMTEtMjBncmQKRTpccHVibGljXHNqeVxNVEVNXFJFU1xSRVNfMjAxOS0xMS0yOGdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEyLTA2Z3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMTItMTRncmQKRTpccHVibGljXHNqeVxNVEVNXFJFU1xSRVNfMjAxOS0xMi0yMmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEyLTMwZ3JkCig1NTE1ZjEwLjIpCgAAAAAAAAAARAYAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpAgAAAAAAAOkCAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAABEBgAARTpccHVibGljXHNqeVxNVEVNXGNsaW1hdGVWYXJfMjAxOS5zdXIKMSAyIDMgNCA1IDYgNyA4IDkgMTAgMTEgMTIgMTMgMTQgMTUgMTYKMQpFOlxwdWJsaWNcc2p5XE1URU1cY2xpbWF0ZVZhcl8yMDE5LmNvdgoyCgoxCjEKCi0xOTM1MjQ0LjE5ODY5MDggLTU1NjQ5NC4xOTg2OTA4IDI1MC4wCjIKMzI4OTU5OS40MjYxOTAyIDQxNjI4NDkuNDI2MTkwMiAyNTAuMAowCjIKRTpccHVibGljXHNqeVxkZW0udHh0CjIKLTk5OTkuMApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTA5LTAxLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTA5LTA5LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTA5LTE3LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTA5LTI1LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEwLTAzLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEwLTExLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEwLTE5LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEwLTI3LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTExLTA0LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTExLTEyLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTExLTIwLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTExLTI4LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEyLTA2LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEyLTE0LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEyLTIyLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEyLTMwLmdyZAooNTUxNWYxMC4yKQoyCi05OTk5LjAKRTpccHVibGljXHNqeVxNVEVNXFJFU1xSRVNfMjAxOS0wOS0wMWdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTA5LTA5Z3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMDktMTdncmQKRTpccHVibGljXHNqeVxNVEVNXFJFU1xSRVNfMjAxOS0wOS0yNWdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEwLTAzZ3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMTAtMTFncmQKRTpccHVibGljXHNqeVxNVEVNXFJFU1xSRVNfMjAxOS0xMC0xOWdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEwLTI3Z3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMTEtMDRncmQKRTpccHVibGljXHNqeVxNVEVNXFJFU1xSRVNfMjAxOS0xMS0xMmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTExLTIwZ3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMTEtMjhncmQKRTpccHVibGljXHNqeVxNVEVNXFJFU1xSRVNfMjAxOS0xMi0wNmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEyLTE0Z3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMTItMjJncmQKRTpccHVibGljXHNqeVxNVEVNXFJFU1xSRVNfMjAxOS0xMi0zMGdyZAooNTUxNWYxMC4yKQoAAAAAAAAAAEQGAAAAAAAAAAAAAAAAAAAAAAAARAYAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUBAAAAAAAAJQEAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABEBgAARTpccHVibGljXHNqeVxNVEVNXGNsaW1hdGVWYXJfMjAxOS5zdXIKMSAyIDMgNCA1IDYgNyA4IDkgMTAgMTEgMTIgMTMgMTQgMTUgMTYKMQpFOlxwdWJsaWNcc2p5XE1URU1cY2xpbWF0ZVZhcl8yMDE5LmNvdgoyCgoxCjEKCi0xOTM1MjQ0LjE5ODY5MDggLTU1NjQ5NC4xOTg2OTA4IDI1MC4wCjIKMzI4OTU5OS40MjYxOTAyIDQxNjI4NDkuNDI2MTkwMiAyNTAuMAowCjIKRTpccHVibGljXHNqeVxkZW0udHh0CjIKLTk5OTkuMApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTA5LTAxLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTA5LTA5LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTA5LTE3LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTA5LTI1LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEwLTAzLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEwLTExLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEwLTE5LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEwLTI3LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTExLTA0LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTExLTEyLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTExLTIwLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTExLTI4LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEyLTA2LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEyLTE0LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEyLTIyLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cUkVTXFJFU18yMDE5LTEyLTMwLmdyZAooNTUxNWYxMC4yKQoyCi05OTk5LjAKRTpccHVibGljXHNqeVxNVEVNXENPVlxDT1ZfMjAxOS0wOS0wMWdyZApFOlxwdWJsaWNcc2p5XE1URU1cQ09WXENPVl8yMDE5LTA5LTA5Z3JkCkU6XHB1YmxpY1xzanlcTVRFTVxDT1ZcQ09WXzIwMTktMDktMTdncmQKRTpccHVibGljXHNqeVxNVEVNXENPVlxDT1ZfMjAxOS0wOS0yNWdyZApFOlxwdWJsaWNcc2p5XE1URU1cQ09WXENPVl8yMDE5LTEwLTAzZ3JkCkU6XHB1YmxpY1xzanlcTVRFTVxDT1ZcQ09WXzIwMTktMTAtMTFncmQKRTpccHVibGljXHNqeVxNVEVNXENPVlxDT1ZfMjAxOS0xMC0xOWdyZApFOlxwdWJsaWNcc2p5XE1URU1cQ09WXENPVl8yMDE5LTEwLTI3Z3JkCkU6XHB1YmxpY1xzanlcTVRFTVxDT1ZcQ09WXzIwMTktMTEtMDRncmQKRTpccHVibGljXHNqeVxNVEVNXENPVlxDT1ZfMjAxOS0xMS0xMmdyZApFOlxwdWJsaWNcc2p5XE1URU1cQ09WXENPVl8yMDE5LTExLTIwZ3JkCkU6XHB1YmxpY1xzanlcTVRFTVxDT1ZcQ09WXzIwMTktMTEtMjhncmQKRTpccHVibGljXHNqeVxNVEVNXENPVlxDT1ZfMjAxOS0xMi0wNmdyZApFOlxwdWJsaWNcc2p5XE1URU1cQ09WXENPVl8yMDE5LTEyLTE0Z3JkCkU6XHB1YmxpY1xzanlcTVRFTVxDT1ZcQ09WXzIwMTktMTItMjJncmQKRTpccHVibGljXHNqeVxNVEVNXENPVlxDT1ZfMjAxOS0xMi0zMGdyZAooNTUxNWYxMC4yKQoAAAAAAAAAAFMGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfQAAAAAAAAB9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"revert",
					null,
					"BQAAAAAAAAAAAAAAAAAAAAAAAABTBgAARTpccHVibGljXHNqeVxNVEVNXGNsaW1hdGVWYXJfMjAxOS5zdXIKMSAyIDMgNCA1IDYgNyA4IDkgMTAgMTEgMTIgMTMgMTQgMTUgMTYKMQpFOlxwdWJsaWNcc2p5XE1URU1cY2xpbWF0ZVZhcl8yMDE5LmNvdgoyCgoxCjEKLTE5MzUyNDQuMTk4NjkwOCAtNTU2NDk0LjE5ODY5MDggMjUwLjAKMgozMjg5NTk5LjQyNjE5MDIgNDE2Mjg0OS40MjYxOTAyIDI1MC4wCjAKMgpFOlxwdWJsaWNcc2p5XGRlbS50eHQKMgotOTk5OS4wCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMDktMDEuZ3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMDktMDkuZ3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMDktMTcuZ3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMDktMjUuZ3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMTAtMDMuZ3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMTAtMTEuZ3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMTAtMTkuZ3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMTAtMjcuZ3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMTEtMDQuZ3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMTEtMTIuZ3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMTEtMjAuZ3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMTEtMjguZ3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMTItMDYuZ3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMTItMTQuZ3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMTItMjIuZ3JkCkU6XHB1YmxpY1xzanlcTVRFTVxSRVNcUkVTXzIwMTktMTItMzAuZ3JkCig1NTE1ZjEwLjIpCjIKLTk5OTkuMApFOlxwdWJsaWNcc2p5XE1URU1cQ09WXENPVl8yMDE5LTA5LTAxLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cQ09WXENPVl8yMDE5LTA5LTA5LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cQ09WXENPVl8yMDE5LTA5LTE3LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cQ09WXENPVl8yMDE5LTA5LTI1LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cQ09WXENPVl8yMDE5LTEwLTAzLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cQ09WXENPVl8yMDE5LTEwLTExLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cQ09WXENPVl8yMDE5LTEwLTE5LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cQ09WXENPVl8yMDE5LTEwLTI3LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cQ09WXENPVl8yMDE5LTExLTA0LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cQ09WXENPVl8yMDE5LTExLTEyLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cQ09WXENPVl8yMDE5LTExLTIwLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cQ09WXENPVl8yMDE5LTExLTI4LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cQ09WXENPVl8yMDE5LTEyLTA2LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cQ09WXENPVl8yMDE5LTEyLTE0LmdyZApFOlxwdWJsaWNcc2p5XE1URU1cQ09WXENPVl8yMDE5LTEyLTIyLmdyZApFOlxwdWJsaWNcc2p5XE1URU1cQ09WXENPVl8yMDE5LTEyLTMwLmdyZAooNTUxNWYxMC4yKQoAAAAAAAAAAFMGAAAAAAAAAAAAAAAAAAAAAAAAUwYAAAAAAAAAAAAAAAAAAAAAAABTBgAAAAAAAAAAAAAAAAAAAAAAANMFAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfQAAAAAAAAB9AAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/E/public/sjy/MTEM/lapgrd_2020.cmd",
			"settings":
			{
				"buffer_size": 1728,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Z:\\public\\数据\\reult\\climateVar00000.sur\n1 2 3 4\n1\nZ:\\public\\数据\\reult\\climateVar00000.cov\n2\n\n1\n1\n225963.48315982 941463.48315982 250\n2\n2460313.928868 3321313.928868 250\n0\n2\nZ:\\public\\数据\\reult\\dem.txt\n2\n-9999.0\nRES\\RES_20190101.grd\nRES\\RES_20190109.grd\nRES\\RES_20190117.grd\nRES\\RES_20190125.grd\n(2862f10.2)\n2\n-9999.0\nCOV\\COV_20190101.grd\nCOV\\COV_20190109.grd\nCOV\\COV_20190117.grd\nCOV\\COV_20190125.grd\n(2862f10.2)\n",
			"file": "/E/public/数据/reult/lapgrd00000.cmd",
			"file_size": 444,
			"file_write_time": 132745462289029987,
			"settings":
			{
				"buffer_size": 410,
				"line_ending": "Windows",
				"scratch": true
			},
			"undo_stack":
			[
				[
					1,
					1,
					"convert_to_utf8",
					{
						"detect_on_fail": true,
						"stamp": "1637759216.7771184"
					},
					"AQAAAAAAAAAAAAAAmgEAAAAAAACsAQAAWjpccHVibGljXMOKw73CvsOdXHJldWx0XGNsaW1hdGVWYXIwMDAwMC5zdXIKMSAyIDMgNAoxClo6XHB1YmxpY1zDisO9wr7DnVxyZXVsdFxjbGltYXRlVmFyMDAwMDAuY292CjIKCjEKMQoyMjU5NjMuNDgzMTU5ODIgOTQxNDYzLjQ4MzE1OTgyIDI1MAoyCjI0NjAzMTMuOTI4ODY4IDMzMjEzMTMuOTI4ODY4IDI1MAowCjIKWjpccHVibGljXMOKw73CvsOdXHJldWx0XGRlbS50eHQKMgotOTk5OS4wClJFU1xSRVNfMjAxOTAxMDEuZ3JkClJFU1xSRVNfMjAxOTAxMDkuZ3JkClJFU1xSRVNfMjAxOTAxMTcuZ3JkClJFU1xSRVNfMjAxOTAxMjUuZ3JkCigyODYyZjEwLjIpCjIKLTk5OTkuMApDT1ZcQ09WXzIwMTkwMTAxLmdyZApDT1ZcQ09WXzIwMTkwMTA5LmdyZApDT1ZcQ09WXzIwMTkwMTE3LmdyZApDT1ZcQ09WXzIwMTkwMTI1LmdyZAooMjg2MmYxMC4yKQo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "Packages/C++/C Single File.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Compile"
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Compilation"
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Debug"
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++/C Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Compile"
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Compilation"
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Debug"
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Run-this"
				]
			],
			[
				"Packages/C++/C Single File.sublime-build",
				"Run-this"
			]
		],
		[
			[
				[
					"Packages/C++/C Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Compile"
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Debug"
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++/C Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Compile"
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++/C Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++/C Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/C Run.sublime-build",
					""
				],
				[
					"Packages/User/C Run.sublime-build",
					"C Build and Run"
				]
			],
			[
				"Packages/C++/C Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++/C Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/C Run.sublime-build",
					""
				],
				[
					"Packages/User/C Run.sublime-build",
					"C Build and Run"
				],
				[
					"Packages/User/C Run.sublime-build",
					"C temp"
				]
			],
			[
				"Packages/User/C Run.sublime-build",
				"C Build and Run"
			]
		],
		[
			[
				[
					"Packages/C++/C Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/C-build.sublime-build",
					""
				],
				[
					"Packages/User/C-build.sublime-build",
					"Run"
				],
				[
					"Packages/User/C-build.sublime-build",
					"RunInCommand"
				]
			],
			[
				"Packages/User/C-build.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++/C Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/C.sublime-build",
					""
				],
				[
					"Packages/User/C.sublime-build",
					"C Build and Run"
				]
			],
			[
				"Packages/User/C.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/C.sublime-build",
					""
				],
				[
					"Packages/User/C.sublime-build",
					"Run in sublime"
				],
				[
					"Packages/User/C.sublime-build",
					"CMD Run"
				]
			],
			[
				"Packages/User/C.sublime-build",
				"CMD Run"
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Compile"
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Compilation"
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Debug"
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Compile"
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Compilation"
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Debug"
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run-this"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run-this"
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Compile"
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Debug"
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Compile"
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/C++ Run.sublime-build",
					""
				],
				[
					"Packages/User/C++ Run.sublime-build",
					"C++ Build and Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/C++-build.sublime-build",
					""
				],
				[
					"Packages/User/C++-build.sublime-build",
					"C++ Build and Run"
				]
			],
			[
				"Packages/User/C++-build.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/C++-build.sublime-build",
					""
				],
				[
					"Packages/User/C++-build.sublime-build",
					"C++ Run in CMD"
				],
				[
					"Packages/User/C++-build.sublime-build",
					"Build and Run in sublime"
				],
				[
					"Packages/User/C++-build.sublime-build",
					"Build and Run in CMD Run"
				]
			],
			[
				"Packages/User/C++-build.sublime-build",
				"C++ Run in CMD"
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/C++-build.sublime-build",
					""
				],
				[
					"Packages/User/C++-build.sublime-build",
					"C++ Run in sublime"
				],
				[
					"Packages/User/C++-build.sublime-build",
					"C++ Run in CMD"
				],
				[
					"Packages/User/C++-build.sublime-build",
					"Build and Run in sublime"
				],
				[
					"Packages/User/C++-build.sublime-build",
					"Build and Run in CMD Run"
				]
			],
			[
				"Packages/User/C++-build.sublime-build",
				"C++ Run in sublime"
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/C++.sublime-build",
					""
				]
			],
			[
				"Packages/User/C++.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/C++.sublime-build",
					""
				],
				[
					"Packages/User/C++.sublime-build",
					"Run in sublime"
				],
				[
					"Packages/User/C++.sublime-build",
					"CMD Run"
				]
			],
			[
				"Packages/User/C++.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/untitled.sublime-build",
					""
				],
				[
					"Packages/User/untitled.sublime-build",
					"Run in sublime"
				],
				[
					"Packages/User/untitled.sublime-build",
					"CMD Run"
				]
			],
			[
				"Packages/User/untitled.sublime-build",
				"CMD Run"
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"o",
				"PackageResourceViewer: Open Resource"
			],
			[
				"p",
				"Package Control: Remove Package"
			],
			[
				"pack",
				"PackageResourceViewer: Open Resource"
			],
			[
				"",
				"Bookmarks: Select All"
			],
			[
				"view",
				"View: Toggle Menu"
			],
			[
				"pa",
				"Package Control: Remove Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"set",
				"Set Syntax: C"
			],
			[
				"v",
				"View: Toggle Menu"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"pac",
				"PackageResourceViewer: Open Resource"
			],
			[
				"packageR",
				"PackageResourceViewer: Open Resource"
			],
			[
				"Package Resource Viewer",
				"PackageResourceViewer: Open Resource"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"Package Control: install Package",
				"Package Control: Install Package"
			],
			[
				"intal",
				"Install Package Control"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 212.0,
		"history":
		[
			"window.run_command(\"close_to_right_by_index\")",
			"window.run_command(\"close_to_right_by_index\", {\"group\": group_index,\"index\": view_index})",
			"view.run_command('close_to_right')",
			"view.run_command('close_to_left')",
			"view.run_command('close_to_right')",
			"view.run_command('close_to_right_by_index')",
			"view.run_command('close_to_right')",
			"view.run_command('close_to_left')",
			"close_to_right()",
			"1+2",
			"1",
			"close_to_right",
			"cd ..",
			"ls",
			"dir",
			"pwd"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/E/Study/Projects/C++ and C",
		"/E/Study/Projects/C++ and C/Algorithm",
		"/E/Study/Projects/C++ and C/C language",
		"/E/Study/Projects/C++ and C/C language/BinaryTree"
	],
	"file_history":
	[
		"/E/Data/MPIS_New/MPIS/frmMain.cs",
		"/E/Data/MPIS_New/MPIS/Class/OpenAttribute.cs",
		"/E/Data/MPIS_New/MPIS/Class/GlobVars.cs",
		"/E/Data/MPIS_New/MPIS/Class/GlobFuncs.cs",
		"/E/Data/MPIS_New/MPIS/Class/GetMachineCode.cs",
		"/E/Data/MPIS_New/MPIS/Class/RemoveLayer.cs",
		"/E/Data/MPIS_New/MPIS/Class/ScaleThresholds.cs",
		"/E/Data/MPIS_New/MPIS/Class/ClsPathFinder.cs",
		"/E/Data/MPIS_New/MPIS/FrmAttribute.cs",
		"/E/Data/MPIS_New/MPIS/frmMain.Designer.cs",
		"/E/Data/MPIS_New/MPIS/Program.cs",
		"/E/Data/MPIS_New/MPIS/FrmSymbolLibrary.cs",
		"/E/public/sjy/roi.prj",
		"/E/public/数据/reult/TMAX00000.dat",
		"/E/public/数据/reult/splina00000.cmd",
		"/E/public/sjy/MTEM/lapgrd_2019.log",
		"/E/public/sjy/MTEM/MTEM_2019.dat",
		"/E/public/sjy/MTEM/splina_2019.log",
		"/E/public/数据/reult/lapgrd00000.cmd",
		"/E/public/数据/reult/splina00000.log",
		"/E/public/sjy/MTEM/lapgrd_2019.cmd",
		"/E/public/sjy/PREP/PREP_2019.dat",
		"/E/public/sjy/MTEM/splina_2019.cmd",
		"/E/public/数据/reult/RES/RES_20190101.prj",
		"/E/public/sjy/dem.txt",
		"/E/public/sjy/station_data.txt",
		"/E/public/sjy/select_station.prj",
		"/E/public/sjy/MTEM00000.dat",
		"/E/System/Window_transparent.ahk",
		"/E/Data/emd_sig_test.m",
		"/E/Data/gppeemd_China1km_parfor.m",
		"/E/Data/EEMD-Project-master/mdimage/image02.png",
		"/E/Data/temp/2016.txt",
		"/E/public/数据/reult/dem.txt",
		"/E/public/sjy/MTEM.dat",
		"/E/public/MPIS_New/MPIS/FrmAttribute.cs",
		"/E/public/MPIS_New/MPIS/Properties/Resources.resx",
		"/E/public/MPIS_New/MPIS/frmMain.Designer.cs",
		"/E/public/MPIS_New/MPIS/frmMain.cs",
		"/D/VPN/订阅/11月6日订阅链接V2 Cla（后台持续动态更新）.txt",
		"/D/Life/WeChat/news/WeChat Files/wxid_241521i70k3r22/FileStorage/File/2021-11/ss_11_19_16_50_11.json",
		"/E/Data/temp/IDM_2016.txt",
		"/E/Data/temp/IDW_2016.txt",
		"/D/Life/WeChat/news/WeChat Files/wxid_241521i70k3r22/FileStorage/File/2021-11/2016.txt",
		"/E/Data/EEMD-Project-master/extrema.m",
		"/E/Study/Projects/C++ and C/C language/BinaryTree/temp.c",
		"/E/Study/Python/Python39/Lib/site-packages/PyEMD/__init__.py",
		"/C/Users/Monarch/AppData/Roaming/Sublime Text 3/Packages/C++/C Single File.sublime-build",
		"/E/Study-tool/cmake/README.rst",
		"/E/Study/MinGM64/freeglut-3.2.1/progs/demos/CallbackMaker/CallbackMaker.c",
		"/E/Study/MinGM64/opencv-3.4.16/modules/videoio/src/cap_dshow.cpp",
		"/E/Study/MinGM64/opencv-3.4.16/build/Makefile",
		"/E/Study/MinGM64/opencv-4.5.4/modules/videoio/src/cap_dshow.cpp",
		"/D/Life/WeChat/news/WeChat Files/wxid_241521i70k3r22/FileStorage/File/2021-10/RWEQ(1)(1).m",
		"/E/Study/Projects/C++ and C/Algorithm/temp.cc",
		"/E/Study/Projects/C++ and C/Algorithm/input.txt",
		"/E/Study/Projects/C++ and C/C基础/数字螺旋方阵.cpp",
		"/E/Study/Projects/C++ and C/C language/BinaryTree/二叉树.c",
		"/E/Study-tool/Sublime/sublime_addright.inf",
		"/D/VPN/订阅/10月17日订阅链接V2 Cla（后台动态更新）.txt",
		"/E/Study/Projects/C++ and C/Algorithm/input1.txt",
		"/E/Study/Projects/Python/python38/Monarch/import_me_data.py",
		"/E/Study/Projects/Python/python38/temp.py",
		"/E/Study/Projects/C++ and C/temp.c",
		"/E/Study/Projects/C++ and C/teg.txt",
		"/E/System/c.c",
		"/C/Users/Monarch/Desktop/新建 AutoHotkey Script.ahk",
		"/E/System/assistant.crx",
		"/E/Study-tool/Sublime/changelog.txt",
		"/E/Study-tool/Notepad++/NppShell_06.dll",
		"/E/Study/Projects/C++ and C/Algorithm/ConHand.h",
		"/E/Study/Projects/C++ and C/C language/Huffman/哈夫曼编码.c",
		"/E/Study/Projects/C++ and C/Algorithm/08_KMP.cc",
		"/E/Study/Projects/C++ and C/C基础/素数.cpp",
		"/E/Study/Projects/C++ and C/Algorithm/10_二叉树转森林.cc",
		"/E/Study/Projects/C++ and C/C基础/最大公约数.cpp",
		"/E/Study/Projects/C++ and C/C language/Huffman/input.txt",
		"/E/Study/Projects/C++ and C/Algorithm/03_newton_iteration.cc",
		"/E/Study/Projects/C++ and C/Algorithm/text.cc",
		"/E/Study/Projects/C++ and C/Algorithm/09_后序遍历非递归.cc",
		"/E/Study/Projects/C++ and C/C++基础/头文件/set1.h",
		"/C/Users/Monarch/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences (Windows).sublime-settings",
		"/E/Study/Projects/C++ and C/Algorithm/02_linked_list_reversal.cc",
		"/E/Study/Projects/C++ and C/Algorithm/04_Average_Height.cc",
		"/E/Study/Projects/C++ and C/Algorithm/05_Perfectly_array.cc",
		"/E/Study/Projects/C++ and C/Algorithm/07_Domino_piling.cc",
		"/C/Users/Monarch/AppData/Roaming/Sublime Text 3/Packages/C++/C++ Single File.sublime-build",
		"/E/Study/Projects/C++ and C/C language/Sort/ArrayIo.h",
		"/E/Study/Projects/C++ and C/C language/Single list/病患信息系统.c",
		"/E/Study/Projects/C++ and C/C language/Sequence table/temp.c",
		"/E/Study/Projects/C++ and C/C language/Figure/ljjz.c",
		"/E/Study/Projects/C++ and C/C language/Figure/ljb.h",
		"/E/Study/Projects/C++ and C/C++基础/头文件/IDW.h",
		"/E/Study/Projects/C++ and C/C++基础/头文件/personnel.h",
		"/E/Study/Projects/C++ and C/C language/Sequence table/匹配括号.c",
		"/E/Study/Projects/C++ and C/Algorithm/Sequence table/01_MergeList.c",
		"/E/Study/Projects/C++ and C/Algorithm/Sequence table/List.h",
		"/E/Study/Projects/C++ and C/C language/Sequence table/学生管理系统.c",
		"/E/Study/Projects/C++ and C/C language/Sequence table/学生类型.h",
		"/E/Study/Projects/C++ and C/C language/Sequence table/练习1.c",
		"/E/Study/Projects/C++ and C/C language/Single list/Patients.txt",
		"/E/Data/glcv_es_3.0/glcv_es/glopem.h",
		"/E/Data/MOD/bat/readconf.c",
		"/E/Data/glcv_es_3.0/glcv_es/readconf.c",
		"/E/Study/Projects/C++ and C/Algorithm/06_red_blue.cc",
		"/D/didi/1000HYB/章鱼小小丸子.7z",
		"/D/didi/极乐天堂.rar",
		"/E/Study/Projects/C++ and C/Algorithm/01_fibonacci_sequence.cc",
		"/E/Study/Projects/C++ and C/Algorithm/Flip_the_Bits.cc",
		"/E/Study/Projects/C++ and C/temp.cc",
		"/E/Study/Projects/C++ and C/C基础/讨论.cpp",
		"/E/Data/re_data/PRCP00002.dat",
		"/E/Data/re_data/temp.dat",
		"/E/Data/MOD/glcv_es_3.0/src/scmod_0917_c.txt",
		"/E/Data/MOD/glcv_es_3.0/src/writehead.c",
		"/E/Study/Projects/C++ and C/C基础/结构体与指针.cpp",
		"/E/Study/Projects/C++ and C/C基础/猜数.cpp",
		"/E/Study/Projects/C++ and C/C基础/求圆周率.cpp",
		"/E/Study/Projects/C++ and C/C language/Single list/temp.c",
		"/E/Study/Projects/C++ and C/C基础/do_while.cpp",
		"/E/public/Data/ghcnd-stations.txt",
		"/E/public/数据/DEM/dem_prj.txt",
		"/E/Study/Projects/C++ and C/C language/ArrayIo.h",
		"/E/Study/Projects/C++ and C/C language/冒泡排序.c",
		"/E/Study/Projects/C++ and C/C language/哈夫曼编码.c",
		"/D/test.txt",
		"/E/Study/Projects/C++ and C/C language/out.txt",
		"/E/Study/Projects/C++ and C/C language/Figure/ljb.c"
	],
	"find":
	{
		"height": 29.0
	},
	"find_in_files":
	{
		"height": 181.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"generateLapgrd",
			"p",
			"Z",
			"GenerateSplinaCMD",
			"GlobVars.realCount[subNum]",
			"splina",
			"max",
			"min",
			"max",
			"min",
			"p",
			"InitHafuArry",
			"6",
			"CH0000",
			"CH",
			"m",
			" ",
			"i",
			"i\n",
			");\n",
			";\n",
			"Person",
			"empty",
			"InitQueue",
			"x",
			"fibonacci_n",
			"];\n",
			"prve",
			"std::",
			");\n",
			"elem",
			".",
			"L"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"E",
			"maxR",
			"minD",
			"max_d",
			"min_l",
			"j",
			"DataType",
			"i",
			"curr",
			"init",
			"",
			"data",
			"->",
			"*L"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": false,
		"use_gitignore": true,
		"whole_word": true,
		"wrap": false
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/E/Data/EEMD-Project-master/main_eemd.m",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 728,
						"regions":
						{
						},
						"selection":
						[
							[
								702,
								702
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										704,
										705
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										698,
										699
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"in_converting": true,
							"is_init_dirty_state": false,
							"origin_content": "TSData = ncread('E:\\data\\yFTS.nc','ts');\nsubplot(11,2,1);\nplot(TSData);\nIMF = eemd(TSData(:),0.25,1000);\nfor i=2:9\n    subplot(11,2,i);\n    plot(IMF(:,i), 'r');\n    hold on\n    plot(1:0.8:2000, 0, 'k');\n    set(gca,'YLim',[-1,1],'YTick',[-1:1])\nend\nY =fft(detrend(IMF(:,2)));       %快速FFT变换\nN = length(Y);    %FFT变换后数据长度\npower = abs(Y(1:N/2)).^2;  %求功率谱\nnyquist = 1/2;\nfreq = (1:N/2)/(N/2)*nyquist; %求频率\nsubplot(11,2,10);\nplot(freq,power); grid on     %绘制功率谱图\nxlabel('频率')\nylabel('功率')\ntitle('功率谱图')\nperiod = 1./freq;                %计算周期\nsubplot(11,2,11);\nplot(period,power); grid on  %绘制周期－功率谱曲线\nylabel('功率')\nxlabel('周期')\ntitle('周期―功率谱图')\n[mp,index] = max(power);       %求最高谱线所对应的下标\nT_mean=period(index);            %由下标求出平均周期",
							"origin_encoding": "GB2312",
							"syntax": "Packages/Matlab/Matlab.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/E/Data/GIS/roi_gcs.prj",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 145,
						"regions":
						{
						},
						"selection":
						[
							[
								145,
								145
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"color_scheme": "Packages/Color Scheme - Default/Monokai.sublime-color-scheme",
							"is_init_dirty_state": false,
							"origin_encoding": "ASCII",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/E/Data/MPIS_New/MPIS/frmMain.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 151733,
						"regions":
						{
						},
						"selection":
						[
							[
								132294,
								132294
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										134513,
										134514
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										131447,
										131448
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"in_converting": true,
							"is_init_dirty_state": false,
							"origin_content": "using System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Drawing;\nusing System.Linq;\nusing System.Text;\nusing System.Windows.Forms;\nusing System.IO;\nusing System.Xml;\nusing System.Diagnostics;\n\nusing ESRI.ArcGIS.Controls;\nusing ESRI.ArcGIS.Carto;\nusing ESRI.ArcGIS.SystemUI;\nusing ESRI.ArcGIS.Geometry;\nusing ESRI.ArcGIS.Display;\nusing ESRI.ArcGIS.esriSystem;\nusing ESRI.ArcGIS.Geodatabase;\nusing ESRI.ArcGIS.DataSourcesGDB;\nusing ESRI.ArcGIS.DataSourcesRaster;\n\nusing DevExpress.XtraCharts;\nusing DevExpress.XtraBars.Alerter;\nusing System.Collections;\nusing DevExpress.XtraBars.Ribbon;\nusing DevExpress.XtraBars.Helpers;\nusing System.Threading;\nusing ESRI.ArcGIS.NetworkAnalyst;\nusing ESRI.ArcGIS.Geoprocessor;\nusing ESRI.ArcGIS.Geoprocessing;\nusing ESRI.ArcGIS.DataSourcesFile;\nusing DevExpress.XtraRichEdit.API.Native;\nusing System.Data.OleDb;\nusing MySql.Data.MySqlClient;\nnamespace MPIS\n{\n    public partial class frmMain : DevExpress.XtraBars.Ribbon.RibbonForm\n    {\n        #region 公共变量用于表示整个系统都能访问的图层控件和环境变量\n        public static IMapControl3 m_mapControl = null;\n        public static ITOCControl2 m_pTocControl = null;\n        private static System.Diagnostics.Process p;\n\n        String m_mapDocumentName = \"\";\n        IToolbarMenu m_pMenuLayer;\n        //右键菜单\n        private IToolbarMenu m_ToolbarMenu = new ToolbarMenuClass();\n\n        //当前窗体实例\n        public frmMain pCurrentWin = null;\n        //当前主地图控件实例\n        public AxMapControl pCurrentMap = null;\n        //当前鹰眼控件实例\n        public AxMapControl pCurrentSmallMap = null;\n        //当前TOC控件实例\n        public AxTOCControl pCurrentTOC = null;\n\n        //用于显示图层文本提示\n        public static bool isCheckTip;\n        public static int isCheckTipListIndex;\n\n        public float ps = (float)10.0;//set the resolution\n        //控制自定义对话框的事件\n        private ICustomizeDialog m_CustomizeDialog = new CustomizeDialogClass(); // CurtomizeDialog被ToolbarControl使用\n        private ICustomizeDialogEvents_OnStartDialogEventHandler startDialogE; // CustomizeDialog启动事件\n        private ICustomizeDialogEvents_OnCloseDialogEventHandler closeDialogE; // CustomizeDialog关闭事件\n\n        //用于判断当前鼠标点击的菜单命令,以备在地图控件中判断操作\n        CustomTool m_cTool;\n        private IScreenDisplay3 m_focusScreenDisplay = null;// For 平移\n\n        String richText = \"->欢迎使用本系统\\n->系统名称: 气象站点数据管理和预处理及网格化系统\\n->版本号: V3.0\\n->\";\n\n        //For 放大,缩小，平移\n        INewEnvelopeFeedback m_feedBack;//  '拉框\n        IPoint m_mouseDownPoint;\n        bool m_isMouseDown;\n        public bool frmAttriQueryisOpen = false;\n\n        public BackgroundWorker BGW1;\n        public BackgroundWorker BGW2;\n        public BackgroundWorker BGW3;\n\n        //NA分析变量\n        INetworkDataset NetData;\n        INAContext _Context;\n        IPointCollection m_ipPoints;\n        ISpatialReference spatialRef;\n        IGraphicsContainer pGC;\n        bool IsAnlysis = false;\n        ClsPathFinder m_ipPathFinder = null;\n        #endregion\n\n        public enum CustomTool\n        {\n            None = 0,\n            ZoomIn = 1,\n            ZoomOut = 2,\n            Pan = 3,\n            RuleMeasure = 4,\n            AreaMeasure = 5,\n            PointSelect = 6,\n            RectSelect = 7,\n            PolygonSelect = 8,\n            CircleSelect = 9,\n            NAanalysis = 10\n        };\n        public frmMain()\n        {\n            InitializeComponent();\n            \n        }\n        public void showInfoFun(String textType, int ch)\n        {\n            if (ch == 1)\n            {\n\n                this.showInfo.Document.AppendText(textType + \"\\n->\");\n                showInfo_Click(showInfo, new EventArgs());\n                this.showInfo.Focus();\n            }\n            else if (ch == 3)\n            {\n                this.showInfo.Document.AppendText(textType + \"\\n\");\n                showInfo_Click(showInfo, new EventArgs());\n                this.showInfo.Focus();\n            }\n            else\n                this.showInfo.Document.AppendText(textType);\n        }\n\n        private void getVarsName()\n        {\n            String varsPath = GlobVars.AppStartPath + @\"\\dataBase\\meteoName\\mName.txt\";\n            ArrayList varsList;\n\n            if (!GlobFuncs.loadVars(varsPath, out varsList))\n                this.showInfoFun(\"Error loading variables！\", 1);\n            else\n            {\n                SelVars.Properties.Items.Clear();\n                foreach (String vL in varsList)\n                {\n                    SelVars.Properties.Items.Add(vL);\n                }\n            }\n        }\n        private void mainForm_Load(object sender, EventArgs e)\n        {\n            this.showInfo.Text = richText;\n            //this.splitContainerControl1.SplitterPosition = (int)((this.splitContainerControl1.Size.Height) * 0.80);\n            this.timer1.Enabled = true;\n            this.status_date.Caption = \"系统时间： \" + DateTime.Now.ToString();\n            //将地图控件赋给变量，这样就可以使用接口所暴露的属性和方法了\n            //MainMapOper属于主框架的私有控件，外部不能访问，所以采用这种模式可以通过公共变量的形式操作\n            m_mapControl = (IMapControl3)MainMapOper.Object;\n            m_pTocControl = (ITOCControl2)axTOCControl1.Object;\n            axToolbarControl1.SetBuddyControl(m_mapControl);\n            isCheckTip = false;\n            isCheckTipListIndex = -1;\n\n            //TOC控件绑定地图控件\n            m_pTocControl.SetBuddyControl(m_mapControl);\n            this.MainMapOper.Map.Name = \"图层\";\n            this.axTOCControl1.Update();\n\n            this.dateEnd.EditValue = DateTime.Now.ToString(\"yyyy-MM-dd\");\n\n            BGW1 = new BackgroundWorker();\n            BGW1.WorkerReportsProgress = true;\n            BGW1.DoWork += new DoWorkEventHandler(BGW1_DoWork);\n            BGW1.ProgressChanged += new ProgressChangedEventHandler(BGW1_ProgressChanged);\n\n            BGW2 = new BackgroundWorker();\n            BGW2.WorkerReportsProgress = true;\n            BGW2.DoWork += new DoWorkEventHandler(BGW2_DoWork);\n            BGW2.ProgressChanged += new ProgressChangedEventHandler(BGW2_ProgressChanged);\n\n            BGW3 = new BackgroundWorker();\n            BGW3.WorkerReportsProgress = true;\n            BGW3.DoWork += new DoWorkEventHandler(BGW3_DoWork);\n            BGW3.ProgressChanged += new ProgressChangedEventHandler(BGW3_ProgressChanged);\n            getVarsName();\n\n            #region\n            GetMachineCode Getmac = new GetMachineCode();\n            if (Getmac.IsRegeditExit(\"MPIS\"))\n            {\n                this.Text = \"气象站点数据管理和预处理及网格化系统-[未注册版本]\";\n                this.frmclose.Enabled = true;\n\n            }\n            else\n            {\n                SoftRegister.Visible = false;\n            }\n            #endregion\n            #region(初始化菜单)\n            //初始化菜单工具栏命令\n            UID pUid = new ESRI.ArcGIS.esriSystem.UID();\n            pUid.Value = \"esriControls.ControlsOpenDocCommand\";\n            pUid.Value = \"esriControls.ControlsMapZoomInTool\";\n            pUid.Value = \"esriControls.ControlsMapZoomOutTool\";\n            pUid.Value = \"esriControls.ControlsMapPanTool\";\n            pUid.Value = \"esriControls.ControlsMapFullExtentCommand\";\n            pUid.Value = \"esriControls.ControlsMapZoomToLastExtentBackCommand\";\n            pUid.Value = \"esriControls.ControlsMapZoomToLastExtentForwardCommand\";\n\n            String progID;//初始化地图控件右键快捷菜单工具栏命令\n            progID = \"esriControls.ControlsMapFullExtentCommand\";\n            m_ToolbarMenu.AddItem(progID, -1, -1, false, esriCommandStyles.esriCommandStyleIconOnly);\n            progID = \"esriControls.ControlsMapZoomPanTool\";\n            m_ToolbarMenu.AddItem(progID, -1, -1, false, esriCommandStyles.esriCommandStyleIconOnly);\n            progID = \"esriControls.ControlsMapZoomInTool\";\n            m_ToolbarMenu.AddItem(progID, -1, -1, false, esriCommandStyles.esriCommandStyleIconOnly);\n            progID = \"esriControls.ControlsMapZoomOutTool\";\n            m_ToolbarMenu.AddItem(progID, -1, -1, false, esriCommandStyles.esriCommandStyleIconOnly);\n            progID = \"esriControls.ControlsMapPanTool\";\n            m_ToolbarMenu.AddItem(progID, -1, -1, false, esriCommandStyles.esriCommandStyleIconOnly);\n            m_ToolbarMenu.SetHook(MainMapOper);\n            #endregion\n\n            ArrayList saIn;\n            if (getDBConn(out saIn))\n            {\n                dbConnSet(ref saIn);\n            }\n            else\n                this.showInfoFun(\"请配置数据库链接参数!\", 1);\n        }\n\n        private void ribbonControl1_Resize(object sender, EventArgs e)\n        {\n\n        }\n\n        private void mainForm_Resize(object sender, EventArgs e)\n        {\n            \n            /*int bPosi = lapgrdbExe.Location.Y;\n            this.splitContainerControl15.SplitterPosition = this.splitContainerControl15.Height-bPosi - 30;\n\n            int aPosi = lapgrdExe.Location.Y;\n            this.splitContainerControl8.SplitterPosition = this.splitContainerControl8.Height - aPosi - 30;*/\n        }\n\n        private void ribbonControl1_Click(object sender, EventArgs e)\n        {\n\n        }\n\n        private void timer1_Tick(object sender, EventArgs e)\n        {\n            this.status_date.Caption = \"系统时间： \" + DateTime.Now.ToString();\n        }\n\n        private void axToolbarControl1_OnMouseDown(object sender, IToolbarControlEvents_OnMouseDownEvent e)\n        {\n\n        }\n        public IDataLayer2 GetLayer(String LayerName)\n        {\n            //读入图层名,放到工具栏下拉框中\n            ILayer lyr;\n            //ToolComboBoxLayer.Items.Clear();\n\n            if (m_mapControl.LayerCount > 0)\n            {\n                IEnumLayer pMapLayers;\n                pMapLayers = m_mapControl.Map.get_Layers(null, true);\n\n                lyr = pMapLayers.Next();\n                while (lyr != null)\n                {\n                    if (lyr.Name.Trim() == LayerName)\n                    {\n                        return (IDataLayer2)lyr;\n                    }\n                    lyr = pMapLayers.Next();\n                    // MessageBox.Show(\"s\");\n                }\n            }\n            return null;\n        }\n        private void axTOCControl1_OnMouseDown(object sender, ITOCControlEvents_OnMouseDownEvent e)\n        {\n            IBasicMap pMap = null;\n            ILayer pLayer = null;\n            object legendgp = null;\n            object index = null;\n            esriTOCControlItem pItem = esriTOCControlItem.esriTOCControlItemNone;\n            try\n            {\n                m_pTocControl.HitTest(e.x, e.y, ref pItem, ref pMap, ref pLayer, ref legendgp, ref index);\n\n            }\n            catch (Exception)\n            {\n                //throw;\n            }\n            //判断鼠标状态\n\n            switch (e.button)\n            {\n                case 1:\n                    try\n                    {\n                        IRasterLayer pRasterlayer = GetLayer(pLayer.Name) as IRasterLayer;\n                        if (pRasterlayer is IRasterLayer)\n                            return;\n                    }\n                    catch\n                    {\n                        return;\n                    }\n\n                    try\n                    {\n                        ILegendGroup pLegendGroup = new LegendGroup();\n                        ILegendClass pLegendClass = new LegendClass();\n                        pLegendGroup = (ILegendGroup)legendgp;\n                        if (pItem == esriTOCControlItem.esriTOCControlItemLegendClass)\n                        {\n\n                            pLegendClass = pLegendGroup.get_Class(Convert.ToInt32(index.ToString()));\n                            if (pLegendClass == null)\n                            {\n                                return;\n                            }\n                            FrmSymbolLibrary dlg = new FrmSymbolLibrary(pLegendClass, pLayer);\n                            if (dlg != null)\n                            {\n                                try\n                                {\n                                    dlg.ShowDialog();\n                                    m_pTocControl.Update();\n                                    m_mapControl.Refresh(esriViewDrawPhase.esriViewGeography, null, null);\n                                }\n                                catch (Exception)\n                                {\n\n                                    //throw;\n                                }\n                            }\n                        }\n                    }\n                    catch\n                    {\n                        //showInfoFun(\"该模块正在维护，敬请期待!\",1);\n                    }\n\n                    break;\n                case 2:\n                    //Ensure the item gets selected \n                    if (pItem == esriTOCControlItem.esriTOCControlItemMap)\n                    {\n                        m_pTocControl.SelectItem(pMap, null);\n                        if (m_mapControl.LayerCount > 0)\n                            this.MapRefresh.Show(this.axTOCControl1, 15, 22);\n                    }\n                    else\n                    {\n                        try\n                        {\n                            m_pTocControl.SelectItem(pLayer, null);\n                        }\n                        catch\n                        {\n                            //Nothing to do\n                        }\n                    }\n\n                    //Set the layer into the CustomProperty (this is used by the custom layer commands)\t\t\t\n                    m_mapControl.CustomProperty = pLayer;\n\n                    //Popup the correct context menu\n                    if (pItem == esriTOCControlItem.esriTOCControlItemMap)\n                    {\n                        //\n                        //用户代码未处理\n                        //\n                        //m_pMenuMap.PopupMenu(e.x, e.y, m_pTocControl.hWnd);\n                    }\n                    if (pItem == esriTOCControlItem.esriTOCControlItemLayer)\n                    {\n                        //动态添加OpenAttributeTable菜单项\n                        //Add custom commands to the map menu\n\n                        try\n                        {\n                            IRasterLayer pRasterlayer = GetLayer(pLayer.Name) as IRasterLayer;\n                            if (pRasterlayer is IRasterLayer)\n                            {\n                                m_pMenuLayer = new ToolbarMenuClass();\n                                m_pMenuLayer.AddItem(new RemoveLayer(), -1, 0, false, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new ScaleThresholds(), 1, 1, true, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new ScaleThresholds(), 2, 2, false, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new ScaleThresholds(), 3, 3, false, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new LayerSelectable(), 1, 4, true, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new LayerSelectable(), 2, 5, false, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new ZoomToLayer(), -1, 6, true, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new LayerVisibility(), 1, 7, true, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new LayerVisibility(), 2, 8, false, esriCommandStyles.esriCommandStyleTextOnly);\n                                //m_pMenuLayer.AddItem(\"输出数据\", -1, 9, true, esriCommandStyles.esriCommandStyleTextOnly);\n                            }\n                            else\n                            {\n                                m_pMenuLayer = new ToolbarMenuClass();\n                                m_pMenuLayer.AddItem(new RemoveLayer(), -1, 0, false, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new ScaleThresholds(), 1, 1, true, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new ScaleThresholds(), 2, 2, false, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new ScaleThresholds(), 3, 3, false, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new LayerSelectable(), 1, 4, true, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new LayerSelectable(), 2, 5, false, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new ZoomToLayer(), -1, 6, true, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new LayerVisibility(), 1, 7, true, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new LayerVisibility(), 2, 8, false, esriCommandStyles.esriCommandStyleTextOnly);\n                                m_pMenuLayer.AddItem(new OpenAttribute(pLayer), -1, 9, true, esriCommandStyles.esriCommandStyleTextOnly);\n\n                            }\n                        }\n                        catch\n                        {\n                            return;\n                        }\n\n\n                        //Set the hook of each menu\n                        m_pMenuLayer.SetHook(m_mapControl);\n                        m_pMenuLayer.PopupMenu(e.x, e.y, m_pTocControl.hWnd);\n                        //MessageBox.Show(e.x.ToString ()+e.y.ToString ()+m_pTocControl.hWnd.ToString ());\n\n                    }\n\n                    break;\n            }\n        }\n\n        private void showInfo_KeyPress(object sender, KeyPressEventArgs e)\n        {\n            this.showInfo.Document.CaretPosition = this.showInfo.Document.Range.End;\n            string origintext = this.showInfo.Document.Text.Trim();\n            if (e.KeyChar == 13)\n            {\n                int length = this.showInfo.Document.Text.Trim().Length;\n                //MessageBox.Show();\n                if (this.showInfo.Document.Text.Trim().Substring(length - 3, 3) == \"clc\" || this.showInfo.Document.Text.Trim().Substring(length - 3, 3) == \"CLC\")\n                {\n                    showInfoFun(\"   Clearing screen...\", 1);\n                    showInfo.Text = richText;\n                }\n                else if (this.showInfo.Document.Text.Trim().Substring(length - 3, 3) == \"utv\")\n                {\n                    showInfoFun(GlobVars.AppStartPath + DateTime.Now.ToString(\"yyyyMMddHHmmss\") + \".shp\", 1);\n                }\n                else if (this.showInfo.Document.Text.Trim().Substring(length - 3, 3) == \"uth\")\n                {\n\n                }\n                else if (this.showInfo.Text.Trim().Substring(length - 3, 3) == \"yes\")\n                {\n\n                }\n                else\n                {\n                    showInfoFun(\"   Invalid command\", 1);\n                }\n            }\n        }\n        private void showInfo_Click(object sender, EventArgs e)\n        {\n            this.showInfo.Document.CaretPosition = this.showInfo.Document.Range.End;\n            this.showInfo.ScrollToCaret();\n        }\n\n        private void barButtonItem3_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n\n        }\n\n        private void LoadAllStas_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            //String shpFilePath = GlobVars.AppStartPath + @\"\\TempStore\\\" + DateTime.Now.ToString(\"yyyyMMddHHmmss\") + \".shp\";\n            String shpFilePath = GlobVars.AppStartPath + @\"\\dataBase\\TotalStation\\tStations.shp\";\n            //String shpFilePath = @\"D:\\LW\\MeteoAutoProcess\\MAP\\MAP\\dataBase\\TotalStation\\tStations.shp\";\n            if (!File.Exists(shpFilePath))\n            {\n                this.showInfoFun(\"File does not exist, please update or generate all site information at first！\", 1);\n                return;\n            }\n\n            try\n            {\n                datashowSHPF(shpFilePath);\n            }\n            catch (System.Exception ex)\n            {\n            \tthis.showInfoFun(\"Load failed！\", 1);\n                return;\n            }\n            this.showInfoFun(\"Load succeeded！\", 1);\n\n        }\n        //矢量数据加载函数\n        private void datashowSHPF(String strPath)\n        {\n            if (strPath != \"\")\n            {\n                //首先解析文件目录和文件名\n                int loc1;\n                loc1 = strPath.LastIndexOf(\"\\\\\");\n                String path;\n                String fname;\n                path = strPath.Substring(0, loc1);\n                fname = strPath.Substring(loc1 + 1);\n\n                IWorkspaceFactory pWorkspaceFactory = new ESRI.ArcGIS.DataSourcesFile.ShapefileWorkspaceFactory();\n\n                IWorkspace pWorkspace = pWorkspaceFactory.OpenFromFile(path, 0);\n                IFeatureWorkspace pFeatureWorkspace = pWorkspace as IFeatureWorkspace;\n                IFeatureClass pFeatureClass = pFeatureWorkspace.OpenFeatureClass(fname);\n\n                IFeatureLayer pFeatureLayer = new FeatureLayerClass();\n                pFeatureLayer.FeatureClass = pFeatureClass;\n                pFeatureLayer.Name = pFeatureClass.AliasName;\n                ILayer pLayer = pFeatureLayer as ILayer;\n\n                m_mapControl.AddLayer(pLayer, 0);\n                //axMapControl2.AddLayer(pLayer,0);\n                m_mapControl.ActiveView.Refresh();\n                showlayer();\n            }\n        }\n        public void showlayer()\n        {\n            //读入图层名,放到工具栏下拉框中\n            //读入图层名,放到工具栏下拉框中\n            ILayer lyr;\n\n            ((DevExpress.XtraEditors.Repository.RepositoryItemComboBox)ToolComboBoxLayer.Edit).Items.Clear();\n\n            if (m_mapControl.LayerCount > 0)\n            {\n                IEnumLayer pMapLayers;\n                pMapLayers = m_mapControl.Map.get_Layers(null, true);\n\n                lyr = pMapLayers.Next();\n                while (lyr != null)\n                {\n                    ((DevExpress.XtraEditors.Repository.RepositoryItemComboBox)ToolComboBoxLayer.Edit).Items.Add(lyr.Name);\n                    //axMapControl2.AddLayer(lyr);\n                    lyr = pMapLayers.Next();\n                    // MessageBox.Show(\"s\");\n                }\n                //选中第一个图层\n                this.ToolComboBoxLayer.EditValue = ((DevExpress.XtraEditors.Repository.RepositoryItemComboBox)ToolComboBoxLayer.Edit).Items[0];\n\n            }\n        }\n        private void UpdateAllStas_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            \n        }\n\n        private void QuitSys_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            this.Close();\n        }\n\n        private void AboutClick_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (CheckAbout.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n                CheckAbout.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            else\n                CheckAbout.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void HelpClick_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (CheckHelp.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n                CheckHelp.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            else\n                CheckHelp.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void CheckHelp_VisibilityChanged(object sender, DevExpress.XtraBars.Docking.VisibilityChangedEventArgs e)\n        {\n            if (CheckHelp.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Visible)\n            {\n                String HelpDocpath = GlobVars.AppStartPath + @\"\\Document\\Help_EN.pdf\";\n                pdfAbout.LoadDocument(HelpDocpath);\n            }\n        }\n\n        private void MainMapOper_OnMouseMove(object sender, IMapControlEvents2_OnMouseMoveEvent e)\n        {\n            IMap pMap = this.MainMapOper.Map;\n            switch (pMap.MapUnits)\n            {\n                case esriUnits.esriUnknownUnits:\n                    MapCo.Caption = String.Format(\"{0}, {1}  {2}\", e.mapX.ToString(\"#######.##\"), e.mapY.ToString(\"#######.##\"), \"\");\n                    break;\n                case esriUnits.esriKilometers:\n                    MapCo.Caption = String.Format(\"{0}, {1}  {2}\", e.mapX.ToString(\"#######.##\"), e.mapY.ToString(\"#######.##\"), \"Kilometer\");\n                    break;\n                case esriUnits.esriMeters:\n                    MapCo.Caption = String.Format(\"{0}, {1}  {2}\", e.mapX.ToString(\"#######.##\"), e.mapY.ToString(\"#######.##\"), \"Meter\");\n                    break;\n                case esriUnits.esriDecimalDegrees:\n                    MapCo.Caption = String.Format(\"{0}, {1}  {2}\", e.mapX.ToString(\"#######.##\"), e.mapY.ToString(\"#######.##\"), \"Degree\");\n                    break;\n                default:\n                    MapCo.Caption = String.Format(\"{0}, {1}  {2}\", e.mapX.ToString(\"#######.##\"), e.mapY.ToString(\"#######.##\"), \"\");\n                    break;\n            }\n\n            //toolStripStatusLabel4.Text = String.Format(\"{0}, {1}  {2}\", e.mapX.ToString(\"#######.##\"), e.mapY.ToString(\"#######.##\"), m_mapControl.MapUnits.ToString().Substring(4));\n\n            //鼠标未落下,退出\n            if (e.button != 1) return;\n            IPoint pt = new PointClass();\n            pt.PutCoords(e.mapX, e.mapY);\n\n            switch (m_cTool)\n            {\n                case CustomTool.ZoomIn:\n                case CustomTool.ZoomOut:\n                    //'Get \n                    IActiveView pActiveView = MainMapOper.ActiveView;// m_mapControl.ActiveView;\n\n                    //Start an envelope feedback\n                    if (m_feedBack != null)\n                    {\n                        m_feedBack = new NewEnvelopeFeedbackClass();\n                        m_feedBack.Display = pActiveView.ScreenDisplay;\n                        m_feedBack.Start(m_mouseDownPoint);\n                        MessageBox.Show(\"test\");\n\n                    }\n                    //'Move the envelope feedback\n\n                    m_feedBack.MoveTo(pt);\n                    break;\n                case CustomTool.Pan:\n                    //axMapControl1.Pan();\n                    //m_focusScreenDisplay.PanMoveTo(pt);\n                    break;\n                case CustomTool.RuleMeasure:\n                    break;\n            }\n        }\n\n        private IPolygon DrawPolygon()\n        {\n            IActiveView pActiveview;\n            ISimpleFillSymbol pSimpleFillS;\n            IRgbColor pRgbColor;\n            IRubberBand pRubberBand;\n            IPolygon pPolygon;\n            try\n            {\n                pActiveview = m_mapControl.ActiveView;\n                pSimpleFillS = new SimpleFillSymbol();\n                pRgbColor = new RgbColor();\n                pRgbColor.Red = 255;\n                pSimpleFillS.Color = pRgbColor;\n                pRubberBand = new RubberPolygon();\n\n                pPolygon = (IPolygon)pRubberBand.TrackNew(pActiveview.ScreenDisplay, (ISymbol)pSimpleFillS);\n\n                pActiveview.ScreenDisplay.StartDrawing(pActiveview.ScreenDisplay.hDC, (short)esriScreenCache.esriNoScreenCache);\n                pActiveview.ScreenDisplay.SetSymbol((ISymbol)pSimpleFillS);\n                pActiveview.ScreenDisplay.DrawPolygon(pPolygon);\n                pActiveview.ScreenDisplay.FinishDrawing();\n                return pPolygon;\n            }\n            catch (Exception)\n            {\n                //throw;\n                //noting to do\n                return null;\n            }\n        }\n        private IElement showPoint(int cout)\n        {\n            IElement element;\n            ITextElement textelement = new TextElementClass();\n            element = textelement as IElement;\n            ITextSymbol textSymbol = new TextSymbol();\n            IRgbColor color = new RgbColorClass();\n            color.Blue = 255;\n            color.Green = 0;\n            color.Red = 0;\n\n\n\n            textSymbol.Color = color;\n            textSymbol.Size = 30;\n            textelement.Symbol = textSymbol;\n\n            textelement.Text = cout.ToString();\n            return element;\n        }\n        private double MeasurePolygon(IPolygon pPolygon)\n        {\n            try\n            {\n                IArea pArea;\n                ISpatialReferenceFactory srFactory = new SpatialReferenceEnvironment();\n                IGeographicCoordinateSystem gcs =\n                                        srFactory.CreateGeographicCoordinateSystem((int)esriSRGeoCSType.esriSRGeoCS_WGS1984);\n                IProjectedCoordinateSystem pcs =\n                                srFactory.CreateProjectedCoordinateSystem((int)esriSRProjCSType.esriSRProjCS_Beijing1954GK_19N);\n\n                IGeometry geo = (IGeometry)pPolygon;\n                geo.SpatialReference = gcs;\n                geo.Project(pcs);\n\n\n                pArea = (IArea)geo;\n\n                return Math.Abs(pArea.Area);\n\n            }\n            catch (Exception)\n            {\n\n                //throw;\n                return -1;\n            }\n\n        }\n        int clipRaster = -1;\n        private void MainMapOper_OnMouseDown(object sender, IMapControlEvents2_OnMouseDownEvent e)\n        {\n            // CreateTextElment(e.mapX,e.mapY);//创建气泡提示\n\n            if (e.button == 2)//右健弹出快捷键\n            {\n                m_ToolbarMenu.PopupMenu(e.x, e.y, MainMapOper.hWnd);\n            }\n            switch (m_cTool)\n            {\n                case CustomTool.ZoomIn:\n                case CustomTool.ZoomOut:\n                case CustomTool.Pan:\n                    clipRaster = -1;\n                    //Create a point in map coordinates\n                    IPoint pPoint = new PointClass();\n                    pPoint.X = e.mapX;\n                    pPoint.Y = e.mapY;\n                    m_mouseDownPoint = pPoint;\n                    m_isMouseDown = true;\n                    break;\n                case CustomTool.RuleMeasure:\n                    clipRaster = -1;\n                    try\n                    {\n                        IPolyline plinemeasure;\n                        plinemeasure = (IPolyline)m_mapControl.TrackLine();\n                        ISpatialReferenceFactory spatialReferenceFactory;\n                        spatialReferenceFactory = new SpatialReferenceEnvironment();\n\n                        IProjectedCoordinateSystem pPCS;\n                        pPCS = spatialReferenceFactory.CreateProjectedCoordinateSystem((int)esriSRProjCSType.esriSRProjCS_WGS1984N_AsiaAlbers);\n                        plinemeasure.Project(pPCS);\n\n                        IGeometry input_geometry;\n                        input_geometry = plinemeasure.FromPoint;\n                        IProximityOperator proOperator = (IProximityOperator)input_geometry;\n                        double check;\n                        check = proOperator.ReturnDistance(plinemeasure.ToPoint);\n\n                        showInfoFun(\"The measured distance is \" + check.ToString(\"#######.##\") + \"meter\", 1);\n                    }\n                    catch\n                    {\n                        //m_mapControl.Map.MapUnits = esriUnits.esriDecimalDegrees;\n                        m_cTool = CustomTool.None;\n                    }\n                    break;\n\n                case CustomTool.AreaMeasure:\n                    clipRaster = -1;\n                    try\n                    {\n                        IPolygon pPolygon = DrawPolygon();\n                        double pArea = this.MeasurePolygon(pPolygon);\n                        m_mapControl.Map.MapUnits = esriUnits.esriDecimalDegrees;\n                        if (pArea == -1)\n                        {\n                            m_cTool = CustomTool.None;\n                            MainMapOper.Refresh();\n                        }\n                        else\n                        {\n                            showInfoFun(\"The measured area is \" + pArea.ToString(\"#######.##\") + \"square meter\", 1);\n                            m_cTool = CustomTool.None;\n                            //axMapControl1.Refresh();\n                        }\n                    }\n                    catch\n                    {\n                        //m_mapControl.Map.MapUnits = esriUnits.esriDecimalDegrees;\n                        m_cTool = CustomTool.None;\n                    }\n                    //m_mapControl.Map.MapUnits = esriUnits.esriDecimalDegrees;\n                    break;\n\n                    IPoint ipNew;\n                    if (m_ipPoints == null)\n                    {\n                        m_ipPoints = new MultipointClass();\n\n                    }\n\n                    ipNew = this.MainMapOper.ActiveView.ScreenDisplay.DisplayTransformation.ToMapPoint(e.x, e.y);\n                    IElement Element = showPoint(m_ipPoints.PointCount);\n                    Element.Geometry = ipNew;\n                    //Element.Geometry = axMapControl1.ActiveView.ScreenDisplay.DisplayTransformation.ToMapPoint(e.x, e.y);\n                    pGC.AddElement(Element, 0);\n                    MainMapOper.ActiveView.PartialRefresh(esriViewDrawPhase.esriViewGraphics, null, null);\n                    object o1 = Type.Missing;\n                    m_ipPoints.AddPoint(ipNew, ref o1, ref o1);\n                    break;\n            }\n        }\n\n        private void MainMapOper_OnAfterScreenDraw(object sender, IMapControlEvents2_OnAfterScreenDrawEvent e)\n        {\n            showlayer();\n        }\n\n        private void AuInterMethod_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            \n        }\n\n        private void GenerateBuffer_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            IMap pMap = this.MainMapOper.Map;\n            String outBufferPath=\"\";\n            try\n            {\n                outBufferPath = GlobVars.AppStartPath + @\"\\TempStore\\Buffer\\\" +\"Buffer_\" + DateTime.Now.ToString(\"yyyyMMddHHmmss\") + \".shp\";\n            }\n            catch (System.Exception ex)\n            {\n                return;\n            }\n\n            if (ToolComboBoxLayer.EditValue!=null && ToolComboBoxLayer.EditValue.ToString() != \"\" && BufferVaule.EditValue.ToString() != \"\")\n            {\n                double BufferDistance;\n                //TryParse是将数字的字符串表示形式表现为他的等效双精度浮点数\n                double.TryParse(BufferVaule.EditValue.ToString(), out BufferDistance);\n                if (BufferDistance == 0.0 || string.IsNullOrEmpty(BufferVaule.EditValue.ToString()))\n                {\n                    MessageBox.Show(\"Invalid buffer distance！\");\n                    return;\n                }\n\n                if (pMap.LayerCount == 0)\n                    return;\n                //获取地图文档所有图层\n                List<ILayer> pLyr = new List<ILayer>();\n                pLyr = MapManager.GetLayers(pMap);\n                IFeatureLayer pFeatureLayer = pLyr.Find(s => s.Name.Equals(ToolComboBoxLayer.EditValue.ToString())) as IFeatureLayer;\n                if (pFeatureLayer == null)\n                {\n                    this.showInfoFun(\"Map layer\" + ToolComboBoxLayer.EditValue.ToString() + \"cannot be found！\", 1);\n                    return;\n                }\n                try\n                {\n                    //PostMessage((IntPtr)tbxMessages.Handle, WM_VSCROLL, (IntPtr)SB_BOTTOM, (IntPtr)IntPtr.Zero);\n                    this.showInfoFun(\"Buffer layer：\" + pFeatureLayer.Name,1);\n                    this.showInfoFun(\"Getting Geoprocessor,please wait...\",1);\n                    this.showInfoFun(DateTime.Now.ToString(),1);\n\n                    Geoprocessor gp = new Geoprocessor();\n                    gp.OverwriteOutput = true;\n                    this.showInfoFun(\"Start analysing…\",1);\n                    ESRI.ArcGIS.AnalysisTools.Buffer pBuffer = new ESRI.ArcGIS.AnalysisTools.Buffer(pFeatureLayer, outBufferPath, BufferVaule.EditValue.ToString() + \" \" + \"DecimalDegrees\");\n\n                    IGeoProcessorResult pGeoProcessorResult = new GeoProcessorResultClass();\n                    pGeoProcessorResult = (IGeoProcessorResult)gp.Execute(pBuffer, null);\n                    if (pGeoProcessorResult.Status != esriJobStatus.esriJobSucceeded)\n                    {\n                        this.showInfoFun(\"Layer buffer operation failed：\" + pFeatureLayer.Name, 1);\n                    }\n                    //this.showInfoFun(RetureMessage(gp),1);\n                    this.showInfoFun(\"Analysis finished\",1);\n                    this.showInfoFun(\"------------------------------------------------\",1);\n                }\n                catch (Exception ex)\n                {\n                    this.showInfoFun(\"Analysis failed！\",1);\n                }\n            }\n            else\n                this.showInfoFun(\"Incorrect parameter setting,analysis failed！\", 1);\n        }\n\n        #region 返回消息\n\n        private string RetureMessage(Geoprocessor gp)\n        {\n            StringBuilder sb = new StringBuilder();\n            if (gp.MessageCount > 0)\n            {\n                for (int i = 0; i < gp.MessageCount; i++)\n                {\n                    System.Diagnostics.Trace.WriteLine(gp.GetMessage(i));\n                    sb.AppendFormat(\"{0}\\n\", gp.GetMessage(i));\n                }\n            }\n            return sb.ToString();\n        }\n        #endregion\n\n        private void isUseLastBuffer_CheckedChanged(object sender, EventArgs e)\n        {\n            if (this.isUseLastBuffer.Checked == false)\n            {\n                this.BFilePath.Enabled = true;\n                this.SelBFilePath.Enabled = true;\n            }\n            else\n            {\n                String DirPath=GlobVars.AppStartPath + @\"\\TempStore\\Buffer\";\n                if (GlobFuncs.LastFilePath(DirPath) == \"\")\n                {\n                    this.showInfoFun(\"No buffer files！\", 1);\n                    this.isUseLastBuffer.Checked = false;\n                    return;\n                }\n                this.BFilePath.Enabled = false;\n                this.SelBFilePath.Enabled = false;\n                //this.showInfoFun(GlobFuncs.LastFilePath(DirPath), 1);\n            }\n\n        }\n\n        private void ExecBStas_Click(object sender, EventArgs e)\n        {\n            String FileName = isUseLastBuffer.Checked ? GlobFuncs.LastFilePath(GlobVars.AppStartPath + @\"\\TempStore\\Buffer\") : this.BFilePath.Text.Trim();\n            if (FileName == \"\")\n                return;\n            else\n            {\n                bool clipResult=GlobFuncs.Clip(FileName, GlobVars.AppStartPath + @\"\\dataBase\\TotalStation\\tStations.shp\", GlobVars.AppStartPath + @\"\\TempStore\\Stations\\selStats_\"+DateTime.Now.ToString(\"yyyyMMddHHmmss\")+\".shp\");\n                if (clipResult)\n                    this.showInfoFun(\"Station selection succeeded！\",1);\n                else\n                    this.showInfoFun(\"Station selection failed！\", 1);\n            }\n        }\n\n        private void fCheckButton_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (fCheckResult.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n                fCheckResult.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            else\n                fCheckResult.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void fCheckLastBuffer_CheckedChanged(object sender, EventArgs e)\n        {\n            String FileName = \"\";\n            if (fCheckLastBuffer.Checked)\n            {\n                FileName = GlobFuncs.LastFilePath(GlobVars.AppStartPath + @\"\\TempStore\\Buffer\");\n                if (FileName.Trim() == \"\")\n                {\n                    this.showInfoFun(\"No buffer file！\", 1);\n                    return;\n                }\n                else\n                {\n                    try\n                    {\n                        datashowSHPF(FileName);\n                    }\n                    catch (System.Exception ex)\n                    {\n                        this.showInfoFun(\"Error loading files！\",1);\n                        return;\n                    }\n                    this.showInfoFun(\"Load file succeeded！\", 1);\n                }\n            }\n\n        }\n\n        private void checkEdit2_CheckedChanged(object sender, EventArgs e)\n        {\n            String FileName = \"\";\n            if (fCheckLastSelStas.Checked)\n            {\n                FileName = GlobFuncs.LastFilePath(GlobVars.AppStartPath + @\"\\TempStore\\Stations\");\n                if (FileName.Trim() == \"\")\n                {\n                    this.showInfoFun(\"No site files！\", 1);\n                    return;\n                }\n                else\n                {\n                    GlobVars.LastStatsPath = FileName;\n\n                    try\n                    {\n                        datashowSHPF(FileName);\n                    }\n                    catch (System.Exception ex)\n                    {\n                        this.showInfoFun(\"Error loading files！\", 1);\n                        return;\n                    }\n                    this.showInfoFun(\"Load file succeeded！\", 1);\n                }\n            }\n        }\n\n        private void LoadSelStas_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (CheckBStas.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n                CheckBStas.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            else\n                CheckBStas.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void setParamsB_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (setParamsP.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n            {\n                //this.dateBeg.EditValue = new DateTime(1951, 1, 1);\n                setParamsP.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            }\n            else\n                setParamsP.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void setParamsP_VisibilityChanged(object sender, DevExpress.XtraBars.Docking.VisibilityChangedEventArgs e)\n        {\n\n        }\n\n        private void loadVars_Click(object sender, EventArgs e)\n        {\n            \n\n        }\n\n        private void load2Mem_Click(object sender, EventArgs e)\n        {\n            GlobVars.pValue = -1;\n            this.BGW3.RunWorkerAsync();\n        }\n\n        private void setParamsP_Click(object sender, EventArgs e)\n        {\n           \n        }\n\n        private void selStas_CheckedChanged(object sender, EventArgs e)\n        {\n            String dir = GlobVars.AppStartPath + @\"\\TempStore\\Stations\";\n            if (selStas.Checked)\n            {\n                this.InputStas.Enabled = false;\n                this.selInputPath.Enabled = false;\n                GlobVars.LastStatsPath = GlobFuncs.LastFilePath(dir);\n            }\n            else\n            {\n                this.InputStas.Enabled = true;\n                this.selInputPath.Enabled = true;\n            }\n        }\n\n        private void TestB_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            //String strPath = @\"D:\\LW\\MeteoAutoProcess\\MAP\\MAP\\TempStore\\Stations\\selStats_122729.shp\";\n\n            //this.MachCode.Text=Getmac.regcode(\"BFEBFBFF000806E9BE194364\");\n              \n        }\n\n        private void CreatTable_Click(object sender, EventArgs e)\n        {\n\n        }\n\n        private void CreatTable_VisibilityChanged(object sender, DevExpress.XtraBars.Docking.VisibilityChangedEventArgs e)\n        {\n            if (CreatTable.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Visible)\n            {\n                this.CTInfo.Document.Text = \"Note：Please input the correct year of data,the database can creates data tables automatically,i.e. all1978！\";\n            }\n        }\n\n        private void CChinaDB_CheckedChanged(object sender, EventArgs e)\n        {\n            if (CChinaDB.Checked == true)\n            {\n                GlobVars.dbName = \"MeteoData\";\n                CAbroadDB.Checked = false;\n            }\n        }\n\n        private void CAbroadDB_CheckedChanged(object sender, EventArgs e)\n        {\n            if (CAbroadDB.Checked == true)\n            {\n                GlobVars.dbName =\"MeteoData_extens\";\n                CChinaDB.Checked = false;\n                \n            }\n        }\n\n        private void ExecCreatTableB_Click(object sender, EventArgs e)\n        {\n            if (!CChinaDB.Checked && !CAbroadDB.Checked)\n                GlobVars.dbName = \"\";\n\n            MeteoDB mdb = new MeteoDB();\n            String tName = \"all\" + this.dataYear.Text.Trim();\n            String sql = \"CREATE table \" + tName + \" (Station Text,Year int,Month int,Day int,APRE real,DMXP real, DMNP real,MTEM real,DMXT real,DMNT real,AVRH real,MNRH real, PREP real, MEWS real, MXWS real, DMWS real, EXWS real,DEWS real, SOHR real, DATE Date,FLAG VARCHAR(40) primary key)ENGINE=InnoDB DEFAULT CHARSET = utf8\";\n            if (mdb.AlterTable(sql))\n                this.showInfoFun(\"Create table 'all\" + this.dataYear.Text.Trim() + \"' successfully!\", 1);\n            else\n                this.showInfoFun(\"Table 'all\" + this.dataYear.Text.Trim() + \"' has already existed!\", 1);\n        }\n\n        private void CheckNewTable_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (CreatTable.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n                CreatTable.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            else\n                CreatTable.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void CheckChinaDB_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (import2DBP.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n            {\n                this.InsertInfo.Document.Text = \"Fields include: Average pressure/Daily maximum pressure/Daily minimum pressure/Mean temperature/Daily maximum temperature/Daily minimum temperature/Average relative humidity/Minimum relative humidity/Precipitation/Mean wind speed/Maximum wind speed/Wind direction of maximum wind speed/Extreme wind speed/Wind direction of Extreme wind speed/Solar hours\";\n                import2DBP.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            }   \n            \n            else\n                import2DBP.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void updateStasB_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (updateStasP.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n            {\n                updateStasP.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n                this.updateStasInfo.Text = \"Field：code，lon，lat，elev，stationName,region。\";\n            }\n            else\n                updateStasP.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void CChinaDBStas_CheckedChanged(object sender, EventArgs e)\n        {\n            if (CChinaDBStas.Checked)\n            {\n                CAbroadDBStas.Checked = false;\n                GlobVars.dbName =\"MeteoData\";\n            }\n        }\n\n        private void CAbroadDBStas_CheckedChanged(object sender, EventArgs e)\n        {\n            if (CAbroadDBStas.Checked)\n            {\n                CChinaDBStas.Checked = false;\n                GlobVars.dbName =  \"MeteoData_extens\";\n            }\n        }\n\n        private void ExecUpdate_Click(object sender, EventArgs e)\n        {\n            if (!CChinaDBStas.Checked && !CAbroadDBStas.Checked)\n                GlobVars.dbName = \"\";\n\n            String filepath = this.staslistPath.Text.Trim();\n            ArrayList saIn;\n            String sql=\"\";\n\n            if (GlobFuncs.FileRead(filepath, out saIn))\n            {\n                try\n                {\n                    MeteoDB mdb = new MeteoDB();\n                    MySqlConnection mysql = mdb.getMySqlCon();\n                    mysql.Open();\n\n                    int count = saIn.Count;\n                    for (int i = 0; i < count; i++)\n                    {\n                        String[] sInfo = saIn[i].ToString().Split(',');\n                        String Code = sInfo[0].Trim();\n                        String X = sInfo[1].Trim();\n                        String Y = sInfo[2].Trim();\n                        String elev = sInfo[3].Trim();\n                        String stationName = sInfo[4].Trim();\n                        String regionalName = sInfo[5].Trim();\n                        //String XJ = sInfo[6].Trim();\n                        //String YW = sInfo[7].Trim();\n                        \n                        sql = \"INSERT INTO station VALUES('\" + Code + \"', '\" + X + \"', '\" + Y + \"','\" + elev + \"','\" + stationName + \"','\" + regionalName +\"')\";\n                        MySqlCommand cmd = mdb.getSqlCommand(sql, mysql);\n                        \n                        \n                        if (mdb.getInsert(cmd))\n                           this.showInfoFun(\"Add station \" + Code + \" successfully!\", 1);\n                        else\n                            this.showInfoFun(\"Add station \" + Code + \" failed!\", 1);\n                        this.showInfo.Refresh();\n                    }\n                    mysql.Close();\n                }\n                catch (System.Exception ex)\n                {\n                    this.showInfoFun(\"Failed to add new stations. Please check whether the separator is comma in English!\", 1);\n                }\n                \n                \n            }\n        }\n\n        private void toChinaDB_CheckedChanged(object sender, EventArgs e)\n        {\n            if (toChinaDB.Checked)\n            {\n                toAbroadDB.Checked = false;\n                GlobVars.dbName = \"MeteoData\";\n            }\n        }\n\n        private void toAbroadDB_CheckedChanged(object sender, EventArgs e)\n        {\n            if (toAbroadDB.Checked)\n            {\n                toChinaDB.Checked = false;\n                GlobVars.dbName =  \"MeteoData_extens\";\n            }\n        }\n\n        private void execToDB_Click(object sender, EventArgs e)\n        {\n            if (!toChinaDB.Checked && !toAbroadDB.Checked)\n                GlobVars.dbName = \"\";\n            //for (int x = 1961; x <= 2015; x++)\n            //{\n                //this.datayearDB.Text = x.ToString().Trim();\n                String filepath = this.recsPath.Text.Trim();\n                ArrayList saIn;\n                String sql = \"\";\n                List<String> sqlList = new List<String>();\n                MeteoDB mdb = new MeteoDB();\n                int count = 0;\n                if (GlobFuncs.FileRead(filepath, out saIn))\n                {\n                    count = saIn.Count;\n                    this.showInfoFun(\"Start reading and analyzing data, please wait...\", 1);\n                    this.showInfo.Refresh();\n                    for (int i = 0; i < count; i++)\n                    {\n                        try\n                        {\n                            int j = 0;\n                            String[] sInfo = saIn[i].ToString().Trim().Split(',');\n                            String sta = sInfo[j].Trim();\n                            String year = (Convert.ToInt32(Convert.ToSingle(sInfo[++j].Trim()))).ToString();\n                            String mon = (Convert.ToInt32(Convert.ToSingle(sInfo[++j].Trim()))).ToString();\n                            mon = mon.PadLeft(2, '0');\n                            String day = (Convert.ToInt32(Convert.ToSingle(sInfo[++j].Trim()))).ToString();\n                            day = day.PadLeft(2, '0');\n                            String PRUavg = sInfo[++j].Trim();\n                            String PRUmax = sInfo[++j].Trim();\n                            String PRUmin = sInfo[++j].Trim();\n                            String Tmean = sInfo[++j].Trim();\n                            String Tmax = sInfo[++j].Trim();\n                            String Tmin = sInfo[++j].Trim();\n                            String RHumavg = sInfo[++j].Trim();\n                            String RHummin = sInfo[++j].Trim();\n                            String PRE = sInfo[++j].Trim();\n                            String WINDavg = sInfo[++j].Trim();\n                            String WINDmax = sInfo[++j].Trim();\n                            String WINDmaxDire = sInfo[++j].Trim();\n                            String WINDextreme = sInfo[++j].Trim();\n                            String WINDextremeDire = sInfo[++j].Trim();\n                            String SolarHours = sInfo[++j].Trim();\n                            OleDbCommand oleDbCom;\n\n                            sql = \"INSERT INTO all\" + datayearDB.Text.Trim() + \" VALUES('\" + sta + \"',\" + year + \",\" + mon + \",\" + day + \",\" + PRUavg + \",\" + PRUmax + \",\" + PRUmin + \",\"\n                                        + Tmean + \",\" + Tmax + \",\" + Tmin + \",\" + RHumavg + \",\" + RHummin + \",\" + PRE + \",\" + WINDavg + \",\" + WINDmax + \",\" + WINDmaxDire + \",\" + WINDextreme +\n                                        \",\" + WINDextremeDire + \",\" + SolarHours + \",\" + \"STR_TO_DATE('\" + year + mon + day + \"','%Y%m%d'),\" + \"'\" + sta + year + mon + day + \"'\" + \")\";\n\n                            //MySqlCommand sqlcmd = mdb.getSqlCommand(sql, conn);\n                            //if(!mdb.getInsert(sqlcmd))\n                            //this.showInfoFun(\"添加第\" + (i + 1).ToString().Trim() + \"时出现错误！\", 1);\n                            sqlList.Add(sql);\n\n                        }\n                        catch (System.Exception ex)\n                        {\n                            this.showInfoFun(\"Please check the input data format！\", 1);\n                        }\n                    }\n\n                    this.showInfoFun(\"Data analysis completed, inserting database operation is in progress, please wait...\", 1);\n                    this.showInfo.Refresh();\n                }\n                else\n                    this.showInfoFun(\"Error reading file！\", 1);\n\n                if (ExecuteSqlTran(sqlList, ref mdb))\n                    this.showInfoFun(count.ToString() + \" records in total were inserted successfully!\", 1);\n                else\n                    this.showInfoFun(\"Insert operation failed!\", 1);\n            //}\n        }\n\n        /// 执行多条SQL语句，实现数据库事务。\n        /// </summary>mysql数据库\n        /// <param name=\"SQLStringList\">多条SQL语句</param>\n        private bool ExecuteSqlTran(List<string> SQLStringList, ref MeteoDB mdb)\n        {\n            int traverse = SQLStringList.Count / 10;\n\n            using (MySqlConnection conn = mdb.getMySqlCon())\n            {\n                conn.Open();\n                MySqlCommand cmd = new MySqlCommand();\n                cmd.Connection = conn;\n                MySqlTransaction tx = conn.BeginTransaction();\n                cmd.Transaction = tx;\n                try\n                {\n                    this.showInfoFun(\"Insertion progress： \",0);\n                    for (int n = 0; n < SQLStringList.Count; n++)\n                    {\n                        string strsql = SQLStringList[n].ToString();\n                        if (strsql.Trim().Length > 1)\n                        {\n                            cmd.CommandText = strsql;\n                            cmd.ExecuteNonQuery();\n                        }\n                        //进度\n                        if (n > 0 && (n % traverse == 0 || n == SQLStringList.Count - 1))\n                        {\n                            //tx.Commit();\n                            //tx = conn.BeginTransaction();\n                            if (n == SQLStringList.Count - 1)\n                                this.showInfoFun(Math.Round((n + 1) / (float)SQLStringList.Count * 100, 2) + \"%\", 1);\n                            else\n                                this.showInfoFun(Math.Round((n + 1) / (float)SQLStringList.Count*100,2) + \"%->\", 0);\n                            this.showInfo.Refresh();\n                        }\n                    }\n                    tx.Commit();//一次性提交\n                }\n                catch (System.Data.SqlClient.SqlException E)\n                {\n                    tx.Rollback();\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        private void BGW1_DoWork(object sender, DoWorkEventArgs e)\n        {\n            String allStasPath = GlobVars.AppStartPath + @\"\\dataBase\\TotalStation\\ChinaStations.shp\";\n            String sql = \"SELECT code,stationName,X,Y,elev FROM station\";\n            DataSet ds;\n            BGW1.ReportProgress(++GlobVars.pValue, \"This may take several minites, please wait...\");\n            int count = 0;\n            try\n            {\n                GlobVars.dbName =  \"MeteoData\";\n                MeteoDB mbd = new MeteoDB();\n                \n                ds = mbd.GetDataFromDB(sql);\n                count = ds.Tables[0].Rows.Count;\n\n                List<GlobFuncs.CPoint> LPoint = new List<GlobFuncs.CPoint>();\n                GlobFuncs.CPoint staInfo = new GlobFuncs.CPoint();\n\n                for (int i = 0; i < count; i++)\n                {\n                    staInfo.code = Convert.ToString(ds.Tables[0].Rows[i][\"Code\"]);\n                    staInfo.staName = ds.Tables[0].Rows[i][\"stationName\"].ToString();\n                    staInfo.X = Convert.ToDouble(ds.Tables[0].Rows[i][\"X\"]);\n                    staInfo.Y = Convert.ToDouble(ds.Tables[0].Rows[i][\"Y\"]);\n                    staInfo.Elev = Convert.ToDouble(ds.Tables[0].Rows[i][\"elev\"]);\n                    LPoint.Add(staInfo);\n                }\n\n                GlobFuncs.CreateShpFromPoints(LPoint, allStasPath);\n            }\n            catch (System.Exception ex)\n            {\n                BGW1.ReportProgress(++GlobVars.pValue, \"An error occurred during the update. If the file already exists, the program will automatically delete it. Please try again！\");\n                return;\n            }\n            BGW1.ReportProgress(++GlobVars.pValue, \"Update successfully！\");\n        }\n        private void BGW2_DoWork(object sender, DoWorkEventArgs e)\n        {\n            String allStasPath = GlobVars.AppStartPath + @\"\\dataBase\\TotalStation\\ForeignStations.shp\";\n            String sql = \"SELECT code,stationName,X,Y,elev FROM station\";\n            DataSet ds;\n            BGW2.ReportProgress(++GlobVars.pValue, \"This may take several minites, please wait...\");\n            int count = 0;\n            try\n            {\n                GlobVars.dbName = \"MeteoData_extens\";\n                MeteoDB mbd = new MeteoDB();\n\n\n                ds = mbd.GetDataFromDB(sql);\n                count = ds.Tables[0].Rows.Count;\n\n                List<GlobFuncs.CPoint> LPoint = new List<GlobFuncs.CPoint>();\n                GlobFuncs.CPoint staInfo = new GlobFuncs.CPoint();\n\n                for (int i = 0; i < count; i++)\n                {\n                    staInfo.code = Convert.ToString(ds.Tables[0].Rows[i][\"Code\"]);\n                    staInfo.staName = ds.Tables[0].Rows[i][\"stationName\"].ToString();\n                    staInfo.X = Convert.ToDouble(ds.Tables[0].Rows[i][\"X\"]);\n                    staInfo.Y = Convert.ToDouble(ds.Tables[0].Rows[i][\"Y\"]);\n                    staInfo.Elev = Convert.ToDouble(ds.Tables[0].Rows[i][\"elev\"]);\n\n                    LPoint.Add(staInfo);\n                }\n\n                GlobFuncs.CreateShpFromPoints(LPoint, allStasPath);\n            }\n            catch (System.Exception ex)\n            {\n                BGW2.ReportProgress(++GlobVars.pValue, \"An error occurred during the update. If the file already exists, the program will automatically delete it. Please try again！\");\n                File.Delete(GlobVars.AppStartPath + @\"\\dataBase\\TotalStation\\ForeignStations.shp\");\n                File.Delete(GlobVars.AppStartPath + @\"\\dataBase\\TotalStation\\ForeignStations.dbf\");\n                File.Delete(GlobVars.AppStartPath + @\"\\dataBase\\TotalStation\\ForeignStations.prj\");\n                File.Delete(GlobVars.AppStartPath + @\"\\dataBase\\TotalStation\\ForeignStations.shx\");\n                return;\n            }\n            BGW2.ReportProgress(++GlobVars.pValue, \"Update successfully！\");\n        }\n        private void BGW3_DoWork(object sender, DoWorkEventArgs e)\n        {\n            try\n            {\n                String stasPath = \"\";\n                String[] dateBegStr = this.dateBeg.Text.Trim().Split('-');\n                dateBegStr[1]=dateBegStr[1].PadLeft(2,'0');\n                dateBegStr[2] = dateBegStr[2].PadLeft(2, '0');\n                String[] dateEndStr = this.dateEnd.Text.Trim().Split('-');\n                dateEndStr[1] = dateEndStr[1].PadLeft(2, '0');\n                dateEndStr[2] = dateEndStr[2].PadLeft(2, '0');\n                int years = Convert.ToInt16(dateEndStr[0]) - Convert.ToInt16(dateBegStr[0]);\n                String curYear = \"\";\n                DataSet dsTot = new DataSet();\n                TimeSpan ts = Convert.ToDateTime(this.dateEnd.EditValue) - Convert.ToDateTime(this.dateBeg.EditValue);\n                long tDays = ts.ToString() == \"00:00:00\" ? 1 : Convert.ToInt32(ts.ToString().Split('.')[0].Trim()) + 1;\n                GlobVars.dataLength = tDays;\n                ArrayList stasCode;\n                ArrayList stasLat;\n                ArrayList stasLon;\n                ArrayList stasElev;\n\n                GlobVars.selVar = SelVars.SelectedIndex;\n\n                String searchStas = \"\";\n                //DateTime dateBeg = new DateTime(Convert.ToInt32(dateBegStr[0]), Convert.ToInt32(dateBegStr[1]), Convert.ToInt32(dateBegStr[2]));\n                //DateTime dateEnd = new DateTime(Convert.ToInt32(dateEndStr[0]), Convert.ToInt32(dateEndStr[1]), Convert.ToInt32(dateEndStr[2]));\n\n\n                if (SelVars.EditValue == \"Select\")\n                    BGW3.ReportProgress(++GlobVars.pValue, \"Please select the variable to be interpolated!\");\n                else\n                {\n                    if (selStas.Checked)\n                        stasPath = GlobVars.LastStatsPath;\n                    else\n                        stasPath = this.InputStas.Text.Trim();\n\n                    if (!GlobFuncs.GetStas(stasPath, out stasLat, out stasLon, out stasElev, out stasCode))\n                    {\n                        BGW3.ReportProgress(++GlobVars.pValue, \"Error reading station file!\");\n                        return;\n                    }\n                    BGW3.ReportProgress(++GlobVars.pValue, \"It may take a few minutes, please wait...\");\n                    GlobVars.mStruct = new MeteoStruct();\n                    GlobVars.mStruct.mData = new MeteoStruct.meteoData[stasCode.Count];\n\n\n                    int i = 0;\n                    String sql = \"\";\n                    MeteoDB mdb;\n\n                    //int oncetime = 50;\n                    //int cycle = Convert.ToBoolean(stasCode.Count % oncetime) ? stasCode.Count / oncetime + 1 : stasCode.Count / oncetime;\n                    //int realCount = 0;\n                    //int rInd;\n                    for (int c = 0; c < stasCode.Count; c++)\n                    {\n\n\n                        searchStas += \"T.Station='\" + stasCode[c].ToString().Trim() + \"'\";\n                        if (c != stasCode.Count - 1)\n                            searchStas += \" OR \";\n\n                        GlobVars.mStruct.mData[c].stasCode = Convert.ToString(stasCode[c].ToString().Trim());\n                        GlobVars.mStruct.mData[c].X = Convert.ToDouble(stasLon[c].ToString().Trim());\n                        GlobVars.mStruct.mData[c].Y = Convert.ToDouble(stasLat[c].ToString().Trim());\n                        GlobVars.mStruct.mData[c].elev = Convert.ToDouble(stasElev[c].ToString().Trim());\n                    }\n\n                        if (years > 0)\n                        {\n                            for (i = 0; i <= years; i++)\n                            {\n                                curYear = (i + Convert.ToInt16(dateBegStr[0])).ToString().Trim();\n\n                                if (i == 0)\n                                    sql = \"SELECT Station,DATE,\" + SelVars.EditValue + \" as climate \" + \"FROM all\" + curYear\n                                               + \" as T WHERE (\" + searchStas + \") AND (T.DATE>=STR_TO_DATE('\" + dateBegStr[0] + dateBegStr[1] + dateBegStr[2]\n                                               + \"','%Y%m%d') AND T.DATE<=STR_TO_DATE('\" + dateEndStr[0] + \"1231','%Y%m%d')) ORDER BY T.Station, T.DATE\";\n                                else if (i == years)\n                                    sql = \"SELECT Station,DATE,\" + SelVars.EditValue + \" as climate \" + \"FROM all\" + curYear\n                                             + \" as T WHERE (\" + searchStas + \") AND (T.DATE>=STR_TO_DATE('\" + dateEndStr[0] + \"0101','%Y%m%d') AND T.DATE<=STR_TO_DATE('\"\n                                             + dateEndStr[0] + dateEndStr[1] + dateEndStr[2] + \"','%Y%m%d')) ORDER BY T.Station, T.DATE\";\n                                else\n                                    sql = \"SELECT Station,DATE,\" + SelVars.EditValue + \" as climate \" + \"FROM all\" + curYear\n                                             + \" as T WHERE (\" + searchStas + \") AND (T.DATE>=STR_TO_DATE('\" + curYear + \"0101','%Y%m%d') AND T.DATE<=STR_TO_DATE('\"\n                                             + curYear + \"1231','%Y%m%d')) ORDER BY T.Station, T.DATE\";\n\n                                GlobVars.dbName = \"MeteoData\";\n                                mdb = new MeteoDB();\n                                DataSet ds = mdb.GetDataFromDB(sql);\n                                if (ds != null)\n                                    ds.Tables[0].TableName = curYear;\n\n                                GlobVars.dbName =  \"MeteoData_extens\";\n                                mdb = new MeteoDB();\n                                DataSet ds_e = mdb.GetDataFromDB(sql);\n                                if (ds_e != null)\n                                    ds_e.Tables[0].TableName = curYear;\n\n                                if (ds != null && ds_e != null && ds_e.Tables[0].Rows.Count > 0)\n                                {\n                                    for (int j = 0; j < ds_e.Tables[0].Rows.Count; j++)\n                                    {\n                                        ds.Tables[0].Rows.Add(ds_e.Tables[0].Rows[j].ItemArray);\n                                    }\n                                }\n                                if (ds != null)\n                                    dsTot.Tables.Add(ds.Tables[0].Copy());\n                            }\n                        }\n                        else\n                        {\n                            curYear = (i + Convert.ToInt16(dateBegStr[0])).ToString().Trim();\n                            sql = \"SELECT Station,DATE,\" + SelVars.EditValue + \" as climate \" + \"FROM all\" + curYear\n                                             + \" as T WHERE (\" + searchStas + \") AND (T.DATE>=STR_TO_DATE('\" + curYear + dateBegStr[1] + dateBegStr[2]\n                                             + \"','%Y%m%d') AND T.DATE<=STR_TO_DATE('\" + curYear + dateEndStr[1] + dateEndStr[2] + \"','%Y%m%d')) ORDER BY T.Station, T.DATE\";\n\n                            GlobVars.dbName = \"MeteoData\";\n                            mdb = new MeteoDB();\n                            DataSet ds = mdb.GetDataFromDB(sql);\n                            if (ds != null)\n                                ds.Tables[0].TableName = curYear + \"_\" + stasCode[i].ToString().Trim()+\"_C\";\n\n                            GlobVars.dbName =  \"MeteoData_extens\";\n                            mdb = new MeteoDB();\n                            DataSet ds_e = mdb.GetDataFromDB(sql);\n                            if (ds_e != null)\n                                ds_e.Tables[0].TableName = curYear + \"_\" + stasCode[i].ToString().Trim() + \"_A\";\n\n                            if (ds != null && ds_e != null && ds_e.Tables[0].Rows.Count > 0)\n                            {\n                                for (int j = 0; j < ds_e.Tables[0].Rows.Count; j++)\n                                {\n                                    ds.Tables[0].Rows.Add(ds_e.Tables[0].Rows[j].ItemArray);\n                                }\n                            }\n                            if (ds != null)\n                                dsTot.Tables.Add(ds.Tables[0].Copy());\n                        }\n\n                    for (int m = 0; m < stasCode.Count; m++)\n                    {\n                        GlobVars.mStruct.mData[m].climData = new double[tDays];\n                        GlobVars.mStruct.mData[m].recsDT = new DateTime[tDays];\n                        for (int n = 0; n < tDays; n++)\n                        {\n                            GlobVars.mStruct.mData[m].climData[n] = 32766.0;\n                            GlobVars.mStruct.mData[m].recsDT[n] = Convert.ToDateTime(this.dateBeg.EditValue).AddDays(n);\n                        }\n                    }\n\n                    int curDay = 0;\n                    string curDate = \"\";\n                    for (int t = 0; t < dsTot.Tables.Count; t++)\n                        for (int r = 0; r < dsTot.Tables[t].Rows.Count; r++)\n                        {\n                            for (int m = 0; m < stasCode.Count; m++)\n                                if (Convert.ToString(dsTot.Tables[t].Rows[r][\"Station\"]) == GlobVars.mStruct.mData[m].stasCode)\n                                {\n                                    curDate = dsTot.Tables[t].Rows[r][\"DATE\"].ToString().Split(' ')[0].Trim();\n                                    ts = Convert.ToDateTime(curDate) - Convert.ToDateTime(this.dateBeg.EditValue);\n                                    if (ts.ToString().Trim() == \"00:00:00\")\n                                        curDay = 0;\n                                    else\n                                        curDay = Convert.ToInt32(ts.ToString().Split('.')[0].Trim());\n                                    GlobVars.mStruct.mData[m].climData[curDay] = Convert.ToDouble(dsTot.Tables[t].Rows[r][\"climate\"]);\n                                    break;\n                                }\n                        }\n                    //GlobFuncs.FileWrite(@\"G:\\YF_Software\\temptest.dat\", ref GlobVars.mStruct.mData, GlobVars.dataLength);\n                }\n            }\n            catch (System.Exception ex)\n            {\n                BGW3.ReportProgress(++GlobVars.pValue, \"Error during execution, error reason：\" + ex.Message);\n                return;\n            }\n            BGW3.ReportProgress(++GlobVars.pValue, \"Load succeeded!\");\n        }\n        private void StasChina_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            GlobVars.pValue = -1;\n            this.BGW1.RunWorkerAsync();\n        }\n        private void BGW1_ProgressChanged(object sender, System.ComponentModel.ProgressChangedEventArgs e)\n        {\n            this.showInfoFun(e.UserState.ToString(), 1);\n        }\n        private void BGW2_ProgressChanged(object sender, System.ComponentModel.ProgressChangedEventArgs e)\n        {\n            this.showInfoFun(e.UserState.ToString(), 1);\n        }\n        private void BGW3_ProgressChanged(object sender, System.ComponentModel.ProgressChangedEventArgs e)\n        {\n            this.showInfoFun(e.UserState.ToString(), 1);\n        }\n        private void StasAbroado_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            GlobVars.pValue = -1;\n            this.BGW2.RunWorkerAsync();\n        }\n\n        private void MergeAll_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            String ChinaStas = GlobVars.AppStartPath + @\"\\dataBase\\TotalStation\\ChinaStations.shp\";\n            String ForeignStas = GlobVars.AppStartPath + @\"\\dataBase\\TotalStation\\ForeignStations.shp\";\n            String TotalStas = GlobVars.AppStartPath + @\"\\dataBase\\TotalStation\\tStations.shp\";\n\n            Geoprocessor gp = new Geoprocessor();\n            gp.OverwriteOutput=true;\n\n            String featList = ChinaStas + \";\" + ForeignStas;\n\n            ESRI.ArcGIS.DataManagementTools.Merge merge = new ESRI.ArcGIS.DataManagementTools.Merge();\n            merge.inputs = featList;\n            merge.output = TotalStas;\n\n            try\n            {\n                gp.Execute(merge,null);\n            }\n            catch (System.Exception ex)\n            {\n                this.showInfoFun(\"Error generating file including total station!\" + gp.GetMessage(0) + gp.GetMessage(1) + gp.GetMessage(2) + gp.GetMessage(3), 1);\n                return;\n            }\n            this.showInfoFun(\"File including total station is generated successfully!\", 1);\n        }\n\n        private void SelStatFile_Paint(object sender, PaintEventArgs e)\n        {\n\n        }\n\n        private void xtraTabControl1_Click(object sender, EventArgs e)\n        {\n\n        }\n\n        private void savsplinacmd_Click(object sender, EventArgs e)\n        {\n        }\n\n        private void interResDir_DoubleClick(object sender, EventArgs e)\n        {\n            this.dirDialog.Description = \"Please set the interpolation result directory\";\n            if (dirDialog.ShowDialog() == DialogResult.OK)\n            {\n                this.interResDir.Text = dirDialog.SelectedPath;\n            }\n        }\n\n        private void textEdit5_DoubleClick(object sender, EventArgs e)\n        {\n            this.dirDialog.Description = \"Please set the error result directory\";\n            if (dirDialog.ShowDialog() == DialogResult.OK)\n            {\n                this.interCovDir.Text = dirDialog.SelectedPath;\n            }\n        }\n\n        private void savelapgrdcmd_Click(object sender, EventArgs e)\n        {\n            /*long fileCount = Convert.ToInt32(this.InpterpNum.Text.Trim());\n            String[] resNames=new String[fileCount];\n            String[] covNames=new String[fileCount];\n            String resPrefix=this.PrefixRes.Text.Trim();\n            String covPrefix=this.PrefixCov.Text.Trim();\n            String resDir = this.interResDir.Text.Trim();\n            String covDir = this.interCovDir.Text.Trim();\n\n            String SurfNum=\"\";\n            for (int i = 0; i < fileCount;i++ )\n            {\n                resNames[i] = resDir + \"\\\\\" + resPrefix + (i + 1).ToString().Trim() + \".grd\";\n                covNames[i] = covDir + \"\\\\\" + covPrefix + (i + 1).ToString().Trim() + \".grd\";\n                SurfNum+=(i+1).ToString().Trim()+\" \";\n            }\n\n            ArrayList AL = new ArrayList();\n\n            String[] tempStr = this.sConfLapgrd.Document.Text.Split('\\n');\n\n            AL.Add(tempStr[0]);\n            AL.Add(SurfNum.Trim());\n            for (int i = 2; i < 17; i++)\n                AL.Add(tempStr[i]);\n            for (int i = 0; i < fileCount; i++)\n                AL.Add(resNames[i]);\n            for (int i = 18; i < 21; i++)\n                AL.Add(tempStr[i]);\n            for (int i = 0; i < fileCount; i++)\n                AL.Add(covNames[i]);\n            for (int i = 22; i < tempStr.Length; i++)\n                AL.Add(tempStr[i]);\n\n            String filename = GlobFuncs.saveFile(saveFileDialog, \"CMD(*.cmd)|*.cmd\");\n\n            if (filename.Trim() != \"\")\n            {\n                this.lapgrdapath.Text = filename;\n                if (GlobFuncs.FileWrite(filename, ref AL))\n                    this.showInfoFun(System.IO.Path.GetFileName(filename) + \"保存成功!\", 1);\n            }*/\n        }\n\n        private void selInterpDir_Click(object sender, EventArgs e)\n        {\n            this.dirDialog.Description = \"Please set interpolation file directory\";\n            if (dirDialog.ShowDialog() == DialogResult.OK)\n            {\n                this.nInterpDir.Text = dirDialog.SelectedPath;\n            }\n        }\n\n        private void splinaExe_Click(object sender, EventArgs e)\n        {\n            int runtimes = GlobFuncs.getFcount(this.nInterpDir1.Text.Trim(), this.splinabcmdFN.Text.Trim());\n\n            for (int i = 0; i < runtimes; i++)\n                runSplina(i);\n            \n        }\n\n        private void runSplina(int subNum)\n        {\n            String tdataDir = this.nInterpDir1.Text.Trim();\n            String splinacmdPath = this.splinabcmdFN.Text.Trim();\n            splinacmdPath=splinacmdPath.Substring(0,splinacmdPath.LastIndexOf('.'))+subNum.ToString().Trim().PadLeft(5,'0')+\".cmd\";\n            String splinaLogPath = \"splina\"+subNum.ToString().Trim().PadLeft(5,'0')+\".log\";\n            String splinbLogPath = \"splinb\" + subNum.ToString().Trim().PadLeft(5, '0') + \".log\";\n\n            if (p == null)\n            {\n                try\n                {\n                    p = new System.Diagnostics.Process();\n                    p.StartInfo.FileName = \"cmd.exe\";\n                    p.StartInfo.UseShellExecute = false;\n                    p.StartInfo.RedirectStandardInput = true;\n                    p.StartInfo.RedirectStandardOutput = true;\n                    p.StartInfo.CreateNoWindow = true;\n                    p.StartInfo.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;\n                    p.Start();\n                    \n                    p.StandardInput.WriteLine(\"cd /d \" + tdataDir);\n                    if (radioGroup1.SelectedIndex == 0)\n                        p.StandardInput.WriteLine(GlobVars.splinaPath + \"<\" + splinacmdPath + \">\" + splinaLogPath);\n                    else\n                        p.StandardInput.WriteLine(GlobVars.splinbPath + \"<\" + splinacmdPath + \">\" + splinbLogPath);\n                    p.StandardInput.WriteLine(\"exit\");\n                    p.WaitForExit();\n                    //this.showInfoFun(p.StandardOutput.ReadToEnd(), 1);\n                    p = null;\n                }\n                catch (System.Exception ex)\n                {\n                    this.showInfoFun(\"An error occurred. Please check if the file already exists!\", 1);\n                }\n                if (radioGroup1.SelectedIndex == 0)\n                    this.showInfoFun(\"The command of splina is done-->\"+splinacmdPath, 1);\n                else\n                    this.showInfoFun(\"The command of splinb is done-->\"+splinacmdPath, 1);\n            }\n            else\n            {\n                this.showInfoFun(\"Another command is running！\", 1);\n            }\n        }\n\n        private void lapgrdExe_Click(object sender, EventArgs e)\n        {\n            int runtimes = GlobFuncs.getFcount(this.nInterpDir1.Text.Trim(), this.lapgrdcmdFN.Text.Trim());\n\n            for (int i = 0; i < runtimes; i++)\n                runlapgrd(i);\n        }\n\n        private void runlapgrd(int subNum)\n        {\n            String tdataDir = this.nInterpDir1.Text.Trim();\n            String lapgrdcmdPath = this.lapgrdcmdFN.Text.Trim();\n            lapgrdcmdPath = lapgrdcmdPath.Substring(0, lapgrdcmdPath.LastIndexOf('.')) + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd\";\n            String lapgrdLogPath = \"lapgrd\" + subNum.ToString().Trim().PadLeft(5, '0') + \".log\";\n\n            if (p == null)\n            {\n                try\n                {\n                    p = new System.Diagnostics.Process();\n                    p.StartInfo.FileName = \"cmd.exe\";\n                    p.StartInfo.UseShellExecute = false;\n                    p.StartInfo.RedirectStandardInput = true;\n                    p.StartInfo.RedirectStandardOutput = true;\n                    p.StartInfo.CreateNoWindow = true;\n                    p.StartInfo.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;\n                    p.Start();\n                    p.StandardInput.WriteLine(\"cd /d \" + tdataDir);\n                    p.StandardInput.WriteLine(GlobVars.lapgrdPath + \"<\" + lapgrdcmdPath + \">\" + lapgrdLogPath);\n                    p.StandardInput.WriteLine(\"exit\");\n                    //this.showInfoFun(p.StandardOutput.ReadToEnd(), 1);\n                    p.WaitForExit();\n                    p = null;\n                }\n                catch (System.Exception ex)\n                {\n                    this.showInfoFun(\"An error occurred. Please check if the file already exists!\", 1);\n                }\n\n                this.showInfoFun(\"The command of lapgrd is done-->\" + lapgrdcmdPath, 1);\n            }\n            else\n            {\n                this.showInfoFun(\"Another command is running！\", 1);\n            }\n        }\n        private void SelBFilePath_Click(object sender, EventArgs e)\n        {\n            String filename = GlobFuncs.openFile(openFileDialog1, \"SHP(*.shp)|*.shp\");\n            if (filename.Trim() != \"\")\n                this.BFilePath.Text = filename;\n        }\n\n        private void staslistPathB_Click(object sender, EventArgs e)\n        {\n            String filename = GlobFuncs.openFile(openFileDialog1, \"TXT(*.txt)|*.txt\");\n            if (filename.Trim() != \"\")\n                this.staslistPath.Text = filename;\n        }\n\n        private void selInputPath_Click(object sender, EventArgs e)\n        {\n            String filename = GlobFuncs.openFile(openFileDialog1, \"SHP(*.shp)|*.shp\");\n            if (filename.Trim() != \"\")\n                this.InputStas.Text = filename;\n        }\n\n        private void simpleButton1_Click(object sender, EventArgs e)\n        {\n            String filename = GlobFuncs.openFile(openFileDialog1, \"TXT(*.txt)|*.txt\");\n            if (filename.Trim() != \"\")\n                this.recsPath.Text = filename;\n        }\n\n        private void saveInterpData_Click(object sender, EventArgs e)\n        {\n            String filename = GlobFuncs.saveFile(saveFileDialog, \"DAT(*.dat)|*.dat\");\n            if(filename.Trim()!=\"\")\n                this.InterpPath.Text = filename;\n        }\n\n        private void CheckRemove_Click(object sender, EventArgs e)\n        {\n            double dataCompl = Convert.ToInt16(this.dataComplete.Text.Trim()) / 100.0;\n            CheckandRemove(ref GlobVars.mStruct);\n        }\n\n        private void CheckandRemove(ref MeteoStruct mStruct)\n        {\n            long dataLength = GlobVars.dataLength;\n\n            int dcomplete=Convert.ToInt16(this.dataComplete.Text.Trim());\n\n            long lackCount;\n            double test;\n            try\n            {\n                for (int i = 0; i < mStruct.mData.Length; i++)\n                {\n                    lackCount = 0;\n                    for (int j = 0; j < dataLength; j++)\n                        if (mStruct.mData[i].climData[j] == 32744 || mStruct.mData[i].climData[j] == 32766)\n                        {\n                            mStruct.mData[i].climData[j] = 32766;\n                            lackCount++;\n                        }\n                        else if (mStruct.mData[i].climData[j] == 32700)\n                        {\n                            mStruct.mData[i].climData[j] = 0.0;\n                        }\n                        else if (mStruct.mData[i].climData[j] >= 31000 && mStruct.mData[i].climData[j]<32000)\n                        {\n                            mStruct.mData[i].climData[j] -= 31000;\n                            mStruct.mData[i].climData[j] *= 0.1;\n                        }\n                        else if (mStruct.mData[i].climData[j] >= 30000 && mStruct.mData[i].climData[j] < 31000)\n                        {\n                            mStruct.mData[i].climData[j] -= 30000;\n                            mStruct.mData[i].climData[j] *= 0.1;\n                        }\n                        else if (mStruct.mData[i].climData[j] >= 32000 && mStruct.mData[i].climData[j] < 33000)\n                        {\n                            mStruct.mData[i].climData[j] -= 32000;\n                            mStruct.mData[i].climData[j] *= 0.1;\n                        }\n                        else if (SelVars.SelectedIndex == 6 || SelVars.SelectedIndex == 7  && mStruct.mData[i].climData[j] >= 300)\n                        {\n                            mStruct.mData[i].climData[j] -= 300;\n                        }\n                        else if(SelVars.SelectedIndex == 9 || SelVars.SelectedIndex == 10 || SelVars.SelectedIndex == 12 && mStruct.mData[i].climData[j] >= 1000)\n                        {\n                            mStruct.mData[i].climData[j] -= 1000;\n                        }\n                        else if(SelVars.SelectedIndex==11 || SelVars.SelectedIndex==13)\n                        {\n                            if (mStruct.mData[i].climData[j] >= 100)\n                                mStruct.mData[i].climData[j] -= 100;\n                            else if (mStruct.mData[i].climData[j] >= 95)\n                                mStruct.mData[i].climData[j] -= 95;\n                            else if (mStruct.mData[i].climData[j] >= 90)\n                                mStruct.mData[i].climData[j] -= 90;\n                        }\n                    //test=lackCount / (float)(dataLength) * 100.0;\n                    //this.showInfoFun(test.ToString(),1);\n\n                    if (lackCount / (float)(dataLength) * 100.0 > (100.0 - dcomplete))\n                    {\n                        mStruct.mData[i].stasCode = \"-1\";\n                        mStruct.mData[i].climData = null;\n                    }\n                }\n\n                //GlobFuncs.FileWrite(@\"G:\\YF_Software\\temptest_CR.dat\", ref GlobVars.mStruct.mData, dataLength);\n            }\n            catch (System.Exception ex)\n            {\n                this.showInfoFun(\"Error in executing process!\",1);\n                return;\n            }\n            this.showInfoFun(\"Success in checking and removing the stations of data integrity less than\" + dcomplete + \"%!\", 1);\n        }\n\n        private void outputdata_Click(object sender, EventArgs e)\n        {\n            bool isonlyStat = isSplit.Checked;\n            int selIndex = this.selScale.SelectedIndex;\n            int statMethod;\n\n            if(this.selstatMethod.EditValue==\"Mean\")\n                statMethod=0;\n            else\n                statMethod=1;\n\n            switch (selIndex)\n            {\n                case 0:\n                    statScales(selIndex,statMethod,isonlyStat);\n                    break;\n                case 1:\n                    statScales(selIndex, statMethod,isonlyStat);\n                    break;\n                default:\n                    statScales(selIndex, statMethod, isonlyStat);\n                    break;\n            }\n        }\n\n\n        private void statScales(int selIndex, int statMethod,bool isonlyStat)\n        {\n            try\n            {\n                int days;\n                long tCount = GlobVars.mStruct.mData.Length;\n                long tDays = GlobVars.dataLength;\n                DateTime DateBeg = GlobVars.mStruct.mData[0].recsDT[0];\n                int curyear = 0;\n                double dataStore = 0.0;\n                DateTime curEndYear;\n                int realCount = 0;\n                long resCount = 0;\n\n\n                if (selIndex == 0)\n                {\n                    GlobVars.dateName.Clear();\n\n                    days = Convert.ToInt16(this.inputDays.Text.Trim());\n                    if (tDays < days)\n                    {\n                        this.showInfoFun(\"Error：data length cannot be less than the setting scale!\", 1);\n                        return;\n                    }\n                    try\n                    {\n                        int  Flag = 0;\n\n                        for (int i = 0; i < tCount; i++)\n                        {\n                            if (GlobVars.mStruct.mData[i].stasCode == \"-1\")\n                                continue;\n                            Flag++;\n                            resCount = 0;\n                            for (int j = 0; j < tDays; )\n                            {\n                                curyear = Convert.ToInt16(DateBeg.ToString(\"yyyy\").Trim());\n                                curEndYear = new DateTime(curyear, 12, 31);\n                                realCount = 0;\n                                dataStore = 0.0;\n                                for (int k = 0; k < days; k++)\n                                    if (j < tDays && GlobVars.mStruct.mData[i].recsDT[j] <= curEndYear)\n                                    {\n                                        if (Flag==1 && k == 0)\n                                            GlobVars.dateName.Add(GlobVars.mStruct.mData[i].recsDT[j].ToString(\"yyyyMMdd\"));\n                                        dataStore += GlobVars.mStruct.mData[i].climData[j];\n                                        realCount++;\n                                        j++;\n                                    }\n\n                                if (statMethod == 0)\n                                    dataStore /= (float)realCount;\n                                GlobVars.mStruct.mData[i].climData[resCount++] = dataStore;\n                                if (j == tDays)\n                                    break;\n                                DateBeg = GlobVars.mStruct.mData[i].recsDT[j];\n                            }\n\n                        }\n                    }\n                    catch (System.Exception ex)\n                    {\n                        this.showInfoFun(\"Error in daily scale data statistics!\", 1);\n                        return;\n                    }\n                    //this.showInfoFun(\"日尺度数据统计结束！\", 1);\n                }\n                else if (selIndex == 1)\n                {\n                    GlobVars.dateName.Clear();\n                    bool flag=true;\n                    try\n                    {\n                        for (int i = 0; i < tCount; i++)\n                        {\n                            if (GlobVars.mStruct.mData[i].stasCode == \"-1\")\n                                continue;\n                            resCount = 0;\n                            DateBeg = GlobVars.mStruct.mData[i].recsDT[0];\n\n                            for (int j = 0; j < tDays; )\n                            {\n                                curyear = Convert.ToInt16(DateBeg.ToString(\"yyyy\").Trim());\n\n\n                                for (int k = 0; k < 11; k++)\n                                {\n                                    curEndYear = new DateTime(curyear, k + 2, 1);\n                                    realCount = 0;\n                                    dataStore = 0.0;\n                                    if (flag)\n                                        GlobVars.dateName.Add(curyear.ToString().Trim() + (k + 1).ToString(\"00\").Trim());\n                                    while (GlobVars.mStruct.mData[i].recsDT[j] < curEndYear)\n                                    {\n                                        dataStore += GlobVars.mStruct.mData[i].climData[j];\n                                        realCount++;\n                                        j++;\n                                    }\n                                    if (statMethod == 0)\n                                        dataStore /= (float)realCount;\n                                    GlobVars.mStruct.mData[i].climData[resCount++] = dataStore;\n                                }\n\n                                curEndYear = new DateTime(curyear, 12, 31);\n                                if (flag)\n                                {\n                                    GlobVars.dateName.Add(curyear.ToString().Trim() + (12).ToString().Trim());\n                                    //flag = false;\n                                } \n                                realCount = 0;\n                                dataStore = 0.0;\n                                while (j < tDays && GlobVars.mStruct.mData[11].recsDT[j] <= curEndYear)\n                                {\n                                    dataStore += GlobVars.mStruct.mData[i].climData[j];\n                                    realCount++;\n                                    j++;\n                                }\n                                if (statMethod == 0)\n                                    dataStore /= (float)realCount;\n                                GlobVars.mStruct.mData[i].climData[resCount++] = dataStore;\n\n                                if (j == tDays)\n                                    break;\n                                DateBeg = GlobVars.mStruct.mData[i].recsDT[j];\n                            }\n                            flag = false;\n\n                        }\n                    }\n                    catch (System.Exception ex)\n                    {\n                        this.showInfoFun(\"Error in monthly scale data statistics!\", 1);\n                        return;\n                    }\n                    //this.showInfoFun(\"月尺度数据统计结束！\", 1);\n                }\n                else\n                {\n                    GlobVars.dateName.Clear();\n                    try\n                    {\n                        for (int i = 0; i < tCount; i++)\n                        {\n                            if (GlobVars.mStruct.mData[i].stasCode == \"-1\")\n                                continue;\n                            resCount = 0;\n                            DateBeg = GlobVars.mStruct.mData[i].recsDT[0];\n\n                            for (int j = 0; j < tDays; )\n                            {\n                                curyear = Convert.ToInt16(DateBeg.ToString(\"yyyy\").Trim());\n                                if(i==0)\n                                    GlobVars.dateName.Add(curyear.ToString().Trim());\n                                curEndYear = new DateTime(curyear, 12, 31);\n                                realCount = 0;\n                                dataStore = 0.0;\n                                while (j < tDays && GlobVars.mStruct.mData[i].recsDT[j] <= curEndYear)\n                                {\n                                    dataStore += GlobVars.mStruct.mData[i].climData[j];\n                                    realCount++;\n                                    j++;\n                                }\n                                if (statMethod == 0)\n                                    dataStore /= (float)realCount;\n                                GlobVars.mStruct.mData[i].climData[resCount++] = dataStore;\n                                if (j == tDays)\n                                    break;\n                                DateBeg = GlobVars.mStruct.mData[i].recsDT[j];\n                            }\n                        }\n                    }\n                    catch (System.Exception ex)\n                    {\n                        this.showInfoFun(\"Error in annual scale data statistics!\", 1);\n                        return;\n                    }\n                    //this.showInfoFun(\"年尺度数据统计结束！\", 1);\n\n                }\n\n                String filename = GlobFuncs.saveFile(saveFileDialog, \"DAT(*.dat)|*.dat\");\n                if (isonlyStat)\n                {\n                    if (GlobFuncs.FileWrite(filename, ref GlobVars.mStruct.mData, resCount))\n                        this.showInfoFun(System.IO.Path.GetFileName(filename) + \"saved successfully!\", 1);\n                }\n                else\n                {\n\n                    int runtimes = resCount % (float)88 == 0 ? Convert.ToInt32(resCount / 88) : Convert.ToInt32(resCount / 88) + 1;\n                    String comStr = \"\";\n                    long start = 0;\n                    long end = 0;\n\n                    GlobVars.realCount = new ArrayList();\n\n                    if (filename.Trim() != \"\")\n                    {\n                        comStr = filename.Substring(0, filename.LastIndexOf('.'));\n\n                        for (int i = 0; i < runtimes; i++)\n                        {\n                            start = i * 88;\n                            if (i == runtimes - 1)\n                                end = resCount;\n                            else\n                                end = (i + 1) * 88;\n\n                            GlobVars.realCount.Add(end - start);\n\n                            filename = comStr + i.ToString().Trim().PadLeft(5, '0') + \".dat\";\n                            //Clear counter---stationNum\n                            GlobVars.stationNum = 0;\n\n                            if (GlobFuncs.FileWrite(filename, ref GlobVars.mStruct.mData, end, start))\n                                this.showInfoFun(System.IO.Path.GetFileName(filename) + \"saved successfully!\", 1);\n                        }\n                    }\n                }\n\n                GlobVars.resCount = resCount;\n            }\n            catch (System.Exception ex)\n            {\n                this.showInfoFun(ex.Message, 1);\n            }\n            \n        }\n        private void selScale_SelectedIndexChanged(object sender, EventArgs e)\n        {\n            int selIndex = this.selScale.SelectedIndex;\n            switch (selIndex)\n            {\n                case 0:\n                    this.inputDays.Enabled = true;\n                    break;\n                case 1:\n                    this.inputDays.Enabled = false;\n                    this.showInfoFun(\"Note：When calculating the monthly scale, the input data must be a complete year，e.g. 1970/1/1-1970/12/31！\", 1);\n                    break;\n                default:\n                    this.inputDays.Enabled = false;\n                    break;\n            }\n        }\n\n        private void SetVisHiddenScale_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (this.checkInterpScale.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Visible)\n                this.checkInterpScale.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n            else\n                this.checkInterpScale.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n        }\n\n        private void selSplinb_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (AnusplinbInterp.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n            {\n                if (!GlobVars.readsbcFile)\n                {\n                    ArrayList saIn;\n                    GlobFuncs.FileRead(GlobVars.splinbConfPath, out saIn);\n                    this.splinbREC.Document.Text = \"\";\n                    for (int i = 0; i < saIn.Count; i++)\n                    {\n                        this.splinbREC.Document.AppendText(saIn[i] + \"\\n\");\n                    }\n                    GlobVars.readsbcFile = true;\n                }\n                DocumentRange range = splinbREC.Document.Range;\n                CharacterProperties cp = this.splinbREC.Document.BeginUpdateCharacters(range);\n                cp.FontName = \"Times New Roman\";\n                cp.FontSize = 8;\n                this.splinbREC.Document.EndUpdateCharacters(cp);\n\n                if (!GlobVars.readlbcFile)\n                {\n                    ArrayList saIn;\n                    GlobFuncs.FileRead(GlobVars.lapgrdConfPath, out saIn);\n                    this.lapgrdREC.Document.Text = \"\";\n                    for (int i = 0; i < saIn.Count; i++)\n                    {\n                        this.lapgrdREC.Document.AppendText(saIn[i] + \"\\n\");\n                    }\n                    GlobVars.readsbcFile = true;\n                }\n                DocumentRange range1 = lapgrdREC.Document.Range;\n                CharacterProperties cp1 = this.lapgrdREC.Document.BeginUpdateCharacters(range1);\n                cp1.FontName = \"Times New Roman\";\n                cp1.FontSize = 8;\n                this.lapgrdREC.Document.EndUpdateCharacters(cp1);\n\n                if (!GlobVars.readsecFile)\n                {\n                    ArrayList saIn;\n                    GlobFuncs.FileRead(GlobVars.selnotConfPath, out saIn);\n                    this.selnotREC.Document.Text = \"\";\n                    for (int i = 0; i < saIn.Count; i++)\n                    {\n                        this.selnotREC.Document.AppendText(saIn[i] + \"\\n\");\n                    }\n                    GlobVars.readsecFile = true;\n                }\n                DocumentRange range2 = selnotREC.Document.Range;\n                CharacterProperties cp2 = this.selnotREC.Document.BeginUpdateCharacters(range2);\n                cp2.FontName = \"Times New Roman\";\n                cp2.FontSize = 8;\n                this.selnotREC.Document.EndUpdateCharacters(cp2);\n\n                AnusplinbInterp.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            }\n            else\n                AnusplinbInterp.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void selSplina_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            \n        }\n\n        private void ResDir_DoubleClick(object sender, EventArgs e)\n        {\n            this.dirDialog.Description = \"Please set interpolation results directory\";\n            if (dirDialog.ShowDialog() == DialogResult.OK)\n            {\n                this.ResDir.Text = dirDialog.SelectedPath;\n            }\n        }\n\n        private void CovDir_DoubleClick(object sender, EventArgs e)\n        {\n            this.dirDialog.Description = \"Please set error result directory\";\n            if (dirDialog.ShowDialog() == DialogResult.OK)\n            {\n                this.CovDir.Text = dirDialog.SelectedPath;\n            }\n        }\n\n        private void simpleButton3_Click(object sender, EventArgs e)\n        {\n            try\n            {\n                long fileCount = Convert.ToInt32(this.ResNum.Text.Trim());\n                String[] resNames = new String[fileCount];\n                String[] covNames = new String[fileCount];\n                String resPrefix = this.PrefixResFile.Text.Trim();\n                String covPrefix = this.PrefixCovFile.Text.Trim();\n                String resDir = this.ResDir.Text.Trim();\n                String covDir = this.CovDir.Text.Trim();\n\n                String SurfNum = \"\";\n                for (int i = 0; i < fileCount; i++)\n                {\n                    resNames[i] = resDir + \"\\\\\" + resPrefix + (i + 1).ToString().Trim() + \".grd\";\n                    covNames[i] = covDir + \"\\\\\" + covPrefix + (i + 1).ToString().Trim() + \".grd\";\n                    SurfNum += (i + 1).ToString().Trim() + \" \";\n                }\n\n                ArrayList AL = new ArrayList();\n\n                String[] tempStr = this.lapgrdREC.Document.Text.Split('\\n');\n\n                AL.Add(tempStr[0]);\n                AL.Add(SurfNum.Trim());\n                for (int i = 2; i < 17; i++)\n                    AL.Add(tempStr[i]);\n                for (int i = 0; i < fileCount; i++)\n                    AL.Add(resNames[i]);\n                for (int i = 18; i < 21; i++)\n                    AL.Add(tempStr[i]);\n                for (int i = 0; i < fileCount; i++)\n                    AL.Add(covNames[i]);\n                for (int i = 22; i < tempStr.Length; i++)\n                    AL.Add(tempStr[i]);\n\n                String filename = GlobFuncs.saveFile(saveFileDialog, \"CMD(*.cmd)|*.cmd\");\n\n                if (filename.Trim() != \"\")\n                {\n                    this.lapgrdbpath.Text = filename;\n                    if (GlobFuncs.FileWrite(filename, ref AL))\n                        this.showInfoFun(System.IO.Path.GetFileName(filename) + \"saved successfully!\", 1);\n                }\n            }\n            catch (System.Exception ex)\n            {\n                return;\n            }\n        }\n\n        private void selInterpDirb_Click(object sender, EventArgs e)\n        {\n            this.dirDialog.Description = \"Please set interpolation directory\";\n            if (dirDialog.ShowDialog() == DialogResult.OK)\n            {\n                this.nInterpDirb.Text = dirDialog.SelectedPath;\n            }\n        }\n\n        private void splinbExe_Click(object sender, EventArgs e)\n        {\n            String tdataDir = this.nInterpDirb.Text.Trim();\n            String splinbcmdPath = this.splinbcmdFN.Text.Trim();\n            String splinbLogPath = \"splinb.log\";\n\n            if (p == null)\n            {\n                try\n                {\n                    p = new System.Diagnostics.Process();\n                    p.StartInfo.FileName = \"cmd.exe\";\n                    p.StartInfo.UseShellExecute = false;\n                    p.StartInfo.RedirectStandardInput = true;\n                    p.StartInfo.RedirectStandardOutput = true;\n                    p.StartInfo.CreateNoWindow = true;\n                    p.StartInfo.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;\n                    p.Start();\n                    p.StandardInput.WriteLine(\"cd /d \" + tdataDir);\n                    p.StandardInput.WriteLine(GlobVars.splinbPath + \"<\" + splinbcmdPath + \">\" + splinbLogPath);\n                    p.StandardInput.WriteLine(\"exit\");\n                    p.WaitForExit();\n                    //this.showInfoFun(p.StandardOutput.ReadToEnd(), 1);\n                    p = null;\n                }\n                catch (System.Exception ex)\n                {\n                    this.showInfoFun(\"An error occurred. Please check if the file already exists!\", 1);\n                }\n                this.showInfoFun(\"The command of splinb has finished running!\", 1);\n            }\n            else\n            {\n                this.showInfoFun(\"Another command is running！\", 1);\n            }\n        }\n\n        private void lapgrdbExe_Click(object sender, EventArgs e)\n        {\n            String tdataDir = this.nInterpDirb.Text.Trim();\n            String lapgrdcmdPath = this.lapgrdbcmdFN.Text.Trim();\n            String lapgrdLogPath = \"lapgrd_b.log\";\n\n            if (p == null)\n            {\n                try\n                {\n                    p = new System.Diagnostics.Process();\n                    p.StartInfo.FileName = \"cmd.exe\";\n                    p.StartInfo.UseShellExecute = false;\n                    p.StartInfo.RedirectStandardInput = true;\n                    p.StartInfo.RedirectStandardOutput = true;\n                    p.StartInfo.CreateNoWindow = true;\n                    p.StartInfo.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;\n                    p.Start();\n                    p.StandardInput.WriteLine(\"cd /d \" + tdataDir);\n                    p.StandardInput.WriteLine(GlobVars.lapgrdPath + \"<\" + lapgrdcmdPath + \">\" + lapgrdLogPath);\n                    p.StandardInput.WriteLine(\"exit\");\n                    p.WaitForExit();\n                    //this.showInfoFun(p.StandardOutput.ReadToEnd(), 1);\n                    p = null;\n                }\n                catch (System.Exception ex)\n                {\n                    this.showInfoFun(\"An error occurred. Please check if the file already exists!\", 1);\n                }\n\n                this.showInfoFun(\"The command of lapgrd has finished running!\", 1);\n            }\n            else\n            {\n                this.showInfoFun(\"Another command is running！\", 1);\n            }\n        }\n\n        private void selnotExe_Click(object sender, EventArgs e)\n        {\n            String tdataDir = this.nInterpDir.Text.Trim();\n            String selnotcmdPath = this.selnotcmdFN.Text.Trim();\n            String selnotLogPath = \"selnot.log\";\n\n            if (p == null)\n            {\n                try\n                {\n                    p = new System.Diagnostics.Process();\n                    p.StartInfo.FileName = \"cmd.exe\";\n                    p.StartInfo.UseShellExecute = false;\n                    p.StartInfo.RedirectStandardInput = true;\n                    p.StartInfo.RedirectStandardOutput = true;\n                    p.StartInfo.CreateNoWindow = true;\n                    p.StartInfo.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;\n                    p.Start();\n                    p.StandardInput.WriteLine(\"cd /d \" + tdataDir);\n                    p.StandardInput.WriteLine(GlobVars.selnotPath + \"<\" + selnotcmdPath + \">\" + selnotLogPath);\n                    p.StandardInput.WriteLine(\"exit\");\n                    p.WaitForExit();\n                    //this.showInfoFun(p.StandardOutput.ReadToEnd(), 1);\n                    p = null;\n                }\n                catch (System.Exception ex)\n                {\n                    this.showInfoFun(\"An error occurred. Please check if the file already exists!\", 1);\n                }\n\n                this.showInfoFun(\"The command of selnot has finished running!\", 1);\n            }\n            else\n            {\n                this.showInfoFun(\"Another command is running！\", 1);\n            }\n        }\n\n        private void lackvalueExe_Click(object sender, EventArgs e)\n        {\n            String saveFileName=InterpPath.Text.Trim();\n            if (lackdeal())\n            {\n                if (!this.isChecked.Checked)\n                    this.showInfoFun(\"Handling completed！\", 1);\n                else\n                {\n                    if (saveFileName != \"\")\n                    {\n                        GlobFuncs.FileWrite(saveFileName, ref GlobVars.mStruct.mData, GlobVars.dataLength);\n                        this.showInfoFun(\"Handling completed and results saved successfully！\", 1);\n                    }\n                }\n            }\n            else\n                this.showInfoFun(\"Error processing exception value！\", 1);\n        }\n\n        private bool lackdeal()\n        {\n            //try\n            //{\n                long col = 0;\n                long row = 0;\n                long i = 0;\n\n                ArrayList gValue = new ArrayList();\n                ArrayList bValue = new ArrayList();\n\n                while (true)\n                {\n                    if (GlobVars.mStruct.mData[i].stasCode != \"-1\")\n                    {\n                        col = GlobVars.mStruct.mData[i].climData.Length;\n                        break;\n                    }\n                    i++;\n                }\n\n                row = GlobVars.mStruct.mData.Length;\n\n                for (i = 0; i < col; i++)\n                {\n                    bValue.Clear();\n                    gValue.Clear();\n\n                    for (long j = 0; j < row; j++)\n                    {\n                        if (GlobVars.mStruct.mData[j].stasCode != \"-1\")\n                            if (GlobVars.mStruct.mData[j].climData[i] == 32766)\n                                bValue.Add(j);\n                            else\n                                gValue.Add(j);\n                    }\n                    if(bValue.Count>0)\n                        IDW(i, ref gValue, ref bValue);\n                }\n            //}\n            //catch (System.Exception ex)\n            //{\n                // this.showInfoFun(ex.ToString(), 1);\n            //    return false;\n           // }\n            return true;\n        }\n\n        struct distweight\n        {\n            public double[,] dist;\n            public double[,] weight;\n            public double[] fenmu;\n        }\n\n\n        private void IDW(long wday,ref ArrayList gValue,ref ArrayList bValue)\n        {\n            int bNum = bValue.Count;\n            int gNum = gValue.Count;\n\n            long bInd;\n            long gInd;\n\n            double bX;\n            double bY;\n            double gX;\n            double gY;\n\n            double tempV = 0.0;\n\n            distweight dw = new distweight();\n            dw.dist = new double[bNum,gNum];\n            dw.weight = new double[bNum,gNum];\n            dw.fenmu = new double[bNum];\n\n            for (int i = 0; i < bNum; i++)\n            {\n                bInd = Convert.ToInt32(bValue[i]);\n                bX = GlobVars.mStruct.mData[bInd].X;\n                bY = GlobVars.mStruct.mData[bInd].Y;\n                dw.fenmu[i] = 0.0;\n\n                for (int j = 0; j < gNum; j++)\n                {\n                    gInd = Convert.ToInt32(gValue[j]);\n                    gX = GlobVars.mStruct.mData[gInd].X;\n                    gY = GlobVars.mStruct.mData[gInd].Y;\n\n                    dw.dist[i, j] = Math.Sqrt(Math.Pow(bX - gX, 2) + Math.Pow(bY - gY, 2));\n                    dw.fenmu[i] += Math.Pow(1.0/dw.dist[i, j],2);\n                }\n            }\n\n            for (int i = 0; i < bNum; i++)\n            {\n                tempV=0.0;\n                bInd = Convert.ToInt32(bValue[i]);\n\n                for (int j = 0; j < gNum;j++ )\n                {\n                    gInd = Convert.ToInt32(gValue[j]);\n                    dw.weight[i, j] = Math.Pow(1.0 / dw.dist[i, j], 2) / dw.fenmu[i];\n                    tempV += GlobVars.mStruct.mData[gInd].climData[wday] * dw.weight[i, j];\n                }\n                GlobVars.mStruct.mData[bInd].climData[wday] = tempV;\n            }\n        }\n\n        private void ExecRecsB_Click(object sender, EventArgs e)\n        {\n            String sCode = this.StasCode.Text.Trim();\n            String rYear = this.RecsYear.Text.Trim();\n            String sql;\n\n            MeteoDB mdb = new MeteoDB();\n\n            sql = \"SELECT Station,Year,Month,Day,APRE,DMXP,DMNP,MTEM,DMXT,DMNT,AVRH,MNRH,PREP,MEWS,MXWS,DMWS,EXWS,DEWS,SOHR FROM all\" + rYear + \" as T WHERE Station='\" + sCode + \"' ORDER BY T.Year,T.Month,T.Day\";\n            DataSet ds=mdb.GetDataFromDB(sql);\n            if (ds != null)\n            {\n                gridView1.ViewCaption = \"The total record of this query is \" + ds.Tables[0].Rows.Count.ToString().Trim();\n                gridControl1.DataSource = ds.Tables[0];\n                gridView1.RefreshData();\n                this.showInfoFun(\"Query successfully！\", 1);\n            }\n            else\n            {\n                gridView1.ViewCaption = \"There are 0 records in this query\";\n                gridControl1.DataSource = null;\n                gridView1.RefreshData();\n                this.showInfoFun(\"No records found for this station！\", 1);\n            }\n        }\n\n        private void QChinaDB_CheckedChanged(object sender, EventArgs e)\n        {\n            if (QChinaDB.Checked == true)\n            {\n                GlobVars.dbName =  \"MeteoData\";\n                QAbroadDB.Checked = false;\n            }\n        }\n\n        private void QAbroadDB_CheckedChanged(object sender, EventArgs e)\n        {\n            if (QAbroadDB.Checked == true)\n            {\n                GlobVars.dbName = \"MeteoData_extens\";\n                QChinaDB.Checked = false;\n\n            }\n        }\n\n        private void QueryRecs_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (QueryRecsP.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n                QueryRecsP.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            else\n                QueryRecsP.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void EmptyBufferFiles_Click(object sender, EventArgs e)\n        {\n            int count = GlobFuncs.DelHistoryFiles(GlobVars.AppStartPath + @\"\\TempStore\\Buffer\");\n\n            if (count > 0)\n                this.showInfoFun(\"Operation completed，but some files (count: \" + count.ToString().Trim() + \")cannot be deleted successfully due to system resource usage！\", 1);\n            else\n                this.showInfoFun(\"Buffer history file cleared successfully!\",1);\n        }\n\n        private void EmptyStasFiles_Click(object sender, EventArgs e)\n        {\n            int count = GlobFuncs.DelHistoryFiles(GlobVars.AppStartPath + @\"\\TempStore\\Stations\");\n\n            if (count > 0)\n                this.showInfoFun(\"Operation completed，but some files (count: \" + count.ToString().Trim() + \")cannot be deleted successfully due to system resource usage！\", 1);\n            else\n                this.showInfoFun(\"Successfully emptied station selection history files!\", 1);\n        }\n\n        private void DChinaDB_CheckedChanged(object sender, EventArgs e)\n        {\n            if (DChinaDB.Checked == true)\n            {\n                GlobVars.dbName = \"MeteoData\";\n                DAbroadDB.Checked = false;\n            }\n        }\n\n        private void DAbroadDB_CheckedChanged(object sender, EventArgs e)\n        {\n            if (DAbroadDB.Checked == true)\n            {\n                GlobVars.dbName = \"MeteoData_extens\";\n                DChinaDB.Checked = false;\n\n            }\n        }\n\n        private void ExecEmpty_Click(object sender, EventArgs e)\n        {\n            String rYear = this.rYearE.Text.Trim();\n            String sql;\n\n            MeteoDB mdb = new MeteoDB();\n\n            DataSet ds;\n\n            sql = \"DELETE FROM all\" + rYear;\n            try\n            {\n                ds = mdb.GetDataFromDB(sql); \n                \n                if (ds == null)\n                    this.showInfoFun(\"Data table clearing completed!\", 1);\n            }\n            catch (System.Exception ex)\n            {\n            \tthis.showInfoFun(\"Data table empty failed!\", 1);\n            }\n        }\n\n        private void DeleAllRecs_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (emptyRecs.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n                emptyRecs.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            else\n                emptyRecs.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void ToolComboBoxLayer_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n\n        }\n\n        private void ToolComboBoxLayer_EditValueChanged(object sender, EventArgs e)\n        {\n            if (m_mapControl.Map.LayerCount >= 1)\n            {\n                int j;\n                String Name=ToolComboBoxLayer.EditValue.ToString();\n\n                for(j=0;j<m_mapControl.Map.LayerCount;j++)\n                {\n                    if (Name == ((DevExpress.XtraEditors.Repository.RepositoryItemComboBox)ToolComboBoxLayer.Edit).Items[j].ToString())\n                    {\n                        m_mapControl.MoveLayerTo(j, 0);\n                        //地图刷新\n                        m_mapControl.Refresh(esriViewDrawPhase.esriViewGeography, null, null);\n                        m_pTocControl.Update();\n                    }\n                }\n                \n            }\n        }\n\n        private int mainTime = 30;\n        private void frmclose_Tick(object sender, EventArgs e)\n        {\n            showInfo.Text = richText;\n            this.showInfoFun(\"系统将会在\" + (mainTime).ToString() + \" 秒内关闭，请联系作者获取注册码！\", 1);\n            if (--mainTime == 0)\n                this.Close();\n        }\n\n        public GetMachineCode Getmac = new GetMachineCode();\n        private void GenerateMC_Click(object sender, EventArgs e)\n        {\n            this.MachCode.Text = Getmac.machinecode();\n        }\n\n        private void RegisterRC_Click(object sender, EventArgs e)\n        {\n            if (this.RegiCode.Text == Getmac.regcode(this.MachCode.Text))\n            {\n                Microsoft.Win32.RegistryKey retkey = Microsoft.Win32.Registry.CurrentUser.\n                    OpenSubKey(\"software\", true).CreateSubKey(\"MPIS\").CreateSubKey(\"SOFTWARE CODE\");\n                //CreateSubKey(this.textEdit2 .Text.TrimEnd());\n                retkey.SetValue(\"UserName\", this.RegiCode.Text.TrimEnd());\n\n                this.Text = \" Meteo-Data Preprocessing and Interpolation System\";\n                this.frmclose.Enabled = false;\n\n                this.showInfoFun(\"Registration Information：Success！\", 1);\n            }\n            else\n            {\n                this.showInfoFun(\"Registration Information：Permission Denied！\", 1);\n            }\n        }\n\n        private void CopyMachCode_Click(object sender, EventArgs e)\n        {\n            if (this.MachCode.Text.Trim() != \"\")\n            {\n                Clipboard.SetDataObject(this.MachCode.Text.Trim());\n                this.showInfoFun(\"Machine Code has been copied!\", 1);\n            }\n            else\n            {\n                this.showInfoFun(\"Please generate the Machine Code firstly!\", 1);\n            }\n        }\n\n        private void simpleButton4_Click(object sender, EventArgs e)\n        {\n            IDataObject iData = Clipboard.GetDataObject();\n            if (iData.GetDataPresent(DataFormats.Text))\n            {\n                RegiCode.Text = (String)iData.GetData(DataFormats.Text);\n            } \n        }\n\n        private void ToolBoxB_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (tools.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n                tools.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            else\n                tools.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void RegisterB_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (RegisterP.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n                RegisterP.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            else\n                RegisterP.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void simpleButton2_Click(object sender, EventArgs e)\n        {\n\n        }\n\n        private void GenerateCMDDir_Click(object sender, EventArgs e)\n        {\n            this.dirDialog.Description = \"Please set interpolation directory\";\n            if (dirDialog.ShowDialog() == DialogResult.OK)\n            {\n                this.nInterpDir.Text = dirDialog.SelectedPath;\n            }\n        }\n\n        private int getSelVarUnit()\n        {\n            int x=-1;\n            switch (GlobVars.selVar)\n            {\n                case 8:\n                    x= 7;\n                    break;\n                default:\n                    x=5;\n                    break;\n            }\n            return x;\n        }\n\n        private String spaDir;\n        private double xlr, pix, line, ylr, siz, xul, yul;\n        private String demF;\n\n        private void ExecSplinaCMD_Click(object sender, EventArgs e)\n        {\n\n            int runtimes = GlobVars.resCount % (float)88 == 0 ? Convert.ToInt32(GlobVars.resCount / 88) : Convert.ToInt32(GlobVars.resCount / 88) + 1;\n            String comStr = \"\";\n\n            for (int i = 0; i < runtimes;i++ )\n            {\n                try\n                {\n                    GenerateSplinaCMD(i);\n                }\n                catch (System.Exception ex)\n                {\n                    this.showInfoFun(\"Error in execution！\", 1);\n                    return;\n                }\n                \n            }\n            this.showInfoFun(\"Done！\", 1);\n        }\n\n        private bool GenerateSplinaCMD(int subNum)\n        {\n            spaDir = this.nInterpDir.Text.Trim();\n            ArrayList dataFList = GlobFuncs.getFiles(spaDir,this.dataFile.Text.Trim());\n            demF = spaDir + @\"\\\" + this.demFile.Text.Trim();\n            String spaCMDF = spaDir + @\"\\\" + \"splina\"+subNum.ToString().Trim().PadLeft(5,'0')+\".cmd\";\n            String selCMDF = spaDir + @\"\\\" + \"selnot\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd\";\n            String spbCMDF = spaDir + @\"\\\" + \"splinb\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd\";\n\n            ArrayList saIn;\n            ArrayList dsaIn;\n            ArrayList saOut = new ArrayList();\n            ArrayList saOut_sel = new ArrayList();\n            int Knots = 0;\n\n            saOut.Add(DateTime.Now.ToString()); //第1行\n            saOut.Add(getSelVarUnit().ToString().Trim());\n            saOut.Add(\"2\");\n            saOut.Add(\"1\");\n            saOut.Add(\"0\");\n            saOut.Add(\"0\");\n\n            if (GlobFuncs.FileRead(dataFList[subNum].ToString().Trim(), out dsaIn))\n                Knots = Convert.ToInt32(dsaIn.Count / 2);//节点数\n\n            if (spaDir != \"\" && GlobFuncs.FileRead(demF, out saIn))\n            {\n                int i = 0;\n                String[] spstr = saIn[i++].ToString().Trim().Split();\n                pix = Convert.ToDouble(spstr[spstr.Length - 1].Trim());\n\n                spstr = saIn[i++].ToString().Trim().Split();\n                line = Convert.ToDouble(spstr[spstr.Length - 1].Trim());\n\n                spstr = saIn[i++].ToString().Trim().Split();\n                xlr = Convert.ToDouble(spstr[spstr.Length - 1].Trim());\n\n                spstr = saIn[i++].ToString().Trim().Split();\n                ylr = Convert.ToDouble(spstr[spstr.Length - 1].Trim());\n\n                spstr = saIn[i++].ToString().Trim().Split();\n                siz = Convert.ToDouble(spstr[spstr.Length - 1].Trim());\n                xul = xlr + siz * pix;\n                yul = ylr + siz * line;\n\n                saOut.Add((xlr - 10 * siz).ToString().Trim() + \" \" + (xul + 10 * siz).ToString().Trim() + \" 0 5\");\n                saOut.Add((ylr - 10 * siz).ToString().Trim() + \" \" + (yul + 10 * siz).ToString().Trim() + \" 0 5\");\n                saOut.Add(\"0 \" + GlobFuncs.getMax(GlobFuncs.getDataArray(ref saIn, Convert.ToInt32(line), Convert.ToInt32(pix))).ToString().Trim() + \" 1 1\");\n                saOut.Add(\"1000.00\");\n            }\n            else\n                return false;\n            if (this.RGenerateCMD.SelectedIndex == 0)\n            {\n                saOut.Add(\"0\");\n                saOut.Add(\"2\");\n                saOut.Add(GlobVars.realCount[subNum].ToString().Trim());\n                saOut.Add(\"0\");\n                saOut.Add(\"1\");\n                saOut.Add(\"1\");\n                saOut.Add(dataFList[subNum].ToString().Trim());\n                saOut.Add(\"3000\");\n                saOut.Add(\"11\");\n                saOut.Add(\"(a11,2f12.2,f10.3,\" + GlobVars.realCount[subNum].ToString().Trim() + \"f10.2)\");\n                saOut.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".res\");\n                saOut.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".opt\");\n                saOut.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".sur\");\n                saOut.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".lis\");\n                saOut.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cov\");\n                saOut.Add(\"\");\n                saOut.Add(\"\");\n\n                if (GlobFuncs.FileWrite(spaCMDF, ref saOut))\n                    this.showInfoFun(\"Generate Splina\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd successfully！\", 1);\n                else\n                    this.showInfoFun(\"Generate Splina\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd failed！\", 1);\n            }\n            else\n            {\n                saOut_sel.Add(\"2\");\n                saOut_sel.Add(\"1\");\n                saOut_sel.Add(\"0\");\n                saOut_sel.Add(\"0\");\n                saOut_sel.Add((xlr - 10 * siz).ToString().Trim() + \" \" + (xul + 10 * siz).ToString().Trim() + \" 0 5\");\n                saOut_sel.Add((ylr - 10 * siz).ToString().Trim() + \" \" + (yul + 10 * siz).ToString().Trim() + \" 0 5\");\n                saOut_sel.Add(\"0 \" + GlobFuncs.getMax(GlobFuncs.getDataArray(ref saIn, Convert.ToInt32(line), Convert.ToInt32(pix))).ToString().Trim() + \" 1 1\");\n                saOut_sel.Add(\"1000.00\");\n                saOut_sel.Add(\"0\");\n                saOut_sel.Add(GlobVars.realCount[subNum].ToString().Trim()); //\n                saOut_sel.Add(\"0\"); //\n                saOut_sel.Add(dataFList[subNum].ToString().Trim());\n                saOut_sel.Add(\"10000\");\n                saOut_sel.Add(\"11\");\n                saOut_sel.Add(\"(a11,2f12.2,f10.3,\" + GlobVars.realCount[subNum].ToString().Trim() + \"f10.2)\");\n                saOut_sel.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".not\");\n                saOut_sel.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".rej\");\n                saOut_sel.Add(Knots.ToString().Trim());\n\n                if (GlobFuncs.FileWrite(selCMDF, ref saOut_sel))\n                    this.showInfoFun(\"Generate Selnot\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd Successfully！\", 1);\n                else\n                    this.showInfoFun(\"Generate Selnot\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd failed！\", 1);\n\n                saOut.Add(\"0\");\n                saOut.Add(\"2\");\n                saOut.Add(GlobVars.realCount[subNum].ToString().Trim()); //\n                saOut.Add(\"0\");\n                saOut.Add(\"1\");\n                saOut.Add(\"1\");\n                saOut.Add(dataFList[subNum].ToString().Trim());\n                saOut.Add(\"10000\");\n                saOut.Add(\"11\");\n                saOut.Add(\"(a11,2f12.2,f10.3,\" + GlobVars.realCount[subNum].ToString().Trim() + \"f10.2)\");\n                saOut.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5,'0') + \".not\");\n                saOut.Add(\"1000\"); //\n                saOut.Add(\"\");\n                saOut.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".flg\");\n                saOut.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".res\");\n                saOut.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".opt\");\n                saOut.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".sur\");\n                saOut.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".lis\");\n                saOut.Add(spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cov\");\n                saOut.Add(\"\");\n                saOut.Add(\"\");\n\n                if (GlobFuncs.FileWrite(spbCMDF, ref saOut))\n                    this.showInfoFun(\"Generate Splinb\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd successfully！\", 1);\n                else\n                    this.showInfoFun(\"Generate Splinb\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd failed！\", 1);\n            }\n            return true;\n        }\n        private void interCovDir_DoubleClick(object sender, EventArgs e)\n        {\n            this.dirDialog.Description = \"Please set the error result directory\";\n            if (dirDialog.ShowDialog() == DialogResult.OK)\n            {\n                this.interCovDir.Text = dirDialog.SelectedPath;\n            }\n        }\n\n        private void Execlapgrd_Click(object sender, EventArgs e)\n        {\n            long runtimes = GlobVars.realCount.Count;\n            int start = 0;\n            int end = 0;\n\n            for (int i = 0; i < runtimes; i++)\n            {\n                end += Convert.ToInt32(GlobVars.realCount[i]);\n                generateLapgrd(i,start,end);\n                start += Convert.ToInt32(GlobVars.realCount[i]);\n            }\n\n        }\n\n\n        private bool generateLapgrd(int subNum,int start,int end)\n        {\n            long fileCount = Convert.ToInt64(GlobVars.realCount[subNum]);\n            String[] resNames = new String[fileCount];\n            String[] covNames = new String[fileCount];\n            String resPrefix = this.PrefixRes.Text.Trim();\n            String covPrefix = this.PrefixCov.Text.Trim();\n            String resDir = this.interResDir.Text.Trim();\n            String covDir = this.interCovDir.Text.Trim();\n            String covPrjName, resPrjName, demPrj;\n\n            String surF = this.spaDir + @\"\\\" + \"climateVar\"+subNum.ToString().Trim().PadLeft(5,'0')+\".sur\";\n            String covF = this.spaDir + @\"\\\" + \"climateVar\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cov\";\n            ArrayList saOut = new ArrayList();\n\n            String lapCMDF = spaDir + @\"\\\" + \"lapgrd\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd\";\n\n            String SurfNum = \"\";\n            for (int i = start; i < end; i++)\n            {\n                resNames[i-start] = resDir + \"\\\\\" + resPrefix + GlobVars.dateName[i].ToString().Trim() + \".grd\";\n                covNames[i-start] = covDir + \"\\\\\" + covPrefix + GlobVars.dateName[i].ToString().Trim() + \".grd\";\n                resPrjName = resDir + \"\\\\\" + resPrefix + GlobVars.dateName[i].ToString().Trim() + \".prj\";\n                covPrjName = covDir + \"\\\\\" + covPrefix + GlobVars.dateName[i].ToString().Trim() + \".prj\";\n                demPrj = demF.Replace(\".txt\", \".prj\");\n                File.Copy(demPrj, spaDir + @\"\\\" + resPrjName);\n                File.Copy(demPrj, spaDir + @\"\\\" + covPrjName);\n                SurfNum += (i -start+ 1).ToString().Trim() + \" \";\n            }\n\n            saOut.Add(surF);\n            saOut.Add(SurfNum.Trim());\n            saOut.Add(\"1\");\n            saOut.Add(covF);\n            saOut.Add(\"2\");\n            saOut.Add(\"\");\n            saOut.Add(\"1\");\n            saOut.Add(\"1\");\n            saOut.Add(xlr.ToString().Trim() + \" \" + xul.ToString().Trim() + \" \" + siz.ToString().Trim());\n            saOut.Add(\"2\");\n            saOut.Add(ylr.ToString().Trim() + \" \" + yul.ToString().Trim() + \" \" + siz.ToString().Trim());\n            saOut.Add(\"0\");\n            saOut.Add(\"2\");\n            saOut.Add(demF);\n            saOut.Add(\"2\");\n            saOut.Add(\"-9999.0\");\n            for (int i = 0; i < fileCount; i++)\n                saOut.Add(resNames[i]);\n            saOut.Add(\"(\" + pix.ToString().Trim() + \"f10.2)\");\n\n            saOut.Add(\"2\");\n            saOut.Add(\"-9999.0\");\n            for (int i = 0; i < fileCount; i++)\n                saOut.Add(covNames[i]);\n            saOut.Add(\"(\" + pix.ToString().Trim() + \"f10.2)\");\n\n            if (GlobFuncs.FileWrite(lapCMDF, ref saOut))\n            {\n                this.showInfoFun(\"Generate lapgrd\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd successfully！\", 1);\n                return true;\n            }\n            else\n            {\n                this.showInfoFun(\"Generate lapgrd\" + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd failed！\", 1);\n                return false;\n            }\n        }\n\n\n        private void radioGroup1_SelectedIndexChanged(object sender, EventArgs e)\n        {\n            if (this.radioGroup1.SelectedIndex == 1)\n            {\n                this.Execselnot.Enabled = true;\n                selnotcmd.Enabled = true;\n                splinaExe.Text = \"第二步：运行Splinb命令\";\n                lapgrdExe.Text = \"第三步：运行lapgrd命令\";\n                splinabcmdFN.Text = \"splinb.cmd\";\n            }\n            else\n            {\n                this.Execselnot.Enabled = false;\n                selnotcmd.Enabled = false;\n                splinaExe.Text = \"第一步：运行Splina命令\";\n                lapgrdExe.Text = \"第二步：运行lapgrd命令\";\n                splinabcmdFN.Text = \"splina.cmd\";\n            }\n        }\n\n        private void RGenerateCMD_SelectedIndexChanged(object sender, EventArgs e)\n        {\n            if (this.RGenerateCMD.SelectedIndex == 1)\n            {\n                this.ExecSplinaCMD.Text = \"Generate selnot.cmd, splinb.cmd, etc.\";\n            }\n            else\n            {\n                this.ExecSplinaCMD.Text = \"Generate splina.cmd\";\n            }\n        }\n\n        private void Execselnot_Click(object sender, EventArgs e)\n        {\n            int runtimes = GlobFuncs.getFcount(this.nInterpDir1.Text.Trim(), this.selnotcmd.Text.Trim());\n\n            for (int i = 0; i < runtimes; i++)\n                runSelnot(i);\n        }\n\n        private void runSelnot(int subNum)\n        {\n            String tdataDir = this.nInterpDir1.Text.Trim();\n            String selnotcmdPath = this.selnotcmd.Text.Trim();\n            selnotcmdPath = selnotcmdPath.Substring(0, selnotcmdPath.LastIndexOf('.')) + subNum.ToString().Trim().PadLeft(5, '0') + \".cmd\";\n            String selnotLogPath = \"selnot\"+subNum.ToString().Trim().PadLeft(5,'0')+\".log\";\n\n            if (p == null)\n            {\n                try\n                {\n                    p = new System.Diagnostics.Process();\n                    p.StartInfo.FileName = \"cmd.exe\";\n                    p.StartInfo.UseShellExecute = false;\n                    p.StartInfo.RedirectStandardInput = true;\n                    p.StartInfo.RedirectStandardOutput = true;\n                    p.StartInfo.CreateNoWindow = true;\n                    p.StartInfo.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;\n                    p.Start();\n                    p.StandardInput.WriteLine(\"cd /d \" + tdataDir);\n                    p.StandardInput.WriteLine(GlobVars.selnotPath + \"<\" + selnotcmdPath + \">\" + selnotLogPath);\n                    p.StandardInput.WriteLine(\"exit\");\n                    p.WaitForExit();\n                    //this.showInfoFun(p.StandardOutput.ReadToEnd(), 1);\n                    p = null;\n                }\n                catch (System.Exception ex)\n                {\n                    this.showInfoFun(\"An error occurred. Please check if the file already exists!\", 1);\n                }\n                this.showInfoFun(\"The command of selnot has finished runing-->\" + selnotcmdPath, 1);\n            }\n        }\n        private void pdfAbout_DoubleClick(object sender, EventArgs e)\n        {\n            \n        }\n\n        private void pdfAbout_MouseHover(object sender, EventArgs e)\n        {\n\n        }\n\n        private void QueryStats_Click(object sender, EventArgs e)\n        {\n            String sql;\n\n            MeteoDB mdb = new MeteoDB();\n\n            sql = \"SELECT  code as Station,X as Lon, Y as Lat, elev as Elev,stationName as StationName,regionalName as Region FROM station as T WHERE 1=1\";\n            DataSet ds = mdb.GetDataFromDB(sql);\n            if (ds != null)\n            {\n                gridView2.ViewCaption = \"The total number of stations is \" + ds.Tables[0].Rows.Count.ToString().Trim();\n                gridControl2.DataSource = ds.Tables[0];\n                gridView2.RefreshData();\n                this.showInfoFun(\"Query successfully！\", 1);\n            }\n            else\n            {\n                gridView2.ViewCaption = \"There are 0 records in this query\";\n                gridControl2.DataSource = null;\n                gridView2.RefreshData();\n                this.showInfoFun(\"No records found for this station！\", 1);\n            }\n        }\n\n        private void StationCDB_CheckedChanged(object sender, EventArgs e)\n        {\n            if (StationCDB.Checked == true)\n            {\n                GlobVars.dbName =  \"MeteoData\";\n                StationADB.Checked = false;\n            }\n        }\n\n        private void StationADB_CheckedChanged(object sender, EventArgs e)\n        {\n            if (StationADB.Checked == true)\n            {\n                GlobVars.dbName = \"MeteoData_extens\";\n                StationCDB.Checked = false;\n\n            }\n        }\n\n        private void LookStasB_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (CheckStats.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n                CheckStats.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            else\n                CheckStats.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void sCDB_CheckedChanged(object sender, EventArgs e)\n        {\n            if (sCDB.Checked == true)\n            {\n                GlobVars.dbName = \"MeteoData\";\n                sADB.Checked = false;\n            }\n        }\n\n        private void sADB_CheckedChanged(object sender, EventArgs e)\n        {\n            if (sADB.Checked == true)\n            {\n                GlobVars.dbName = \"MeteoData_extens\";\n                sCDB.Checked = false;\n\n            }\n        }\n\n        private void ExecEmptysDB_Click(object sender, EventArgs e)\n        {\n            String sql;\n\n            MeteoDB mdb = new MeteoDB();\n\n            DataSet ds;\n\n            sql = \"DELETE FROM station\";\n            try\n            {\n                ds = mdb.GetDataFromDB(sql);\n\n                if (ds == null)\n                    this.showInfoFun(\"Table [Station] clearing completed!\", 1);\n            }\n            catch (System.Exception ex)\n            {\n                this.showInfoFun(\"Table [Station] empty failed!\", 1);\n            }\n        }\n\n        private void deleteStats_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (emptysTable.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n                emptysTable.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            else\n                emptysTable.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void splitContainerControl1_Resize(object sender, EventArgs e)\n        {\n            if(this.WindowState==FormWindowState.Maximized)\n                this.splitContainerControl1.SplitterPosition = (int)((this.splitContainerControl1.Height) * 0.82);\n            else if(this.WindowState==FormWindowState.Normal)\n                this.splitContainerControl1.SplitterPosition = (int)((this.splitContainerControl1.Height) * 0.72);\n            else\n                this.splitContainerControl1.SplitterPosition = (int)((this.splitContainerControl1.Height) * 0.76);\n        }\n\n        private void databaseSet_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (this.dbconnectSet.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n            {\n                ArrayList saIn;\n                if(getDBConn(out saIn))\n                {\n                    dbConnSet(ref saIn);\n                }\n                else\n                    this.showInfoFun(\"Please configure database link parameters!\", 1);\n                \n                dbconnectSet.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            }\n            else\n                dbconnectSet.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n        private bool getDBConn(out ArrayList saIn)\n        {\n            try\n            {\n                GlobFuncs.FileRead(\"config.maps\", out saIn);\n                if (saIn==null || saIn.Count < 3)\n                    return false;\n                else\n                    return true;\n            }\n            catch (System.Exception ex)\n            {\n                saIn = null;\n                return false;\n            }\n        }\n\n        private void dbConnSet(ref ArrayList saIn)\n        {\n            this.ipaddr.Text = saIn[0].ToString().Trim();\n            this.dbuserid.Text = saIn[1].ToString().Trim();\n            this.dbpass.Text = saIn[2].ToString().Trim();\n            GlobVars.dbList.Add(this.ipaddr.Text);\n            GlobVars.dbList.Add(this.dbuserid.Text);\n            GlobVars.dbList.Add(this.dbpass.Text);\n        }\n        private void testConn_Click(object sender, EventArgs e)\n        {\n            GlobVars.preDB = this.dbpre.Text.Trim();\n\n            string mysqlStr = \"server=\" + this.ipaddr.Text.Trim() + \";user id=\" + this.dbuserid.Text.Trim() + \";password=\" + this.dbpass.Text.Trim() + \";pooling=false;charset=utf8;port=3306;database=\" + GlobVars.preDB+GlobVars.dbName;\n\n            MySqlConnection conn = new MySqlConnection(mysqlStr);\n\n            try\n            {\n                conn.Open();\n            }\n            catch (System.Exception ex)\n            {\n            \tthis.showInfoFun(\"Database link failed!\", 1);\n                return;\n            }\n            this.showInfoFun(\"Database link succeeded!\", 1);\n            conn.Close();\n                \n\n        }\n\n        private void dbconnectSet_Click(object sender, EventArgs e)\n        {\n\n        }\n\n        private void saveXML_Click(object sender, EventArgs e)\n        {\n            if (this.ipaddr.Text.Trim() != \"\" && this.dbuserid.Text.Trim() != \"\" && this.dbpass.Text.Trim() != \"\")\n            {\n                GlobVars.dbList.Clear();\n                GlobVars.dbList.Add(this.ipaddr.Text.Trim());\n                GlobVars.dbList.Add(this.dbuserid.Text.Trim());\n                GlobVars.dbList.Add(this.dbpass.Text.Trim());\n                GlobFuncs.FileWrite(\"config.maps\", ref GlobVars.dbList);\n                this.showInfoFun(\"Database configuration file saved successfully!\",1);\n            }\n            \n        }\n\n        private void dbInit_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            String[] dbName = { \"MeteoData\",  \"MeteoData_extens\" };\n            MeteoDB mdb;\n            String sql;\n            foreach (String dbn in dbName)\n            {\n                GlobVars.dbName = dbn;\n                mdb = new MeteoDB();\n\n                sql = \"CREATE TABLE station (code varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,\"+\n                        \"X tinytext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,\"+\n                        \"Y tinytext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,\"+\n                        \"elev tinytext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,\"+\n                        \"stationName tinytext CHARACTER SET utf8 COLLATE utf8_general_ci,\"+\n                        \"regionalName tinytext CHARACTER SET utf8 COLLATE utf8_general_ci,\"+\n                        \"PRIMARY KEY (code)) ENGINE=InnoDB DEFAULT CHARSET=utf8\";\n                if (!mdb.AlterTable(sql))\n                    this.showInfoFun(GlobVars.dbName + \"initialization failed!\", 1);\n                else\n                    this.showInfoFun(GlobVars.dbName + \"initialization succeeded!\", 1);\n            }\n            \n            \n        }\n\n        private void dirDialog_HelpRequest(object sender, EventArgs e)\n        {\n\n        }\n\n        private void AnusplinM_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (CheckInterp.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n            {\n                CheckInterp.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            }\n            else\n                CheckInterp.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n        }\n\n        private void IDWMethod_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n        {\n            if (IDWP.Visibility == DevExpress.XtraBars.Docking.DockVisibility.Hidden)\n            {\n                IDWP.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Visible;\n            }\n            else\n                IDWP.Visibility = DevExpress.XtraBars.Docking.DockVisibility.Hidden;\n            //this.showInfoFun(\"This function will be open soon.\", 1);\n        }\n\n        private void runIDW_Click(object sender, EventArgs e)\n        {\n            String outDir=this.idwdirT.Text.Trim();\n            if(outDir == \"\")\n            {\n                this.showInfoFun(\"Please input the out directory!\",1);\n                return;\n            }\n            String referRPath = this.referRasterT.Text.Trim();\n            IRasterProps rastProps;\n            GridIO GIO;\n            if (File.Exists(referRPath))\n            {\n                rastProps = getRasterProp(referRPath);\n                GIO = new GridIO();\n            }\n            else\n            {\n                this.showInfoFun(\"Error reading reference data, please check!\", 1);\n                return;\n            }\n            if (!GIO.initProps(rastProps))\n            {\n                this.showInfoFun(\"Initing raster property failed, please check the reference data\", 1);\n                return;\n            }\n            //Actual number of stations:  GlobVars.stationNum\n            //Actual length of records:   GlobVars.resCount\n            //Init GIO.GridValue\n            if (!GIO.initGridInfo())\n            {\n                this.showInfoFun(\"Initing out grid property failed!\", 1);\n                return;\n            }\n            String outname=\"\";//output filename\n            for (int i = 0; i < GlobVars.resCount; i++)\n            {\n                outname=outDir+\"\\\\\"+GlobVars.dateName[i]+\".tif\";\n                this.showInfoFun(\"Generating \"+outname+\", please wait...\",1);\n                this.reReshText();\n                int rc=0;//actual counter of station\n                GIO.mDInfo.mData = new double[GlobVars.stationNum];\n                for (int j = 0; j < GlobVars.mStruct.mData.Length; j++)\n                {\n                    if (GlobVars.mStruct.mData[j].stasCode != \"-1\")\n                    {\n                        GIO.mDInfo.mData[rc] = GlobVars.mStruct.mData[j].climData[i];\n                        rc++;\n                    }\n                }\n                if (!GIO.IDW2Raster())\n                        this.showInfoFun(\"Interpolation operation failed!\", 1);\n\n                GIO.createFileRasterDataset(outDir, outname, ref GIO);\n            }\n            this.showInfoFun(\"Interpolation finished!\", 1);\n        }\n\n        public void reReshText()\n        {\n            this.showInfo.Update();\n            this.Refresh();\n        }\n\n        private IRasterProps getRasterProp(String filepath)\n        {\n            IRasterDataset rastDs = ReadGridData(filepath);\n            IRaster rast = rastDs.CreateDefaultRaster();\n            return (IRasterProps)rast;\n            \n        }\n\n        private IRasterDataset ReadGridData(String strPath)\n        {\n            try\n            {\n                String path;\n                String fname;\n\n                //\n                //读取单波段数据\n                //\n                if (strPath != \"\")\n                {\n                    //首先解析文件目录和文件名\n\n                    int loc1;\n                    loc1 = strPath.LastIndexOf(\"\\\\\");\n                    path = strPath.Substring(0, loc1);\n                    fname = strPath.Substring(loc1 + 1);\n\n                    IWorkspaceFactory wsf = new RasterWorkspaceFactory();\n                    IWorkspace ws = wsf.OpenFromFile(path, 0);\n                    if (ws == null)\n                        return null;\n                    else\n                    {\n                        IRasterWorkspace rastwork = (IRasterWorkspace)ws;\n                        IRasterDataset rastDs = rastwork.OpenRasterDataset(fname);\n                        return rastDs;\n                    }\n                }\n                else\n                    return null;\n            }\n            catch (Exception ex)\n            {\n                return null;\n            }\n\n        }\n\n        private void idwdirsel_Click(object sender, EventArgs e)\n        {\n            this.dirDialog.Description = \"Please set the output directory\";\n            if (dirDialog.ShowDialog() == DialogResult.OK)\n            {\n                this.idwdirT.Text = dirDialog.SelectedPath;\n            }\n        }\n\n        private void simpleButton6_Click(object sender, EventArgs e)\n        {\n            String filename = GlobFuncs.openFile(openFileDialog1, \"TIFF(*.tif)|*.tif\");\n            if (filename.Trim() != \"\")\n                this.referRasterT.Text = filename;\n        }\n\n        private void checkEdit1_CheckedChanged(object sender, EventArgs e)\n        {\n            if (isChecked.Checked)\n                this.InterpPath.Enabled = true;\n            else\n                this.InterpPath.Enabled = false;\n        }\n        \n    }\n}\n",
							"origin_encoding": "UTF-8-SIG",
							"syntax": "Packages/C#/C#.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 55683.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/E/public/数据/reult/dem.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 38505699,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"is_init_dirty_state": false,
							"origin_encoding": "ASCII",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/E/public/sjy/MTEM/splina_2019.cmd",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 403,
						"regions":
						{
						},
						"selection":
						[
							[
								177,
								177
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"color_scheme": "Packages/Color Scheme - Default/Monokai.sublime-color-scheme",
							"is_init_dirty_state": false,
							"origin_encoding": "ASCII",
							"syntax": "Packages/Batch File/Batch File.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/E/public/sjy/MTEM/lapgrd_2019.cmd",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1491,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"color_scheme": "Packages/Color Scheme - Default/Monokai.sublime-color-scheme",
							"is_init_dirty_state": false,
							"origin_encoding": "ASCII",
							"syntax": "Packages/Batch File/Batch File.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 216.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/E/public/sjy/MTEM/lapgrd_2020.cmd",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1728,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"origin_encoding": "ASCII",
							"syntax": "Packages/Batch File/Batch File.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/E/public/数据/reult/lapgrd00000.cmd",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 410,
						"regions":
						{
						},
						"selection":
						[
							[
								130,
								130
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"color_scheme": "Packages/Color Scheme - Default/Monokai.sublime-color-scheme",
							"in_converting": true,
							"is_init_dirty_state": false,
							"origin_content": "Z:\\public\\数据\\reult\\climateVar00000.sur\n1 2 3 4\n1\nZ:\\public\\数据\\reult\\climateVar00000.cov\n2\n\n1\n1\n225963.48315982 941463.48315982 250\n2\n2460313.928868 3321313.928868 250\n0\n2\nZ:\\public\\数据\\reult\\dem.txt\n2\n-9999.0\nRES\\RES_20190101.grd\nRES\\RES_20190109.grd\nRES\\RES_20190117.grd\nRES\\RES_20190125.grd\n(2862f10.2)\n2\n-9999.0\nCOV\\COV_20190101.grd\nCOV\\COV_20190109.grd\nCOV\\COV_20190117.grd\nCOV\\COV_20190125.grd\n(2862f10.2)\n",
							"origin_encoding": "GB2312",
							"syntax": "Packages/Batch File/Batch File.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 73.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 146.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "C and C++.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"E:\\Study\\Projects\\C++ and C\\C-C++.sublime-workspace"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 197.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
